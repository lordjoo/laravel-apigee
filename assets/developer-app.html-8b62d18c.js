import{_ as c,M as o,p as r,q as d,R as e,t as a,N as n,V as l,a1 as t}from"./framework-5866ffd3.js";const i={},u=t(`<h1 id="developer-app" tabindex="-1"><a class="header-anchor" href="#developer-app" aria-hidden="true">#</a> Developer App</h1><h2 id="operations" tabindex="-1"><a class="header-anchor" href="#operations" aria-hidden="true">#</a> Operations</h2><p>You can use <code>developerApp()</code> method which takes one parameter <code>$dev_email</code> (Developer email) and returns an instance of <code>DeveloperAppService</code> class. which gives you access to all developer app operations.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package"><span class="token punctuation">\\</span>Lordjoo<span class="token punctuation">\\</span>Apigee<span class="token punctuation">\\</span>Facades<span class="token punctuation">\\</span>Apigee</span><span class="token punctuation">;</span>
<span class="token variable">$service</span> <span class="token operator">=</span> <span class="token class-name static-context">Apigee</span><span class="token operator">::</span><span class="token function">developerApp</span><span class="token punctuation">(</span><span class="token variable">$dev_email</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="list-all-developer-apps" tabindex="-1"><a class="header-anchor" href="#list-all-developer-apps" aria-hidden="true">#</a> List all Developer Apps</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package"><span class="token punctuation">\\</span>Lordjoo<span class="token punctuation">\\</span>Apigee<span class="token punctuation">\\</span>Facades<span class="token punctuation">\\</span>Apigee</span><span class="token punctuation">;</span>
<span class="token variable">$apps</span> <span class="token operator">=</span> <span class="token class-name static-context">Apigee</span><span class="token operator">::</span><span class="token function">developerApp</span><span class="token punctuation">(</span><span class="token variable">$dev_email</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Returns an collection of <a href="#properties">DeveloperApp</a> objects.</p><h3 id="create-a-developer-app" tabindex="-1"><a class="header-anchor" href="#create-a-developer-app" aria-hidden="true">#</a> Create a Developer App</h3>`,8),h=e("code",null,"create",-1),k=e("code",null,"create",-1),v=e("code",null,"$data",-1),_={href:"https://apidocs.apigee.com/docs/api-products/1/types/APIProductRequest",target:"_blank",rel:"noopener noreferrer"},m=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package"><span class="token punctuation">\\</span>Lordjoo<span class="token punctuation">\\</span>Apigee<span class="token punctuation">\\</span>Facades<span class="token punctuation">\\</span>Apigee</span><span class="token punctuation">;</span>
<span class="token variable">$app</span> <span class="token operator">=</span> <span class="token class-name static-context">Apigee</span><span class="token operator">::</span><span class="token function">developerApp</span><span class="token punctuation">(</span><span class="token variable">$dev_email</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="entity" tabindex="-1"><a class="header-anchor" href="#entity" aria-hidden="true">#</a> Entity</h2><h3 id="properties" tabindex="-1"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> Properties</h3>`,3),b=e("thead",null,[e("tr",null,[e("th",null,"Property"),e("th",null,"Type"),e("th",null,"Description")])],-1),g=e("tr",null,[e("td",null,"name"),e("td",null,"string"),e("td",null,"The name of the app.")],-1),f=e("tr",null,[e("td",null,"status"),e("td",null,"string"),e("td",null,"The status of the app.")],-1),A=e("tr",null,[e("td",null,"appFamily"),e("td",null,"string"),e("td",null,"The app family.")],-1),x=e("tr",null,[e("td",null,"scopes"),e("td",null,"array"),e("td",null,"The scopes associated with the app.")],-1),y=e("tr",null,[e("td",null,"callbackUrl"),e("td",null,"string"),e("td",null,"The callback URL.")],-1),w=e("tr",null,[e("td",null,"createdBy"),e("td",null,"string"),e("td",null,"The user who created the app.")],-1),P=e("td",null,"createdAt",-1),T={href:"https://carbon.nesbot.com/docs/",target:"_blank",rel:"noopener noreferrer"},$=e("td",null,"The date and time the app was created.",-1),C=e("tr",null,[e("td",null,"lastModifiedBy"),e("td",null,"string"),e("td",null,"The user who last modified the app.")],-1),I=e("td",null,"lastModifiedAt",-1),L={href:"https://carbon.nesbot.com/docs/",target:"_blank",rel:"noopener noreferrer"},D=e("td",null,"The date and time the app was last modified.",-1),R=e("tr",null,[e("td",null,"developerId"),e("td",null,"string"),e("td",null,"The developer ID.")],-1),B=e("td",null,"attributes",-1),N=e("td",null,"Attributes of the API Product",-1),V=e("td",null,"credentials",-1),j=e("td",null,"Credentials of the app.",-1),E=t(`<h3 id="methods" tabindex="-1"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h3><h4 id="approve" tabindex="-1"><a class="header-anchor" href="#approve" aria-hidden="true">#</a> approve()</h4><p>Change the status of the app to <code>approved</code>.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$app</span><span class="token operator">-&gt;</span><span class="token function">approve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="revoke" tabindex="-1"><a class="header-anchor" href="#revoke" aria-hidden="true">#</a> revoke()</h4><p>Change the status of the app to <code>revoked</code>.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$app</span><span class="token operator">-&gt;</span><span class="token function">revoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,7);function F(M,q){const s=o("ExternalLinkIcon"),p=o("RouterLink");return r(),d("div",null,[u,e("p",null,[a("Using the "),h,a(" method, you can create an API Product. the "),k,a(" method accepts one parameter "),v,a(" which is an array of the API Product properties "),e("a",_,[a("APIProductRequest"),n(s)])]),m,e("table",null,[b,e("tbody",null,[g,f,A,x,y,w,e("tr",null,[P,e("td",null,[e("a",T,[a("Carbon"),n(s)])]),$]),C,e("tr",null,[I,e("td",null,[e("a",L,[a("Carbon"),n(s)])]),D]),R,e("tr",null,[B,e("td",null,[n(p,{to:"/guide/entities/attribute.html"},{default:l(()=>[a("Attribute[]")]),_:1})]),N]),e("tr",null,[V,e("td",null,[n(p,{to:"/guide/entities/app-key.html"},{default:l(()=>[a("Credential[]")]),_:1})]),j])])]),E])}const S=c(i,[["render",F],["__file","developer-app.html.vue"]]);export{S as default};
