import{_ as a,p as e,q as n,a1 as s}from"./framework-5866ffd3.js";const i={},t=s(`<h1 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h1><p>Laravel Apigee is a Laravel package built to enable Laravel developers to easily communicate with Apigee edge through it&#39;s Management API.</p><h2 id="prerequisites" tabindex="-1"><a class="header-anchor" href="#prerequisites" aria-hidden="true">#</a> Prerequisites</h2><ul><li>Laravel 9.x or higher</li></ul><h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h2><p>You can install the package via composer:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">composer</span> require lordjoo/laravel-apigee
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>The package will automatically register itself.</p><p>Publish the config file with:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php artisan vendor:publish <span class="token parameter variable">--provider</span><span class="token operator">=</span><span class="token string">&quot;Lordjoo\\Apigee\\ApigeeServiceProvider&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration" aria-hidden="true">#</a> Configuration</h2><p>Set the following environment variables in your <code>.env</code> file:</p><div class="language-dotenv line-numbers-mode" data-ext="dotenv"><pre class="language-dotenv"><code>APIGEE_ENDPOINT=
APIGEE_USERNAME=
APIGEE_PASSWORD=
APIGEE_ORGANIZATION=
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">Note</p><p>At the moment, the package only supports Basic Authentication.</p></div><h2 id="how-to-use" tabindex="-1"><a class="header-anchor" href="#how-to-use" aria-hidden="true">#</a> How to use</h2><p>Laravel Apigee create singleton instance of Apigee class, so you can use it anywhere in your application.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package"><span class="token punctuation">\\</span>Lordjoo<span class="token punctuation">\\</span>Apigee<span class="token punctuation">\\</span>Apigee</span><span class="token punctuation">;</span>

<span class="token variable">$client</span> <span class="token operator">=</span> <span class="token function">app</span><span class="token punctuation">(</span><span class="token class-name static-context">Apigee</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can also use the Apigee Facade as well</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package"><span class="token punctuation">\\</span>Lordjoo<span class="token punctuation">\\</span>Apigee<span class="token punctuation">\\</span>Facades<span class="token punctuation">\\</span>Apigee</span><span class="token punctuation">;</span>

<span class="token variable">$apis</span> <span class="token operator">=</span> <span class="token class-name static-context">Apigee</span><span class="token operator">::</span><span class="token function">apiProxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19),o=[t];function p(c,l){return e(),n("div",null,o)}const d=a(i,[["render",p],["__file","index.html.vue"]]);export{d as default};
