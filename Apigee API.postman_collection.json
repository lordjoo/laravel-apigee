{
	"info": {
		"_postman_id": "ae95f0b3-36ca-42de-a232-1f98b39f51f8",
		"name": "Apigee API",
		"description": "Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "6069609"
	},
	"item": [
		{
			"name": "v1",
			"item": [
				{
					"name": "organizations",
					"item": [
						{
							"name": "{organizationsId}",
							"item": [
								{
									"name": "instances",
									"item": [
										{
											"name": "{instancesId}",
											"item": [
												{
													"name": "natAddresses",
													"item": [
														{
															"name": "{natAddressesId}",
															"item": [
																{
																	"name": "Delete Nat Address",
																	"request": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/instances/:instancesId/natAddresses/:natAddressesId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"instances",
																				":instancesId",
																				"natAddresses",
																				":natAddressesId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the nat address. Use the following structure in your request: `organizations/{org}/instances/{instances}/natAddresses/{nataddress}``"
																				},
																				{
																					"key": "instancesId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "natAddressesId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Deletes the NAT address. Connections that are actively using the address are drained before it is removed. **Note:** Not supported for Apigee hybrid."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/instances/:instancesId/natAddresses/:natAddressesId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"instances",
																						":instancesId",
																						"natAddresses",
																						":natAddressesId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the nat address. Use the following structure in your request: `organizations/{org}/instances/{instances}/natAddresses/{nataddress}``"
																						},
																						{
																							"key": "instancesId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "natAddressesId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "null"
																		}
																	]
																},
																{
																	"name": "Get Nat Address",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/instances/:instancesId/natAddresses/:natAddressesId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"instances",
																				":instancesId",
																				"natAddresses",
																				":natAddressesId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the nat address. Use the following structure in your request: `organizations/{org}/instances/{instances}/natAddresses/{nataddress}`"
																				},
																				{
																					"key": "instancesId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "natAddressesId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Gets the details of a NAT address. **Note:** Not supported for Apigee hybrid."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/instances/:instancesId/natAddresses/:natAddressesId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"instances",
																						":instancesId",
																						"natAddresses",
																						":natAddressesId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the nat address. Use the following structure in your request: `organizations/{org}/instances/{instances}/natAddresses/{nataddress}`"
																						},
																						{
																							"key": "instancesId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "natAddressesId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"name\": \"veniam anim\",\n  \"ipAddress\": \"eiusmod adipisicing\",\n  \"state\": \"DELETING\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "Create Nat Address",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"Ut consectetur eu\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/instances/:instancesId/natAddresses",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"instances",
																		":instancesId",
																		"natAddresses"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. Name of the instance. Use the following structure in your request: `organizations/{org}/instances/{instance}`"
																		},
																		{
																			"key": "instancesId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Creates a NAT address. The address is created in the RESERVED state and a static external IP address will be provisioned. At this time, the instance will not use this IP address for Internet egress traffic. The address can be activated for use once any required firewall IP whitelisting has been completed. **Note:** Not supported for Apigee hybrid."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"Ut consectetur eu\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/instances/:instancesId/natAddresses",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"instances",
																				":instancesId",
																				"natAddresses"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. Name of the instance. Use the following structure in your request: `organizations/{org}/instances/{instance}`"
																				},
																				{
																					"key": "instancesId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														},
														{
															"name": "List Nat Addresses",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/instances/:instancesId/natAddresses?pageSize=87452072&pageToken=labore quis Ut",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"instances",
																		":instancesId",
																		"natAddresses"
																	],
																	"query": [
																		{
																			"key": "pageSize",
																			"value": "87452072",
																			"description": "Maximum number of natAddresses to return. Defaults to 25."
																		},
																		{
																			"key": "pageToken",
																			"value": "labore quis Ut",
																			"description": "Page token, returned from a previous ListNatAddresses call, that you can use to retrieve the next page of content."
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. Name of the instance. Use the following structure in your request: `organizations/{org}/instances/{instance}`"
																		},
																		{
																			"key": "instancesId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Lists the NAT addresses for an Apigee instance. **Note:** Not supported for Apigee hybrid."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/instances/:instancesId/natAddresses?pageSize=87452072&pageToken=labore quis Ut",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"instances",
																				":instancesId",
																				"natAddresses"
																			],
																			"query": [
																				{
																					"key": "pageSize",
																					"value": "87452072"
																				},
																				{
																					"key": "pageToken",
																					"value": "labore quis Ut"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. Name of the instance. Use the following structure in your request: `organizations/{org}/instances/{instance}`"
																				},
																				{
																					"key": "instancesId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"nextPageToken\": \"est in ut\",\n  \"natAddresses\": [\n    {\n      \"name\": \"in nostrud eu dolor\",\n      \"ipAddress\": \"aliqua ullamco\",\n      \"state\": \"RESERVED\"\n    },\n    {\n      \"name\": \"ad\",\n      \"ipAddress\": \"culpa eiusmod aliquip\",\n      \"state\": \"RESERVED\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Activate Nat Address",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/instances/:instancesId/natAddresses/{{natAddressesId}}:activate",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"instances",
																		":instancesId",
																		"natAddresses",
																		"{{natAddressesId}}:activate"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the nat address. Use the following structure in your request: `organizations/{org}/instances/{instances}/natAddresses/{nataddress}``"
																		},
																		{
																			"key": "instancesId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Activates the NAT address. The Apigee instance can now use this for Internet egress traffic. **Note:** Not supported for Apigee hybrid."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/instances/:instancesId/natAddresses/{{natAddressesId}}:activate",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"instances",
																				":instancesId",
																				"natAddresses",
																				"{{natAddressesId}}:activate"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the nat address. Use the following structure in your request: `organizations/{org}/instances/{instances}/natAddresses/{nataddress}``"
																				},
																				{
																					"key": "instancesId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														}
													]
												},
												{
													"name": "attachments",
													"item": [
														{
															"name": "{attachmentsId}",
															"item": [
																{
																	"name": "Get Instance Attachment",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/instances/:instancesId/attachments/:attachmentsId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"instances",
																				":instancesId",
																				"attachments",
																				":attachmentsId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the attachment. Use the following structure in your request: `organizations/{org}/instances/{instance}/attachments/{attachment}`"
																				},
																				{
																					"key": "instancesId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "attachmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Gets an attachment. **Note:** Not supported for Apigee hybrid."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/instances/:instancesId/attachments/:attachmentsId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"instances",
																						":instancesId",
																						"attachments",
																						":attachmentsId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the attachment. Use the following structure in your request: `organizations/{org}/instances/{instance}/attachments/{attachment}`"
																						},
																						{
																							"key": "instancesId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "attachmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "null"
																		}
																	]
																},
																{
																	"name": "Delete Instance Attachment",
																	"request": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/instances/:instancesId/attachments/:attachmentsId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"instances",
																				":instancesId",
																				"attachments",
																				":attachmentsId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the attachment. Use the following structure in your request: `organizations/{org}/instances/{instance}/attachments/{attachment}`."
																				},
																				{
																					"key": "instancesId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "attachmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Deletes an attachment. **Note:** Not supported for Apigee hybrid."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/instances/:instancesId/attachments/:attachmentsId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"instances",
																						":instancesId",
																						"attachments",
																						":attachmentsId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the attachment. Use the following structure in your request: `organizations/{org}/instances/{instance}/attachments/{attachment}`."
																						},
																						{
																							"key": "instancesId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "attachmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "null"
																		}
																	]
																}
															]
														},
														{
															"name": "List Instance Attachments",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/instances/:instancesId/attachments?pageSize=87452072&pageToken=labore quis Ut",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"instances",
																		":instancesId",
																		"attachments"
																	],
																	"query": [
																		{
																			"key": "pageSize",
																			"value": "87452072",
																			"description": "Maximum number of instance attachments to return. Defaults to 25."
																		},
																		{
																			"key": "pageToken",
																			"value": "labore quis Ut",
																			"description": "Page token, returned by a previous ListInstanceAttachments call, that you can use to retrieve the next page of content."
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. Name of the organization. Use the following structure in your request: `organizations/{org}/instances/{instance}`"
																		},
																		{
																			"key": "instancesId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Lists all attachments to an instance. **Note:** Not supported for Apigee hybrid."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/instances/:instancesId/attachments?pageSize=87452072&pageToken=labore quis Ut",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"instances",
																				":instancesId",
																				"attachments"
																			],
																			"query": [
																				{
																					"key": "pageSize",
																					"value": "87452072"
																				},
																				{
																					"key": "pageToken",
																					"value": "labore quis Ut"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. Name of the organization. Use the following structure in your request: `organizations/{org}/instances/{instance}`"
																				},
																				{
																					"key": "instancesId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														},
														{
															"name": "Create Instance Attachment",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"environment\": \"in occaecat\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/instances/:instancesId/attachments",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"instances",
																		":instancesId",
																		"attachments"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. Name of the instance. Use the following structure in your request: `organizations/{org}/instances/{instance}`."
																		},
																		{
																			"key": "instancesId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Creates a new attachment of an environment to an instance. **Note:** Not supported for Apigee hybrid."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"environment\": \"in occaecat\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/instances/:instancesId/attachments",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"instances",
																				":instancesId",
																				"attachments"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. Name of the instance. Use the following structure in your request: `organizations/{org}/instances/{instance}`."
																				},
																				{
																					"key": "instancesId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														}
													]
												},
												{
													"name": "canaryevaluations",
													"item": [
														{
															"name": "Create Canary Evaluation",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"metricLabels\": {\n    \"location\": \"pariatur mollit nostrud ex eu\",\n    \"env\": \"ut ut nulla est\",\n    \"instance_id\": \"dolor reprehenderit dolore cillum\"\n  },\n  \"control\": \"mollit proident\",\n  \"endTime\": \"reprehenderit elit Duis\",\n  \"startTime\": \"ut ea Lorem\",\n  \"treatment\": \"in laboris deserunt\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/instances/:instancesId/canaryevaluations",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"instances",
																		":instancesId",
																		"canaryevaluations"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. Name of the organization. Use the following structure in your request: `organizations/{org}/instances/{instance}`."
																		},
																		{
																			"key": "instancesId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Creates a new canary evaluation for an organization."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"metricLabels\": {\n    \"location\": \"pariatur mollit nostrud ex eu\",\n    \"env\": \"ut ut nulla est\",\n    \"instance_id\": \"dolor reprehenderit dolore cillum\"\n  },\n  \"control\": \"mollit proident\",\n  \"endTime\": \"reprehenderit elit Duis\",\n  \"startTime\": \"ut ea Lorem\",\n  \"treatment\": \"in laboris deserunt\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/instances/:instancesId/canaryevaluations",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"instances",
																				":instancesId",
																				"canaryevaluations"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. Name of the organization. Use the following structure in your request: `organizations/{org}/instances/{instance}`."
																				},
																				{
																					"key": "instancesId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														},
														{
															"name": "Get Canary Evaluation",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/instances/:instancesId/canaryevaluations/:canaryevaluationsId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"instances",
																		":instancesId",
																		"canaryevaluations",
																		":canaryevaluationsId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the CanaryEvaluation. Use the following structure in your request: `organizations/{org}/instances/*/canaryevaluations/{evaluation}`"
																		},
																		{
																			"key": "instancesId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		},
																		{
																			"key": "canaryevaluationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Gets a CanaryEvaluation for an organization."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/instances/:instancesId/canaryevaluations/:canaryevaluationsId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"instances",
																				":instancesId",
																				"canaryevaluations",
																				":canaryevaluationsId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the CanaryEvaluation. Use the following structure in your request: `organizations/{org}/instances/*/canaryevaluations/{evaluation}`"
																				},
																				{
																					"key": "instancesId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "canaryevaluationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"createTime\": \"non nostrud\",\n  \"metricLabels\": {\n    \"location\": \"officia\",\n    \"env\": \"et sed dolor magna\",\n    \"instance_id\": \"sit in mollit labore ut\"\n  },\n  \"control\": \"enim dolore\",\n  \"verdict\": \"VERDICT_UNSPECIFIED\",\n  \"endTime\": \"sunt consequ\",\n  \"startTime\": \"consequat\",\n  \"treatment\": \"sed do laborum labore rep\",\n  \"state\": \"SUCCEEDED\",\n  \"name\": \"aliqua dolore fugiat pariatur in\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Update Instance",
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"consumerAcceptList\": [\n    \"non irure\",\n    \"nulla commodo\"\n  ],\n  \"ipRange\": \"occaecat sint\",\n  \"diskEncryptionKeyName\": \"d\",\n  \"peeringCidrRange\": \"SLASH_16\",\n  \"displayName\": \"cillum voluptate\",\n  \"location\": \"consequat dolor se\",\n  \"name\": \"c\",\n  \"description\": \"commodo proident in\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/instances/:instancesId?updateMask=labore quis Ut",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"instances",
																":instancesId"
															],
															"query": [
																{
																	"key": "updateMask",
																	"value": "labore quis Ut",
																	"description": "List of fields to be updated."
																}
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Name of the instance. Use the following structure in your request: `organizations/{org}/instances/{instance}`."
																},
																{
																	"key": "instancesId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Updates an Apigee runtime instance. You can update the fields described in NodeConfig. No other fields will be updated. **Note:** Not supported for Apigee hybrid."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PATCH",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"consumerAcceptList\": [\n    \"non irure\",\n    \"nulla commodo\"\n  ],\n  \"ipRange\": \"occaecat sint\",\n  \"diskEncryptionKeyName\": \"d\",\n  \"peeringCidrRange\": \"SLASH_16\",\n  \"displayName\": \"cillum voluptate\",\n  \"location\": \"consequat dolor se\",\n  \"name\": \"c\",\n  \"description\": \"commodo proident in\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/instances/:instancesId?updateMask=labore quis Ut",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"instances",
																		":instancesId"
																	],
																	"query": [
																		{
																			"key": "updateMask",
																			"value": "labore quis Ut"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the instance. Use the following structure in your request: `organizations/{org}/instances/{instance}`."
																		},
																		{
																			"key": "instancesId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "Get Instance",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/instances/:instancesId",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"instances",
																":instancesId"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Name of the instance. Use the following structure in your request: `organizations/{org}/instances/{instance}`."
																},
																{
																	"key": "instancesId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Gets the details for an Apigee runtime instance. **Note:** Not supported for Apigee hybrid."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/instances/:instancesId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"instances",
																		":instancesId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the instance. Use the following structure in your request: `organizations/{org}/instances/{instance}`."
																		},
																		{
																			"key": "instancesId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "Delete Instance",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/instances/:instancesId",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"instances",
																":instancesId"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Name of the instance. Use the following structure in your request: `organizations/{org}/instances/{instance}`."
																},
																{
																	"key": "instancesId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Deletes an Apigee runtime instance. The instance stops serving requests and the runtime data is deleted. **Note:** Not supported for Apigee hybrid."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/instances/:instancesId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"instances",
																		":instancesId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the instance. Use the following structure in your request: `organizations/{org}/instances/{instance}`."
																		},
																		{
																			"key": "instancesId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												}
											]
										},
										{
											"name": "Create Instance",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"consumerAcceptList\": [\n    \"nostrud e\",\n    \"culpa minim reprehenderit est\"\n  ],\n  \"ipRange\": \"adipisicing laborum ad et\",\n  \"diskEncryptionKeyName\": \"ut consequa\",\n  \"peeringCidrRange\": \"SLASH_18\",\n  \"displayName\": \"ut fugiat \",\n  \"location\": \"occaecat dolor in ut\",\n  \"name\": \"irure mollit proident dolor ex\",\n  \"description\": \"aliquip dolor et Ut\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/instances",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"instances"
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `parent`. Required. Name of the organization. Use the following structure in your request: `organizations/{org}`."
														}
													]
												},
												"description": "Creates an Apigee runtime instance. The instance is accessible from the authorized network configured on the organization. **Note:** Not supported for Apigee hybrid."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"consumerAcceptList\": [\n    \"non irure\",\n    \"nulla commodo\"\n  ],\n  \"ipRange\": \"occaecat sint\",\n  \"diskEncryptionKeyName\": \"d\",\n  \"peeringCidrRange\": \"SLASH_16\",\n  \"displayName\": \"cillum voluptate\",\n  \"location\": \"consequat dolor se\",\n  \"name\": \"c\",\n  \"description\": \"commodo proident in\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/instances",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"instances"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. Name of the organization. Use the following structure in your request: `organizations/{org}`."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "null"
												}
											]
										},
										{
											"name": "List Instances",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/instances?pageSize=87452072&pageToken=labore quis Ut",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"instances"
													],
													"query": [
														{
															"key": "pageSize",
															"value": "87452072",
															"description": "Maximum number of instances to return. Defaults to 25."
														},
														{
															"key": "pageToken",
															"value": "labore quis Ut",
															"description": "Page token, returned from a previous ListInstances call, that you can use to retrieve the next page of content."
														}
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `parent`. Required. Name of the organization. Use the following structure in your request: `organizations/{org}`."
														}
													]
												},
												"description": "Lists all Apigee runtime instances for the organization. **Note:** Not supported for Apigee hybrid."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/instances?pageSize=87452072&pageToken=labore quis Ut",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"instances"
															],
															"query": [
																{
																	"key": "pageSize",
																	"value": "87452072"
																},
																{
																	"key": "pageToken",
																	"value": "labore quis Ut"
																}
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. Name of the organization. Use the following structure in your request: `organizations/{org}`."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "null"
												}
											]
										},
										{
											"name": "Report Instance Status",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"reportTime\": \"Ut Duis dolor aliqua\",\n  \"instanceUid\": \"dolor in deserunt ea velit\",\n  \"resources\": [\n    {\n      \"resource\": \"commodo\",\n      \"totalReplicas\": -15084978,\n      \"revisions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"uid\": \"laboris Excepteur dolore do officia\"\n    },\n    {\n      \"resource\": \"sit Duis\",\n      \"totalReplicas\": 92385532,\n      \"revisions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"uid\": \"officia nostrud nisi do\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/instances/{{instancesId}}:reportStatus",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"instances",
														"{{instancesId}}:reportStatus"
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `instance`. The name of the instance reporting this status. For SaaS the request will be rejected if no instance exists under this name. Format is organizations/{org}/instances/{instance}"
														}
													]
												},
												"description": "Reports the latest status for a runtime instance."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"reportTime\": \"anim ex adipisicing\",\n  \"instanceUid\": \"voluptate\",\n  \"resources\": [\n    {\n      \"resource\": \"voluptate adipisicing proident in fugiat\",\n      \"totalReplicas\": 40187350,\n      \"revisions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"uid\": \"enim dolore elit dolor\"\n    },\n    {\n      \"resource\": \"voluptate qui culpa cupidatat sint\",\n      \"totalReplicas\": 66600774,\n      \"revisions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"uid\": \"dolor aliqua\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/instances/{{instancesId}}:reportStatus",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"instances",
																"{{instancesId}}:reportStatus"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `instance`. The name of the instance reporting this status. For SaaS the request will be rejected if no instance exists under this name. Format is organizations/{org}/instances/{instance}"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "environments",
									"item": [
										{
											"name": "{environmentsId}",
											"item": [
												{
													"name": "securityIncidents",
													"item": [
														{
															"name": "List Security Incidents",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/securityIncidents?pageSize=87452072&pageToken=labore quis Ut&filter=labore quis Ut",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId",
																		"securityIncidents"
																	],
																	"query": [
																		{
																			"key": "pageSize",
																			"value": "87452072",
																			"description": "The maximum number of incidents to return. The service may return fewer than this value. If unspecified, at most 50 incidents will be returned."
																		},
																		{
																			"key": "pageToken",
																			"value": "labore quis Ut",
																			"description": "A page token, received from a previous `ListSecurityIncident` call. Provide this to retrieve the subsequent page."
																		},
																		{
																			"key": "filter",
																			"value": "labore quis Ut",
																			"description": "The filter expression to be used to get the list of security incidents, where filtering can be done on API Proxies. Example: filter = \"api_proxy = /\", \"first_detected_time >\", \"last_detected_time <\""
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. For a specific organization, list of all the security incidents. Format: `organizations/{org}/environments/{environment}`"
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "ListSecurityIncidents lists all the security incident associated with the environment."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/securityIncidents?pageSize=87452072&pageToken=labore quis Ut&filter=labore quis Ut",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"securityIncidents"
																			],
																			"query": [
																				{
																					"key": "pageSize",
																					"value": "87452072"
																				},
																				{
																					"key": "pageToken",
																					"value": "labore quis Ut"
																				},
																				{
																					"key": "filter",
																					"value": "labore quis Ut"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. For a specific organization, list of all the security incidents. Format: `organizations/{org}/environments/{environment}`"
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														},
														{
															"name": "Get Security Incident",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/securityIncidents/:securityIncidentsId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId",
																		"securityIncidents",
																		":securityIncidentsId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Security incident in the following format: `organizations/{org}/environments/{environment}/securityIncidents/{incident}'. Example: organizations/testOrg/environments/testEnv/securityIncidents/1234-4567-890-111"
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		},
																		{
																			"key": "securityIncidentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "GetSecurityIncident gets the specified security incident. Returns NOT_FOUND if security incident is not present for the specified organization and environment."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/securityIncidents/:securityIncidentsId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"securityIncidents",
																				":securityIncidentsId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Security incident in the following format: `organizations/{org}/environments/{environment}/securityIncidents/{incident}'. Example: organizations/testOrg/environments/testEnv/securityIncidents/1234-4567-890-111"
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "securityIncidentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														}
													]
												},
												{
													"name": "securityReports",
													"item": [
														{
															"name": "{securityReportsId}",
															"item": [
																{
																	"name": "Get Security Report",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/securityReports/:securityReportsId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"securityReports",
																				":securityReportsId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the security report to get. Must be of the form `organizations/{org}/environments/{env}/securityReports/{reportId}`."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "securityReportsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Get security report status If the query is still in progress, the `state` is set to \"running\" After the query has completed successfully, `state` is set to \"completed\""
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/securityReports/:securityReportsId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"securityReports",
																						":securityReportsId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the security report to get. Must be of the form `organizations/{org}/environments/{env}/securityReports/{reportId}`."
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "securityReportsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "null"
																		}
																	]
																},
																{
																	"name": "Get Security Report Result View",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/securityReports/:securityReportsId/resultView",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"securityReports",
																				":securityReportsId",
																				"resultView"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the security report result view to get. Must be of the form `organizations/{org}/environments/{env}/securityReports/{reportId}/resultView`."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "securityReportsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "After the query is completed, use this API to view the query result when result size is small."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/securityReports/:securityReportsId/resultView",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"securityReports",
																						":securityReportsId",
																						"resultView"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the security report result view to get. Must be of the form `organizations/{org}/environments/{env}/securityReports/{reportId}/resultView`."
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "securityReportsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "null"
																		}
																	]
																},
																{
																	"name": "Get Security Report Result",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/securityReports/:securityReportsId/result",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"securityReports",
																				":securityReportsId",
																				"result"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the security report result to get. Must be of the form `organizations/{org}/environments/{env}/securityReports/{reportId}/result`."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "securityReportsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "After the query is completed, use this API to retrieve the results as file. If the request succeeds, and there is a non-zero result set, the result is downloaded to the client as a zipped JSON file. The name of the downloaded file will be: OfflineQueryResult-.zip Example: `OfflineQueryResult-9cfc0d85-0f30-46d6-ae6f-318d0cb961bd.zip`"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/securityReports/:securityReportsId/result",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"securityReports",
																						":securityReportsId",
																						"result"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the security report result to get. Must be of the form `organizations/{org}/environments/{env}/securityReports/{reportId}/result`."
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "securityReportsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "null"
																		}
																	]
																}
															]
														},
														{
															"name": "List Security Reports",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/securityReports?submittedBy=labore quis Ut&status=labore quis Ut&from=labore quis Ut&to=labore quis Ut&dataset=labore quis Ut&pageSize=87452072&pageToken=labore quis Ut",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId",
																		"securityReports"
																	],
																	"query": [
																		{
																			"key": "submittedBy",
																			"value": "labore quis Ut",
																			"description": "Filter response list by user who submitted queries."
																		},
																		{
																			"key": "status",
																			"value": "labore quis Ut",
																			"description": "Filter response list by security reports status."
																		},
																		{
																			"key": "from",
																			"value": "labore quis Ut",
																			"description": "Filter response list by returning security reports that created after this date time. Time must be in ISO date-time format like '2011-12-03T10:15:30Z'."
																		},
																		{
																			"key": "to",
																			"value": "labore quis Ut",
																			"description": "Filter response list by returning security reports that created before this date time. Time must be in ISO date-time format like '2011-12-03T10:16:30Z'."
																		},
																		{
																			"key": "dataset",
																			"value": "labore quis Ut",
																			"description": "Filter response list by dataset. Example: `api`, `mint`"
																		},
																		{
																			"key": "pageSize",
																			"value": "87452072",
																			"description": "The maximum number of security report to return in the list response."
																		},
																		{
																			"key": "pageToken",
																			"value": "labore quis Ut",
																			"description": "Token returned from the previous list response to fetch the next page."
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. The parent resource name. Must be of the form `organizations/{org}/environments/{env}`."
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Return a list of Security Reports"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/securityReports?submittedBy=labore quis Ut&status=labore quis Ut&from=labore quis Ut&to=labore quis Ut&dataset=labore quis Ut&pageSize=87452072&pageToken=labore quis Ut",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"securityReports"
																			],
																			"query": [
																				{
																					"key": "submittedBy",
																					"value": "labore quis Ut"
																				},
																				{
																					"key": "status",
																					"value": "labore quis Ut"
																				},
																				{
																					"key": "from",
																					"value": "labore quis Ut"
																				},
																				{
																					"key": "to",
																					"value": "labore quis Ut"
																				},
																				{
																					"key": "dataset",
																					"value": "labore quis Ut"
																				},
																				{
																					"key": "pageSize",
																					"value": "87452072"
																				},
																				{
																					"key": "pageToken",
																					"value": "labore quis Ut"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. The parent resource name. Must be of the form `organizations/{org}/environments/{env}`."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														},
														{
															"name": "Create Security Report",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "null",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/securityReports",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId",
																		"securityReports"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. The parent resource name. Must be of the form `organizations/{org}/environments/{env}`."
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Submit a report request to be processed in the background. If the submission succeeds, the API returns a 200 status and an ID that refer to the report request. In addition to the HTTP status 200, the `state` of \"enqueued\" means that the request succeeded."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/securityReports",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"securityReports"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. The parent resource name. Must be of the form `organizations/{org}/environments/{env}`."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														}
													]
												},
												{
													"name": "keystores",
													"item": [
														{
															"name": "{keystoresId}",
															"item": [
																{
																	"name": "aliases",
																	"item": [
																		{
																			"name": "{aliasesId}",
																			"item": [
																				{
																					"name": "Delete Alias",
																					"request": {
																						"method": "DELETE",
																						"header": [
																							{
																								"key": "Accept",
																								"value": "*/*"
																							}
																						],
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/keystores/:keystoresId/aliases/:aliasesId",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"environments",
																								":environmentsId",
																								"keystores",
																								":keystoresId",
																								"aliases",
																								":aliasesId"
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. Required. Name of the alias. Use the following format in your request: `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`."
																								},
																								{
																									"key": "environmentsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "keystoresId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "aliasesId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								}
																							]
																						},
																						"description": "Deletes an alias."
																					},
																					"response": [
																						{
																							"name": "Successful operation",
																							"originalRequest": {
																								"method": "DELETE",
																								"header": [],
																								"url": {
																									"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/keystores/:keystoresId/aliases/:aliasesId",
																									"host": [
																										"{{BASE_URL}}"
																									],
																									"path": [
																										"v1",
																										"organizations",
																										"{{ORG_ID}}",
																										"environments",
																										":environmentsId",
																										"keystores",
																										":keystoresId",
																										"aliases",
																										":aliasesId"
																									],
																									"variable": [
																										{
																											"key": "organizationsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. Required. Name of the alias. Use the following format in your request: `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`."
																										},
																										{
																											"key": "environmentsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "keystoresId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "aliasesId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										}
																									]
																								}
																							},
																							"status": "Internal Server Error",
																							"code": 500,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "*/*"
																								}
																							],
																							"cookie": [],
																							"body": "{\n  \"type\": \"ALIAS_TYPE_UNSPECIFIED\",\n  \"certsInfo\": {\n    \"certInfo\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"alias\": \"dolor voluptate ut\"\n}"
																						}
																					]
																				},
																				{
																					"name": "Get Alias",
																					"request": {
																						"method": "GET",
																						"header": [
																							{
																								"key": "Accept",
																								"value": "*/*"
																							}
																						],
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/keystores/:keystoresId/aliases/:aliasesId",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"environments",
																								":environmentsId",
																								"keystores",
																								":keystoresId",
																								"aliases",
																								":aliasesId"
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. Required. Name of the alias. Use the following format in your request: `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`."
																								},
																								{
																									"key": "environmentsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "keystoresId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "aliasesId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								}
																							]
																						},
																						"description": "Gets an alias."
																					},
																					"response": [
																						{
																							"name": "Successful operation",
																							"originalRequest": {
																								"method": "GET",
																								"header": [],
																								"url": {
																									"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/keystores/:keystoresId/aliases/:aliasesId",
																									"host": [
																										"{{BASE_URL}}"
																									],
																									"path": [
																										"v1",
																										"organizations",
																										"{{ORG_ID}}",
																										"environments",
																										":environmentsId",
																										"keystores",
																										":keystoresId",
																										"aliases",
																										":aliasesId"
																									],
																									"variable": [
																										{
																											"key": "organizationsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. Required. Name of the alias. Use the following format in your request: `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`."
																										},
																										{
																											"key": "environmentsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "keystoresId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "aliasesId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										}
																									]
																								}
																							},
																							"status": "Internal Server Error",
																							"code": 500,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "*/*"
																								}
																							],
																							"cookie": [],
																							"body": "{\n  \"type\": \"ALIAS_TYPE_UNSPECIFIED\",\n  \"certsInfo\": {\n    \"certInfo\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"alias\": \"dolor voluptate ut\"\n}"
																						}
																					]
																				},
																				{
																					"name": "Update Alias",
																					"request": {
																						"method": "PUT",
																						"header": [
																							{
																								"key": "Content-Type",
																								"value": "application/json"
																							},
																							{
																								"key": "Accept",
																								"value": "*/*"
																							}
																						],
																						"body": {
																							"mode": "raw",
																							"raw": "null",
																							"options": {
																								"raw": {
																									"language": "json"
																								}
																							}
																						},
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/keystores/:keystoresId/aliases/:aliasesId?ignoreExpiryValidation=true&ignoreNewlineValidation=true",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"environments",
																								":environmentsId",
																								"keystores",
																								":keystoresId",
																								"aliases",
																								":aliasesId"
																							],
																							"query": [
																								{
																									"key": "ignoreExpiryValidation",
																									"value": "true",
																									"description": "Required. Flag that specifies whether to ignore expiry validation. If set to `true`, no expiry validation will be performed."
																								},
																								{
																									"key": "ignoreNewlineValidation",
																									"value": "true",
																									"description": "Flag that specifies whether to ignore newline validation. If set to `true`, no error is thrown when the file contains a certificate chain with no newline between each certificate. Defaults to `false`."
																								}
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. Required. Name of the alias. Use the following format in your request: `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`"
																								},
																								{
																									"key": "environmentsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "keystoresId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "aliasesId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								}
																							]
																						},
																						"description": "Updates the certificate in an alias."
																					},
																					"response": [
																						{
																							"name": "Successful operation",
																							"originalRequest": {
																								"method": "PUT",
																								"header": [],
																								"body": {
																									"mode": "raw",
																									"raw": "null",
																									"options": {
																										"raw": {
																											"language": "json"
																										}
																									}
																								},
																								"url": {
																									"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/keystores/:keystoresId/aliases/:aliasesId?ignoreExpiryValidation=true&ignoreNewlineValidation=true",
																									"host": [
																										"{{BASE_URL}}"
																									],
																									"path": [
																										"v1",
																										"organizations",
																										"{{ORG_ID}}",
																										"environments",
																										":environmentsId",
																										"keystores",
																										":keystoresId",
																										"aliases",
																										":aliasesId"
																									],
																									"query": [
																										{
																											"key": "ignoreExpiryValidation",
																											"value": "true"
																										},
																										{
																											"key": "ignoreNewlineValidation",
																											"value": "true"
																										}
																									],
																									"variable": [
																										{
																											"key": "organizationsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. Required. Name of the alias. Use the following format in your request: `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`"
																										},
																										{
																											"key": "environmentsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "keystoresId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "aliasesId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										}
																									]
																								}
																							},
																							"status": "Internal Server Error",
																							"code": 500,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "*/*"
																								}
																							],
																							"cookie": [],
																							"body": "{\n  \"type\": \"ALIAS_TYPE_UNSPECIFIED\",\n  \"certsInfo\": {\n    \"certInfo\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"alias\": \"dolor voluptate ut\"\n}"
																						}
																					]
																				},
																				{
																					"name": "Get Certificate From Alias",
																					"request": {
																						"method": "GET",
																						"header": [
																							{
																								"key": "Accept",
																								"value": "*/*"
																							}
																						],
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/keystores/:keystoresId/aliases/:aliasesId/certificate",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"environments",
																								":environmentsId",
																								"keystores",
																								":keystoresId",
																								"aliases",
																								":aliasesId",
																								"certificate"
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. Required. Name of the alias. Use the following format in your request: `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`."
																								},
																								{
																									"key": "environmentsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "keystoresId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "aliasesId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								}
																							]
																						},
																						"description": "Gets the certificate from an alias in PEM-encoded form."
																					},
																					"response": [
																						{
																							"name": "Successful operation",
																							"originalRequest": {
																								"method": "GET",
																								"header": [],
																								"url": {
																									"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/keystores/:keystoresId/aliases/:aliasesId/certificate",
																									"host": [
																										"{{BASE_URL}}"
																									],
																									"path": [
																										"v1",
																										"organizations",
																										"{{ORG_ID}}",
																										"environments",
																										":environmentsId",
																										"keystores",
																										":keystoresId",
																										"aliases",
																										":aliasesId",
																										"certificate"
																									],
																									"variable": [
																										{
																											"key": "organizationsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. Required. Name of the alias. Use the following format in your request: `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`."
																										},
																										{
																											"key": "environmentsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "keystoresId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "aliasesId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										}
																									]
																								}
																							},
																							"status": "Internal Server Error",
																							"code": 500,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "*/*"
																								}
																							],
																							"cookie": [],
																							"body": "null"
																						}
																					]
																				},
																				{
																					"name": "Generate Csr",
																					"request": {
																						"method": "GET",
																						"header": [
																							{
																								"key": "Accept",
																								"value": "*/*"
																							}
																						],
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/keystores/:keystoresId/aliases/:aliasesId/csr",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"environments",
																								":environmentsId",
																								"keystores",
																								":keystoresId",
																								"aliases",
																								":aliasesId",
																								"csr"
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. Required. Name of the alias. Use the following format in your request: `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`."
																								},
																								{
																									"key": "environmentsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "keystoresId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "aliasesId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								}
																							]
																						},
																						"description": "Generates a PKCS #10 Certificate Signing Request for the private key in an alias."
																					},
																					"response": [
																						{
																							"name": "Successful operation",
																							"originalRequest": {
																								"method": "GET",
																								"header": [],
																								"url": {
																									"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/keystores/:keystoresId/aliases/:aliasesId/csr",
																									"host": [
																										"{{BASE_URL}}"
																									],
																									"path": [
																										"v1",
																										"organizations",
																										"{{ORG_ID}}",
																										"environments",
																										":environmentsId",
																										"keystores",
																										":keystoresId",
																										"aliases",
																										":aliasesId",
																										"csr"
																									],
																									"variable": [
																										{
																											"key": "organizationsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. Required. Name of the alias. Use the following format in your request: `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`."
																										},
																										{
																											"key": "environmentsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "keystoresId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "aliasesId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										}
																									]
																								}
																							},
																							"status": "Internal Server Error",
																							"code": 500,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "*/*"
																								}
																							],
																							"cookie": [],
																							"body": "null"
																						}
																					]
																				}
																			]
																		},
																		{
																			"name": "Create Alias",
																			"request": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "*/*"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "null",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/keystores/:keystoresId/aliases?alias=labore quis Ut&format=labore quis Ut&ignoreExpiryValidation=false&_password=labore quis Ut&ignoreNewlineValidation=false",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"keystores",
																						":keystoresId",
																						"aliases"
																					],
																					"query": [
																						{
																							"key": "alias",
																							"value": "labore quis Ut",
																							"description": "Alias for the key/certificate pair. Values must match the regular expression `[\\w\\s-.]{1,255}`. This must be provided for all formats except `selfsignedcert`; self-signed certs may specify the alias in either this parameter or the JSON body."
																						},
																						{
																							"key": "format",
																							"value": "labore quis Ut",
																							"description": "Required. Format of the data. Valid values include: `selfsignedcert`, `keycertfile`, or `pkcs12`"
																						},
																						{
																							"key": "ignoreExpiryValidation",
																							"value": "false",
																							"description": "Flag that specifies whether to ignore expiry validation. If set to `true`, no expiry validation will be performed."
																						},
																						{
																							"key": "_password",
																							"value": "labore quis Ut",
																							"description": "DEPRECATED: For improved security, specify the password in the request body instead of using the query parameter. To specify the password in the request body, set `Content-type: multipart/form-data` part with name `password`. Password for the private key file, if required."
																						},
																						{
																							"key": "ignoreNewlineValidation",
																							"value": "false",
																							"description": "Flag that specifies whether to ignore newline validation. If set to `true`, no error is thrown when the file contains a certificate chain with no newline between each certificate. Defaults to `false`."
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. Required. Name of the keystore. Use the following format in your request: `organizations/{org}/environments/{env}/keystores/{keystore}`."
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "keystoresId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																						}
																					]
																				},
																				"description": "Creates an alias from a key/certificate pair. The structure of the request is controlled by the `format` query parameter: - `keycertfile` - Separate PEM-encoded key and certificate files are uploaded. Set `Content-Type: multipart/form-data` and include the `keyFile`, `certFile`, and `password` (if keys are encrypted) fields in the request body. If uploading to a truststore, omit `keyFile`. - `pkcs12` - A PKCS12 file is uploaded. Set `Content-Type: multipart/form-data`, provide the file in the `file` field, and include the `password` field if the file is encrypted in the request body. - `selfsignedcert` - A new private key and certificate are generated. Set `Content-Type: application/json` and include CertificateGenerationSpec in the request body."
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "POST",
																						"header": [],
																						"body": {
																							"mode": "raw",
																							"raw": "null",
																							"options": {
																								"raw": {
																									"language": "json"
																								}
																							}
																						},
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/keystores/:keystoresId/aliases?alias=labore quis Ut&format=labore quis Ut&ignoreExpiryValidation=true&_password=labore quis Ut&ignoreNewlineValidation=true",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"environments",
																								":environmentsId",
																								"keystores",
																								":keystoresId",
																								"aliases"
																							],
																							"query": [
																								{
																									"key": "alias",
																									"value": "labore quis Ut"
																								},
																								{
																									"key": "format",
																									"value": "labore quis Ut"
																								},
																								{
																									"key": "ignoreExpiryValidation",
																									"value": "true"
																								},
																								{
																									"key": "_password",
																									"value": "labore quis Ut"
																								},
																								{
																									"key": "ignoreNewlineValidation",
																									"value": "true"
																								}
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. Required. Name of the keystore. Use the following format in your request: `organizations/{org}/environments/{env}/keystores/{keystore}`."
																								},
																								{
																									"key": "environmentsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "keystoresId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																								}
																							]
																						}
																					},
																					"status": "Internal Server Error",
																					"code": 500,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "*/*"
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"type\": \"ALIAS_TYPE_UNSPECIFIED\",\n  \"certsInfo\": {\n    \"certInfo\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"alias\": \"pariatur Lorem\"\n}"
																				}
																			]
																		}
																	]
																},
																{
																	"name": "Get Keystore",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/keystores/:keystoresId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"keystores",
																				":keystoresId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the keystore. Use the following format in your request: `organizations/{org}/environments/{env}/keystores/{keystore}`."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "keystoresId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Gets a keystore or truststore."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/keystores/:keystoresId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"keystores",
																						":keystoresId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the keystore. Use the following format in your request: `organizations/{org}/environments/{env}/keystores/{keystore}`."
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "keystoresId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"name\": \"et in qui do\",\n  \"aliases\": [\n    \"exercitation fugiat veniam ad\",\n    \"commodo occaecat nulla\"\n  ]\n}"
																		}
																	]
																},
																{
																	"name": "Delete Keystore",
																	"request": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/keystores/:keystoresId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"keystores",
																				":keystoresId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the keystore. Use the following format in your request: `organizations/{org}/environments/{env}/keystores/{keystore}`"
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "keystoresId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Deletes a keystore or truststore."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/keystores/:keystoresId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"keystores",
																						":keystoresId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the keystore. Use the following format in your request: `organizations/{org}/environments/{env}/keystores/{keystore}`"
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "keystoresId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"name\": \"et in qui do\",\n  \"aliases\": [\n    \"exercitation fugiat veniam ad\",\n    \"commodo occaecat nulla\"\n  ]\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "Create Keystore",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"tempor consequat sit\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/keystores?name=labore quis Ut",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId",
																		"keystores"
																	],
																	"query": [
																		{
																			"key": "name",
																			"value": "labore quis Ut",
																			"description": "Optional. Name of the keystore. Overrides the value in Keystore."
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. Name of the environment in which to create the keystore. Use the following format in your request: `organizations/{org}/environments/{env}`"
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Creates a keystore or truststore. - Keystore: Contains certificates and their associated keys. - Truststore: Contains trusted certificates used to validate a server's certificate. These certificates are typically self-signed certificates or certificates that are not signed by a trusted CA."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"tempor consequat sit\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/keystores?name=labore quis Ut",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"keystores"
																			],
																			"query": [
																				{
																					"key": "name",
																					"value": "labore quis Ut"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. Name of the environment in which to create the keystore. Use the following format in your request: `organizations/{org}/environments/{env}`"
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"name\": \"laboris enim nulla irure\",\n  \"aliases\": [\n    \"aute aliqua ut consequat\",\n    \"sit\"\n  ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "resourcefiles",
													"item": [
														{
															"name": "{type}",
															"item": [
																{
																	"name": "{name}",
																	"item": [
																		{
																			"name": "Update Environment Resource",
																			"request": {
																				"method": "PUT",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "*/*"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "null",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/resourcefiles/:type/:name",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"resourcefiles",
																						":type",
																						":name"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. Required. Name of the environment in the following format: `organizations/{org}/environments/{env}`."
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "type",
																							"value": "labore quis Ut",
																							"description": "(Required) Required. Resource file type. {{ resource_file_type }}"
																						},
																						{
																							"key": "name",
																							"value": "labore quis Ut",
																							"description": "(Required) Required. ID of the resource file to update. Must match the regular expression: [a-zA-Z0-9:/\\\\!@#$%^&{}\\[\\]()+\\-=,.~'` ]{1,255}"
																						}
																					]
																				},
																				"description": "Updates a resource file. Specify the `Content-Type` as `application/octet-stream` or `multipart/form-data`. For more information about resource files, see [Resource files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files)."
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "PUT",
																						"header": [],
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/resourcefiles/:type/:name",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"environments",
																								":environmentsId",
																								"resourcefiles",
																								":type",
																								":name"
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. Required. Name of the environment in the following format: `organizations/{org}/environments/{env}`."
																								},
																								{
																									"key": "environmentsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "type",
																									"value": "labore quis Ut",
																									"description": "(Required) Required. Resource file type. {{ resource_file_type }}"
																								},
																								{
																									"key": "name",
																									"value": "labore quis Ut",
																									"description": "(Required) Required. ID of the resource file to update. Must match the regular expression: [a-zA-Z0-9:/\\\\!@#$%^&{}\\[\\]()+\\-=,.~'` ]{1,255}"
																								}
																							]
																						}
																					},
																					"status": "Internal Server Error",
																					"code": 500,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "*/*"
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"name\": \"non elit\",\n  \"type\": \"cillum aute ipsum irure pariatur\"\n}"
																				}
																			]
																		},
																		{
																			"name": "Get Environment Resource",
																			"request": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "*/*"
																					}
																				],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/resourcefiles/:type/:name",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"resourcefiles",
																						":type",
																						":name"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. Required. Name of the environment in the following format: `organizations/{org}/environments/{env}`."
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "type",
																							"value": "labore quis Ut",
																							"description": "(Required) Required. Resource file type. {{ resource_file_type }}"
																						},
																						{
																							"key": "name",
																							"value": "labore quis Ut",
																							"description": "(Required) Required. ID of the resource file. Must match the regular expression: [a-zA-Z0-9:/\\\\!@#$%^&{}\\[\\]()+\\-=,.~'` ]{1,255}"
																						}
																					]
																				},
																				"description": "Gets the contents of a resource file. For more information about resource files, see [Resource files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files)."
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "GET",
																						"header": [],
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/resourcefiles/:type/:name",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"environments",
																								":environmentsId",
																								"resourcefiles",
																								":type",
																								":name"
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. Required. Name of the environment in the following format: `organizations/{org}/environments/{env}`."
																								},
																								{
																									"key": "environmentsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "type",
																									"value": "labore quis Ut",
																									"description": "(Required) Required. Resource file type. {{ resource_file_type }}"
																								},
																								{
																									"key": "name",
																									"value": "labore quis Ut",
																									"description": "(Required) Required. ID of the resource file. Must match the regular expression: [a-zA-Z0-9:/\\\\!@#$%^&{}\\[\\]()+\\-=,.~'` ]{1,255}"
																								}
																							]
																						}
																					},
																					"status": "Internal Server Error",
																					"code": 500,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "*/*"
																						}
																					],
																					"cookie": [],
																					"body": "null"
																				}
																			]
																		},
																		{
																			"name": "Delete Environment Resource",
																			"request": {
																				"method": "DELETE",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "*/*"
																					}
																				],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/resourcefiles/:type/:name",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"resourcefiles",
																						":type",
																						":name"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. Required. Name of the environment in the following format: `organizations/{org}/environments/{env}`."
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "type",
																							"value": "labore quis Ut",
																							"description": "(Required) Required. Resource file type. {{ resource_file_type }}"
																						},
																						{
																							"key": "name",
																							"value": "labore quis Ut",
																							"description": "(Required) Required. ID of the resource file to delete. Must match the regular expression: [a-zA-Z0-9:/\\\\!@#$%^&{}\\[\\]()+\\-=,.~'` ]{1,255}"
																						}
																					]
																				},
																				"description": "Deletes a resource file. For more information about resource files, see [Resource files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files)."
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "DELETE",
																						"header": [],
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/resourcefiles/:type/:name",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"environments",
																								":environmentsId",
																								"resourcefiles",
																								":type",
																								":name"
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. Required. Name of the environment in the following format: `organizations/{org}/environments/{env}`."
																								},
																								{
																									"key": "environmentsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "type",
																									"value": "labore quis Ut",
																									"description": "(Required) Required. Resource file type. {{ resource_file_type }}"
																								},
																								{
																									"key": "name",
																									"value": "labore quis Ut",
																									"description": "(Required) Required. ID of the resource file to delete. Must match the regular expression: [a-zA-Z0-9:/\\\\!@#$%^&{}\\[\\]()+\\-=,.~'` ]{1,255}"
																								}
																							]
																						}
																					},
																					"status": "Internal Server Error",
																					"code": 500,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "*/*"
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"name\": \"non elit\",\n  \"type\": \"cillum aute ipsum irure pariatur\"\n}"
																				}
																			]
																		}
																	]
																},
																{
																	"name": "List Environment Resources1",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/resourcefiles/:type",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"resourcefiles",
																				":type"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. Name of the environment in which to list resource files in the following format: `organizations/{org}/environments/{env}`."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "type",
																					"value": "labore quis Ut",
																					"description": "(Required) Optional. Type of resource files to list. {{ resource_file_type }}"
																				}
																			]
																		},
																		"description": "Lists all resource files, optionally filtering by type. For more information about resource files, see [Resource files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files)."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/resourcefiles/:type",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"resourcefiles",
																						":type"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. Required. Name of the environment in which to list resource files in the following format: `organizations/{org}/environments/{env}`."
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "type",
																							"value": "labore quis Ut",
																							"description": "(Required) Optional. Type of resource files to list. {{ resource_file_type }}"
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"resourceFile\": [\n    {\n      \"name\": \"adipisicing consectetur ex nisi veniam\",\n      \"type\": \"fugiat ipsu\"\n    },\n    {\n      \"name\": \"sit veniam magna occaecat\",\n      \"type\": \"occaecat elit sit\"\n    }\n  ]\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "Create Environment Resource",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "null",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/resourcefiles?type=labore quis Ut&name=labore quis Ut",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId",
																		"resourcefiles"
																	],
																	"query": [
																		{
																			"key": "type",
																			"value": "labore quis Ut",
																			"description": "Required. Resource file type. {{ resource_file_type }}"
																		},
																		{
																			"key": "name",
																			"value": "labore quis Ut",
																			"description": "Required. Name of the resource file. Must match the regular expression: [a-zA-Z0-9:/\\\\!@#$%^&{}\\[\\]()+\\-=,.~'` ]{1,255}"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. Name of the environment in which to create the resource file in the following format: `organizations/{org}/environments/{env}`."
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Creates a resource file. Specify the `Content-Type` as `application/octet-stream` or `multipart/form-data`. For more information about resource files, see [Resource files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files)."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/resourcefiles?type=labore quis Ut&name=labore quis Ut",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"resourcefiles"
																			],
																			"query": [
																				{
																					"key": "type",
																					"value": "labore quis Ut"
																				},
																				{
																					"key": "name",
																					"value": "labore quis Ut"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. Name of the environment in which to create the resource file in the following format: `organizations/{org}/environments/{env}`."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"name\": \"non elit\",\n  \"type\": \"cillum aute ipsum irure pariatur\"\n}"
																}
															]
														},
														{
															"name": "List Environment Resources",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/resourcefiles?type=labore quis Ut",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId",
																		"resourcefiles"
																	],
																	"query": [
																		{
																			"key": "type",
																			"value": "labore quis Ut",
																			"description": "Optional. Type of resource files to list. {{ resource_file_type }}"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. Name of the environment in which to list resource files in the following format: `organizations/{org}/environments/{env}`."
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Lists all resource files, optionally filtering by type. For more information about resource files, see [Resource files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files)."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/resourcefiles?type=labore quis Ut",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"resourcefiles"
																			],
																			"query": [
																				{
																					"key": "type",
																					"value": "labore quis Ut"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. Name of the environment in which to list resource files in the following format: `organizations/{org}/environments/{env}`."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"resourceFile\": [\n    {\n      \"name\": \"dolore id ea consequat incididunt\",\n      \"type\": \"esse occaecat minim in\"\n    },\n    {\n      \"name\": \"elit fugiat\",\n      \"type\": \"sed in Excepteur\"\n    }\n  ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "keyvaluemaps",
													"item": [
														{
															"name": "{keyvaluemapsId}",
															"item": [
																{
																	"name": "entries",
																	"item": [
																		{
																			"name": "{entriesId}",
																			"item": [
																				{
																					"name": "Get Key Value Entry",
																					"request": {
																						"method": "GET",
																						"header": [
																							{
																								"key": "Accept",
																								"value": "*/*"
																							}
																						],
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/keyvaluemaps/:keyvaluemapsId/entries/:entriesId",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"environments",
																								":environmentsId",
																								"keyvaluemaps",
																								":keyvaluemapsId",
																								"entries",
																								":entriesId"
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. Required. Scope as indicated by the URI in which to fetch the key value map entry/value. Use **one** of the following structures in your request: * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`. * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/{entry}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`."
																								},
																								{
																									"key": "environmentsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "keyvaluemapsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "entriesId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								}
																							]
																						},
																						"description": "Get the key value entry value for a key value map scoped to an organization, environment, or API proxy. **Note**: Supported for Apigee hybrid 1.8.x and higher."
																					},
																					"response": [
																						{
																							"name": "Successful operation",
																							"originalRequest": {
																								"method": "GET",
																								"header": [],
																								"url": {
																									"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/keyvaluemaps/:keyvaluemapsId/entries/:entriesId",
																									"host": [
																										"{{BASE_URL}}"
																									],
																									"path": [
																										"v1",
																										"organizations",
																										"{{ORG_ID}}",
																										"environments",
																										":environmentsId",
																										"keyvaluemaps",
																										":keyvaluemapsId",
																										"entries",
																										":entriesId"
																									],
																									"variable": [
																										{
																											"key": "organizationsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. Required. Scope as indicated by the URI in which to fetch the key value map entry/value. Use **one** of the following structures in your request: * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`. * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/{entry}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`."
																										},
																										{
																											"key": "environmentsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "keyvaluemapsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "entriesId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										}
																									]
																								}
																							},
																							"status": "Internal Server Error",
																							"code": 500,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "*/*"
																								}
																							],
																							"cookie": [],
																							"body": "{\n  \"value\": \"anim deserunt id\",\n  \"name\": \"sit eiusmod lab\"\n}"
																						}
																					]
																				},
																				{
																					"name": "Delete Key Value Entry",
																					"request": {
																						"method": "DELETE",
																						"header": [
																							{
																								"key": "Accept",
																								"value": "*/*"
																							}
																						],
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/keyvaluemaps/:keyvaluemapsId/entries/:entriesId",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"environments",
																								":environmentsId",
																								"keyvaluemaps",
																								":keyvaluemapsId",
																								"entries",
																								":entriesId"
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. Required. Scope as indicated by the URI in which to delete the key value map entry. Use **one** of the following structures in your request: * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`. * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/{entry}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`."
																								},
																								{
																									"key": "environmentsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "keyvaluemapsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "entriesId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								}
																							]
																						},
																						"description": "Deletes a key value entry from a key value map scoped to an organization, environment, or API proxy. **Notes:** * After you delete the key value entry, the policy consuming the entry will continue to function with its cached values for a few minutes. This is expected behavior. * Supported for Apigee hybrid 1.8.x and higher."
																					},
																					"response": [
																						{
																							"name": "Successful operation",
																							"originalRequest": {
																								"method": "DELETE",
																								"header": [],
																								"url": {
																									"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/keyvaluemaps/:keyvaluemapsId/entries/:entriesId",
																									"host": [
																										"{{BASE_URL}}"
																									],
																									"path": [
																										"v1",
																										"organizations",
																										"{{ORG_ID}}",
																										"environments",
																										":environmentsId",
																										"keyvaluemaps",
																										":keyvaluemapsId",
																										"entries",
																										":entriesId"
																									],
																									"variable": [
																										{
																											"key": "organizationsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. Required. Scope as indicated by the URI in which to delete the key value map entry. Use **one** of the following structures in your request: * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`. * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/{entry}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`."
																										},
																										{
																											"key": "environmentsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "keyvaluemapsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "entriesId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										}
																									]
																								}
																							},
																							"status": "Internal Server Error",
																							"code": 500,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "*/*"
																								}
																							],
																							"cookie": [],
																							"body": "{\n  \"value\": \"anim deserunt id\",\n  \"name\": \"sit eiusmod lab\"\n}"
																						}
																					]
																				}
																			]
																		},
																		{
																			"name": "List Key Value Entries",
																			"request": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "*/*"
																					}
																				],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/keyvaluemaps/:keyvaluemapsId/entries?pageSize=87452072&pageToken=labore quis Ut",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"keyvaluemaps",
																						":keyvaluemapsId",
																						"entries"
																					],
																					"query": [
																						{
																							"key": "pageSize",
																							"value": "87452072",
																							"description": "Optional. Maximum number of key value entries to return. If unspecified, at most 100 entries will be returned."
																						},
																						{
																							"key": "pageToken",
																							"value": "labore quis Ut",
																							"description": "Optional. Page token. If provides, must be a valid key value entry returned from a previous call that can be used to retrieve the next page."
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. Required. Scope as indicated by the URI in which to list key value maps. Use **one** of the following structures in your request: * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`."
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "keyvaluemapsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																						}
																					]
																				},
																				"description": "Lists key value entries for key values maps scoped to an organization, environment, or API proxy. **Note**: Supported for Apigee hybrid 1.8.x and higher."
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "GET",
																						"header": [],
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/keyvaluemaps/:keyvaluemapsId/entries?pageSize=87452072&pageToken=labore quis Ut",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"environments",
																								":environmentsId",
																								"keyvaluemaps",
																								":keyvaluemapsId",
																								"entries"
																							],
																							"query": [
																								{
																									"key": "pageSize",
																									"value": "87452072"
																								},
																								{
																									"key": "pageToken",
																									"value": "labore quis Ut"
																								}
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. Required. Scope as indicated by the URI in which to list key value maps. Use **one** of the following structures in your request: * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`."
																								},
																								{
																									"key": "environmentsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "keyvaluemapsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																								}
																							]
																						}
																					},
																					"status": "Internal Server Error",
																					"code": 500,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "*/*"
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"nextPageToken\": \"Ut adipisicing est\",\n  \"keyValueEntries\": [\n    {\n      \"value\": \"et consequat occaecat laboris\",\n      \"name\": \"qui enim minim ea\"\n    },\n    {\n      \"value\": \"dolor consectetur anim\",\n      \"name\": \"proident non\"\n    }\n  ]\n}"
																				}
																			]
																		},
																		{
																			"name": "Create Key Value Entry",
																			"request": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "*/*"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"value\": \"anim deserunt id\",\n  \"name\": \"sit eiusmod lab\"\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/keyvaluemaps/:keyvaluemapsId/entries",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"keyvaluemaps",
																						":keyvaluemapsId",
																						"entries"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. Required. Scope as indicated by the URI in which to create the key value map entry. Use **one** of the following structures in your request: * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`."
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "keyvaluemapsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																						}
																					]
																				},
																				"description": "Creates key value entries in a key value map scoped to an organization, environment, or API proxy. **Note**: Supported for Apigee hybrid 1.8.x and higher."
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "POST",
																						"header": [],
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/keyvaluemaps/:keyvaluemapsId/entries",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"environments",
																								":environmentsId",
																								"keyvaluemaps",
																								":keyvaluemapsId",
																								"entries"
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. Required. Scope as indicated by the URI in which to create the key value map entry. Use **one** of the following structures in your request: * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`."
																								},
																								{
																									"key": "environmentsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "keyvaluemapsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																								}
																							]
																						}
																					},
																					"status": "Internal Server Error",
																					"code": 500,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "*/*"
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"value\": \"anim deserunt id\",\n  \"name\": \"sit eiusmod lab\"\n}"
																				}
																			]
																		}
																	]
																},
																{
																	"name": "Delete Environment Key Value Map",
																	"request": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/keyvaluemaps/:keyvaluemapsId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"keyvaluemaps",
																				":keyvaluemapsId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the key value map. Use the following structure in your request: `organizations/{org}/environments/{env}/keyvaluemaps/{keyvaluemap}`"
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "keyvaluemapsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Deletes a key value map from an environment."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/keyvaluemaps/:keyvaluemapsId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"keyvaluemaps",
																						":keyvaluemapsId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the key value map. Use the following structure in your request: `organizations/{org}/environments/{env}/keyvaluemaps/{keyvaluemap}`"
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "keyvaluemapsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"name\": \"de\",\n  \"encrypted\": false\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "Create Environment Key Value Map",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"de\",\n  \"encrypted\": false\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/keyvaluemaps",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId",
																		"keyvaluemaps"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. Name of the environment in which to create the key value map. Use the following structure in your request: `organizations/{org}/environments/{env}`"
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Creates a key value map in an environment."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"de\",\n  \"encrypted\": false\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/keyvaluemaps",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"keyvaluemaps"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. Name of the environment in which to create the key value map. Use the following structure in your request: `organizations/{org}/environments/{env}`"
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"name\": \"de\",\n  \"encrypted\": false\n}"
																}
															]
														}
													]
												},
												{
													"name": "flowhooks/{flowhooksId}",
													"item": [
														{
															"name": "Detach Shared Flow From Flow Hook",
															"request": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/flowhooks/:flowhooksId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId",
																		"flowhooks",
																		":flowhooksId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the flow hook to detach in the following format: `organizations/{org}/environments/{env}/flowhooks/{flowhook}`"
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		},
																		{
																			"key": "flowhooksId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Detaches a shared flow from a flow hook."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/flowhooks/:flowhooksId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"flowhooks",
																				":flowhooksId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the flow hook to detach in the following format: `organizations/{org}/environments/{env}/flowhooks/{flowhook}`"
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "flowhooksId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"sharedFlow\": \"dolor labore\",\n  \"continueOnError\": true,\n  \"description\": \"sed\",\n  \"flowHookPoint\": \"venia\"\n}"
																}
															]
														},
														{
															"name": "Attach Shared Flow To Flow Hook",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"sharedFlow\": \"nostrud magna proident\",\n  \"continueOnError\": true,\n  \"description\": \"ea qui ullamco\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/flowhooks/:flowhooksId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId",
																		"flowhooks",
																		":flowhooksId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the flow hook to which the shared flow should be attached in the following format: `organizations/{org}/environments/{env}/flowhooks/{flowhook}`"
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		},
																		{
																			"key": "flowhooksId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Attaches a shared flow to a flow hook."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"sharedFlow\": \"nostrud magna proident\",\n  \"continueOnError\": true,\n  \"description\": \"ea qui ullamco\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/flowhooks/:flowhooksId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"flowhooks",
																				":flowhooksId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the flow hook to which the shared flow should be attached in the following format: `organizations/{org}/environments/{env}/flowhooks/{flowhook}`"
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "flowhooksId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"sharedFlow\": \"dolor labore\",\n  \"continueOnError\": true,\n  \"description\": \"sed\",\n  \"flowHookPoint\": \"venia\"\n}"
																}
															]
														},
														{
															"name": "Get Flow Hook",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/flowhooks/:flowhooksId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId",
																		"flowhooks",
																		":flowhooksId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the flow hook in the following format: `organizations/{org}/environments/{env}/flowhooks/{flowhook}`"
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		},
																		{
																			"key": "flowhooksId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Returns the name of the shared flow attached to the specified flow hook. If there's no shared flow attached to the flow hook, the API does not return an error; it simply does not return a name in the response."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/flowhooks/:flowhooksId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"flowhooks",
																				":flowhooksId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the flow hook in the following format: `organizations/{org}/environments/{env}/flowhooks/{flowhook}`"
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "flowhooksId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"sharedFlow\": \"dolor labore\",\n  \"continueOnError\": true,\n  \"description\": \"sed\",\n  \"flowHookPoint\": \"venia\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "debugmask",
													"item": [
														{
															"name": "Get Environment Debug Mask",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/debugmask",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId",
																		"debugmask"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the debug mask. Use the following structure in your request: `organizations/{org}/environments/{env}/debugmask`."
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Gets the debug mask singleton resource for an environment."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/debugmask",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"debugmask"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the debug mask. Use the following structure in your request: `organizations/{org}/environments/{env}/debugmask`."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"variables\": [\n    \"minim\",\n    \"anim eu laboris elit\"\n  ],\n  \"requestJSONPaths\": [\n    \"elit velit sint enim\",\n    \"magna deserunt dolore\"\n  ],\n  \"responseJSONPaths\": [\n    \"eiusmod veniam\",\n    \"ullamco est velit laboris null\"\n  ],\n  \"faultJSONPaths\": [\n    \"Lorem cupidatat commodo ex\",\n    \"Ut nulla ipsum pariatur labore\"\n  ],\n  \"requestXPaths\": [\n    \"ullamco\",\n    \"consequat enim eu\"\n  ],\n  \"name\": \"et labore in\",\n  \"responseXPaths\": [\n    \"proident\",\n    \"in veniam Duis eiusmod\"\n  ],\n  \"namespaces\": {\n    \"sint860\": \"Ut do\",\n    \"pariatur69\": \"occaecat ut velit\"\n  },\n  \"faultXPaths\": [\n    \"laborum qui ipsum id\",\n    \"ex\"\n  ]\n}"
																}
															]
														},
														{
															"name": "Update Environment Debug Mask",
															"request": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"variables\": [\n    \"quis eiusmod\",\n    \"sunt adipisicing pariatur\"\n  ],\n  \"requestJSONPaths\": [\n    \"nisi ut commodo esse\",\n    \"in aute\"\n  ],\n  \"responseJSONPaths\": [\n    \"non reprehenderit sed\",\n    \"consectetur in Excepteur fugiat\"\n  ],\n  \"faultJSONPaths\": [\n    \"et eu culpa\",\n    \"id veniam sit\"\n  ],\n  \"requestXPaths\": [\n    \"enim\",\n    \"elit non ut\"\n  ],\n  \"name\": \"dolore anim\",\n  \"responseXPaths\": [\n    \"ullamco Ut tempor commodo\",\n    \"elit\"\n  ],\n  \"namespaces\": {\n    \"eu19\": \"amet dolore sit\",\n    \"officia_c\": \"laboris quis dolore in Excepte\"\n  },\n  \"faultXPaths\": [\n    \"nisi irure officia ipsum esse\",\n    \"et dolore\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/debugmask?updateMask=labore quis Ut&replaceRepeatedFields=true",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId",
																		"debugmask"
																	],
																	"query": [
																		{
																			"key": "updateMask",
																			"value": "labore quis Ut",
																			"description": "Field debug mask to support partial updates."
																		},
																		{
																			"key": "replaceRepeatedFields",
																			"value": "true",
																			"description": "Boolean flag that specifies whether to replace existing values in the debug mask when doing an update. Set to true to replace existing values. The default behavior is to append the values (false)."
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `debugMask.name`. Name of the debug mask."
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `debugMask.name`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Updates the debug mask singleton resource for an environment."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"variables\": [\n    \"quis eiusmod\",\n    \"sunt adipisicing pariatur\"\n  ],\n  \"requestJSONPaths\": [\n    \"nisi ut commodo esse\",\n    \"in aute\"\n  ],\n  \"responseJSONPaths\": [\n    \"non reprehenderit sed\",\n    \"consectetur in Excepteur fugiat\"\n  ],\n  \"faultJSONPaths\": [\n    \"et eu culpa\",\n    \"id veniam sit\"\n  ],\n  \"requestXPaths\": [\n    \"enim\",\n    \"elit non ut\"\n  ],\n  \"name\": \"dolore anim\",\n  \"responseXPaths\": [\n    \"ullamco Ut tempor commodo\",\n    \"elit\"\n  ],\n  \"namespaces\": {\n    \"eu19\": \"amet dolore sit\",\n    \"officia_c\": \"laboris quis dolore in Excepte\"\n  },\n  \"faultXPaths\": [\n    \"nisi irure officia ipsum esse\",\n    \"et dolore\"\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/debugmask?updateMask=labore quis Ut&replaceRepeatedFields=true",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"debugmask"
																			],
																			"query": [
																				{
																					"key": "updateMask",
																					"value": "labore quis Ut"
																				},
																				{
																					"key": "replaceRepeatedFields",
																					"value": "true"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `debugMask.name`. Name of the debug mask."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `debugMask.name`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"variables\": [\n    \"quis eiusmod\",\n    \"sunt adipisicing pariatur\"\n  ],\n  \"requestJSONPaths\": [\n    \"nisi ut commodo esse\",\n    \"in aute\"\n  ],\n  \"responseJSONPaths\": [\n    \"non reprehenderit sed\",\n    \"consectetur in Excepteur fugiat\"\n  ],\n  \"faultJSONPaths\": [\n    \"et eu culpa\",\n    \"id veniam sit\"\n  ],\n  \"requestXPaths\": [\n    \"enim\",\n    \"elit non ut\"\n  ],\n  \"name\": \"dolore anim\",\n  \"responseXPaths\": [\n    \"ullamco Ut tempor commodo\",\n    \"elit\"\n  ],\n  \"namespaces\": {\n    \"eu19\": \"amet dolore sit\",\n    \"officia_c\": \"laboris quis dolore in Excepte\"\n  },\n  \"faultXPaths\": [\n    \"nisi irure officia ipsum esse\",\n    \"et dolore\"\n  ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "apis/{apisId}",
													"item": [
														{
															"name": "revisions/{revisionsId}",
															"item": [
																{
																	"name": "debugsessions",
																	"item": [
																		{
																			"name": "{debugsessionsId}",
																			"item": [
																				{
																					"name": "data",
																					"item": [
																						{
																							"name": "Delete Debug Session Data",
																							"request": {
																								"method": "DELETE",
																								"header": [
																									{
																										"key": "Accept",
																										"value": "*/*"
																									}
																								],
																								"url": {
																									"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/apis/:apisId/revisions/:revisionsId/debugsessions/:debugsessionsId/data",
																									"host": [
																										"{{BASE_URL}}"
																									],
																									"path": [
																										"v1",
																										"organizations",
																										"{{ORG_ID}}",
																										"environments",
																										":environmentsId",
																										"apis",
																										":apisId",
																										"revisions",
																										":revisionsId",
																										"debugsessions",
																										":debugsessionsId",
																										"data"
																									],
																									"variable": [
																										{
																											"key": "organizationsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. Required. The name of the debug session to delete. Must be of the form: `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{debugsession}`."
																										},
																										{
																											"key": "environmentsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "apisId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "revisionsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "debugsessionsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										}
																									]
																								},
																								"description": "Deletes the data from a debug session. This does not cancel the debug session or prevent further data from being collected if the session is still active in runtime pods."
																							},
																							"response": [
																								{
																									"name": "Successful operation",
																									"originalRequest": {
																										"method": "DELETE",
																										"header": [],
																										"url": {
																											"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/apis/:apisId/revisions/:revisionsId/debugsessions/:debugsessionsId/data",
																											"host": [
																												"{{BASE_URL}}"
																											],
																											"path": [
																												"v1",
																												"organizations",
																												"{{ORG_ID}}",
																												"environments",
																												":environmentsId",
																												"apis",
																												":apisId",
																												"revisions",
																												":revisionsId",
																												"debugsessions",
																												":debugsessionsId",
																												"data"
																											],
																											"variable": [
																												{
																													"key": "organizationsId",
																													"value": "labore quis Ut",
																													"description": "(Required) Part of `name`. Required. The name of the debug session to delete. Must be of the form: `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{debugsession}`."
																												},
																												{
																													"key": "environmentsId",
																													"value": "labore quis Ut",
																													"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																												},
																												{
																													"key": "apisId",
																													"value": "labore quis Ut",
																													"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																												},
																												{
																													"key": "revisionsId",
																													"value": "labore quis Ut",
																													"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																												},
																												{
																													"key": "debugsessionsId",
																													"value": "labore quis Ut",
																													"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																												}
																											]
																										}
																									},
																									"status": "Internal Server Error",
																									"code": 500,
																									"_postman_previewlanguage": "json",
																									"header": [
																										{
																											"key": "Content-Type",
																											"value": "*/*"
																										}
																									],
																									"cookie": [],
																									"body": "{}"
																								}
																							]
																						},
																						{
																							"name": "Get Debug Session Transaction",
																							"request": {
																								"method": "GET",
																								"header": [
																									{
																										"key": "Accept",
																										"value": "*/*"
																									}
																								],
																								"url": {
																									"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/apis/:apisId/revisions/:revisionsId/debugsessions/:debugsessionsId/data/:dataId",
																									"host": [
																										"{{BASE_URL}}"
																									],
																									"path": [
																										"v1",
																										"organizations",
																										"{{ORG_ID}}",
																										"environments",
																										":environmentsId",
																										"apis",
																										":apisId",
																										"revisions",
																										":revisionsId",
																										"debugsessions",
																										":debugsessionsId",
																										"data",
																										":dataId"
																									],
																									"variable": [
																										{
																											"key": "organizationsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. Required. The name of the debug session transaction. Must be of the form: `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{session}/data/{transaction}`."
																										},
																										{
																											"key": "environmentsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "apisId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "revisionsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "debugsessionsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "dataId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										}
																									]
																								},
																								"description": "Gets the debug data from a transaction."
																							},
																							"response": [
																								{
																									"name": "Successful operation",
																									"originalRequest": {
																										"method": "GET",
																										"header": [],
																										"url": {
																											"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/apis/:apisId/revisions/:revisionsId/debugsessions/:debugsessionsId/data/:dataId",
																											"host": [
																												"{{BASE_URL}}"
																											],
																											"path": [
																												"v1",
																												"organizations",
																												"{{ORG_ID}}",
																												"environments",
																												":environmentsId",
																												"apis",
																												":apisId",
																												"revisions",
																												":revisionsId",
																												"debugsessions",
																												":debugsessionsId",
																												"data",
																												":dataId"
																											],
																											"variable": [
																												{
																													"key": "organizationsId",
																													"value": "labore quis Ut",
																													"description": "(Required) Part of `name`. Required. The name of the debug session transaction. Must be of the form: `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{session}/data/{transaction}`."
																												},
																												{
																													"key": "environmentsId",
																													"value": "labore quis Ut",
																													"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																												},
																												{
																													"key": "apisId",
																													"value": "labore quis Ut",
																													"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																												},
																												{
																													"key": "revisionsId",
																													"value": "labore quis Ut",
																													"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																												},
																												{
																													"key": "debugsessionsId",
																													"value": "labore quis Ut",
																													"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																												},
																												{
																													"key": "dataId",
																													"value": "labore quis Ut",
																													"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																												}
																											]
																										}
																									},
																									"status": "Internal Server Error",
																									"code": 500,
																									"_postman_previewlanguage": "json",
																									"header": [
																										{
																											"key": "Content-Type",
																											"value": "*/*"
																										}
																									],
																									"cookie": [],
																									"body": "{\n  \"point\": [\n    {\n      \"results\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"id\": \"consectetur in \"\n    },\n    {\n      \"results\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"id\": \"elit esse nostrud exercitation\"\n    }\n  ],\n  \"completed\": true\n}"
																								}
																							]
																						}
																					]
																				},
																				{
																					"name": "Get Debug Session",
																					"request": {
																						"method": "GET",
																						"header": [
																							{
																								"key": "Accept",
																								"value": "*/*"
																							}
																						],
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/apis/:apisId/revisions/:revisionsId/debugsessions/:debugsessionsId",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"environments",
																								":environmentsId",
																								"apis",
																								":apisId",
																								"revisions",
																								":revisionsId",
																								"debugsessions",
																								":debugsessionsId"
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. Required. The name of the debug session to retrieve. Must be of the form: `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{session}`."
																								},
																								{
																									"key": "environmentsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "apisId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "revisionsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "debugsessionsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								}
																							]
																						},
																						"description": "Retrieves a debug session."
																					},
																					"response": [
																						{
																							"name": "Successful operation",
																							"originalRequest": {
																								"method": "GET",
																								"header": [],
																								"url": {
																									"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/apis/:apisId/revisions/:revisionsId/debugsessions/:debugsessionsId",
																									"host": [
																										"{{BASE_URL}}"
																									],
																									"path": [
																										"v1",
																										"organizations",
																										"{{ORG_ID}}",
																										"environments",
																										":environmentsId",
																										"apis",
																										":apisId",
																										"revisions",
																										":revisionsId",
																										"debugsessions",
																										":debugsessionsId"
																									],
																									"variable": [
																										{
																											"key": "organizationsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. Required. The name of the debug session to retrieve. Must be of the form: `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{session}`."
																										},
																										{
																											"key": "environmentsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "apisId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "revisionsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "debugsessionsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										}
																									]
																								}
																							},
																							"status": "Internal Server Error",
																							"code": 500,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "*/*"
																								}
																							],
																							"cookie": [],
																							"body": "null"
																						}
																					]
																				}
																			]
																		},
																		{
																			"name": "List Debug Sessions",
																			"request": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "*/*"
																					}
																				],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/apis/:apisId/revisions/:revisionsId/debugsessions?pageSize=87452072&pageToken=labore quis Ut",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"apis",
																						":apisId",
																						"revisions",
																						":revisionsId",
																						"debugsessions"
																					],
																					"query": [
																						{
																							"key": "pageSize",
																							"value": "87452072",
																							"description": "Maximum number of debug sessions to return. The page size defaults to 25."
																						},
																						{
																							"key": "pageToken",
																							"value": "labore quis Ut",
																							"description": "Page token, returned from a previous ListDebugSessions call, that you can use to retrieve the next page."
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. Required. The name of the API Proxy revision deployment for which to list debug sessions. Must be of the form: `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`."
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "apisId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "revisionsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																						}
																					]
																				},
																				"description": "Lists debug sessions that are currently active in the given API Proxy revision."
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "GET",
																						"header": [],
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/apis/:apisId/revisions/:revisionsId/debugsessions?pageSize=87452072&pageToken=labore quis Ut",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"environments",
																								":environmentsId",
																								"apis",
																								":apisId",
																								"revisions",
																								":revisionsId",
																								"debugsessions"
																							],
																							"query": [
																								{
																									"key": "pageSize",
																									"value": "87452072"
																								},
																								{
																									"key": "pageToken",
																									"value": "labore quis Ut"
																								}
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. Required. The name of the API Proxy revision deployment for which to list debug sessions. Must be of the form: `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`."
																								},
																								{
																									"key": "environmentsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "apisId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "revisionsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																								}
																							]
																						}
																					},
																					"status": "Internal Server Error",
																					"code": 500,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "*/*"
																						}
																					],
																					"cookie": [],
																					"body": "null"
																				}
																			]
																		},
																		{
																			"name": "Create Debug Session",
																			"request": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "*/*"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "null",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/apis/:apisId/revisions/:revisionsId/debugsessions?timeout=",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"apis",
																						":apisId",
																						"revisions",
																						":revisionsId",
																						"debugsessions"
																					],
																					"query": [
																						{
																							"key": "timeout",
																							"value": "",
																							"description": "Optional. The time in seconds after which this DebugSession should end. A timeout specified in DebugSession will overwrite this value."
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. Required. The resource name of the API Proxy revision deployment for which to create the DebugSession. Must be of the form `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`."
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "apisId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "revisionsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																						}
																					]
																				},
																				"description": "Creates a debug session for a deployed API Proxy revision."
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "POST",
																						"header": [],
																						"body": {
																							"mode": "raw",
																							"raw": "null",
																							"options": {
																								"raw": {
																									"language": "json"
																								}
																							}
																						},
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/apis/:apisId/revisions/:revisionsId/debugsessions?timeout=",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"environments",
																								":environmentsId",
																								"apis",
																								":apisId",
																								"revisions",
																								":revisionsId",
																								"debugsessions"
																							],
																							"query": [
																								{
																									"key": "timeout",
																									"value": ""
																								}
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. Required. The resource name of the API Proxy revision deployment for which to create the DebugSession. Must be of the form `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`."
																								},
																								{
																									"key": "environmentsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "apisId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "revisionsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																								}
																							]
																						}
																					},
																					"status": "Internal Server Error",
																					"code": 500,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "*/*"
																						}
																					],
																					"cookie": [],
																					"body": "null"
																				}
																			]
																		}
																	]
																},
																{
																	"name": "deployments",
																	"item": [
																		{
																			"name": "Get Api Deployment",
																			"request": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "*/*"
																					}
																				],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/apis/:apisId/revisions/:revisionsId/deployments",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"apis",
																						":apisId",
																						"revisions",
																						":revisionsId",
																						"deployments"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name representing an API proxy revision in an environment in the following format: `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`"
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "apisId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "revisionsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				},
																				"description": "Gets the deployment of an API proxy revision and actual state reported by runtime pods."
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "GET",
																						"header": [],
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/apis/:apisId/revisions/:revisionsId/deployments",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"environments",
																								":environmentsId",
																								"apis",
																								":apisId",
																								"revisions",
																								":revisionsId",
																								"deployments"
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. Required. Name representing an API proxy revision in an environment in the following format: `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`"
																								},
																								{
																									"key": "environmentsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "apisId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "revisionsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								}
																							]
																						}
																					},
																					"status": "Internal Server Error",
																					"code": 500,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "*/*"
																						}
																					],
																					"cookie": [],
																					"body": "null"
																				}
																			]
																		},
																		{
																			"name": "Undeploy Api Proxy",
																			"request": {
																				"method": "DELETE",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "*/*"
																					}
																				],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/apis/:apisId/revisions/:revisionsId/deployments?sequencedRollout=true",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"apis",
																						":apisId",
																						"revisions",
																						":revisionsId",
																						"deployments"
																					],
																					"query": [
																						{
																							"key": "sequencedRollout",
																							"value": "true",
																							"description": "Flag that specifies whether to enable sequenced rollout. If set to `true`, the environment group routing rules corresponding to this deployment will be removed before removing the deployment from the runtime. This is likely to be a rare use case; it is only needed when the intended effect of undeploying this proxy is to cause the traffic it currently handles to be rerouted to some other existing proxy in the environment group. The [GenerateUndeployChangeReport API](GenerateUndeployChangeReport) may be used to examine routing changes before issuing the undeployment request, and its response will indicate if a sequenced rollout is recommended for the undeployment."
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the API proxy revision deployment in the following format: `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`"
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "apisId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "revisionsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				},
																				"description": "Undeploys an API proxy revision from an environment. For a request path `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}/deployments`, two permissions are required: * `apigee.deployments.delete` on the resource `organizations/{org}/environments/{env}` * `apigee.proxyrevisions.undeploy` on the resource `organizations/{org}/apis/{api}/revisions/{rev}`"
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "DELETE",
																						"header": [],
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/apis/:apisId/revisions/:revisionsId/deployments?sequencedRollout=true",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"environments",
																								":environmentsId",
																								"apis",
																								":apisId",
																								"revisions",
																								":revisionsId",
																								"deployments"
																							],
																							"query": [
																								{
																									"key": "sequencedRollout",
																									"value": "true"
																								}
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. Required. Name of the API proxy revision deployment in the following format: `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`"
																								},
																								{
																									"key": "environmentsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "apisId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "revisionsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								}
																							]
																						}
																					},
																					"status": "Internal Server Error",
																					"code": 500,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "*/*"
																						}
																					],
																					"cookie": [],
																					"body": "{}"
																				}
																			]
																		},
																		{
																			"name": "Deploy Api Proxy",
																			"request": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "*/*"
																					}
																				],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/apis/:apisId/revisions/:revisionsId/deployments?override=true&sequencedRollout=true&serviceAccount=labore quis Ut",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"apis",
																						":apisId",
																						"revisions",
																						":revisionsId",
																						"deployments"
																					],
																					"query": [
																						{
																							"key": "override",
																							"value": "true",
																							"description": "Flag that specifies whether the new deployment replaces other deployed revisions of the API proxy in the environment. Set `override` to `true` to replace other deployed revisions. By default, `override` is `false` and the deployment is rejected if other revisions of the API proxy are deployed in the environment."
																						},
																						{
																							"key": "sequencedRollout",
																							"value": "true",
																							"description": "Flag that specifies whether to enable sequenced rollout. If set to `true`, the routing rules for this deployment and the environment changes to add the deployment will be rolled out in a safe order. This reduces the risk of downtime that could be caused by changing the environment group's routing before the new destination for the affected traffic is ready to receive it. This should only be necessary if the new deployment will be capturing traffic from another environment under a shared environment group or if traffic will be rerouted to a different environment due to a base path removal. The [GenerateDeployChangeReport API](GenerateDeployChangeReport) may be used to examine routing changes before issuing the deployment request, and its response will indicate if a sequenced rollout is recommended for the deployment."
																						},
																						{
																							"key": "serviceAccount",
																							"value": "labore quis Ut",
																							"description": "Google Cloud IAM service account. The service account represents the identity of the deployed proxy, and determines what permissions it has. The format must be `{ACCOUNT_ID}@{PROJECT}.iam.gserviceaccount.com`."
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the API proxy revision deployment in the following format: `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`"
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "apisId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "revisionsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				},
																				"description": "Deploys a revision of an API proxy. If another revision of the same API proxy revision is currently deployed, set the `override` parameter to `true` to have this revision replace the currently deployed revision. You cannot invoke an API proxy until it has been deployed to an environment. After you deploy an API proxy revision, you cannot edit it. To edit the API proxy, you must create and deploy a new revision. For a request path `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}/deployments`, two permissions are required: * `apigee.deployments.create` on the resource `organizations/{org}/environments/{env}` * `apigee.proxyrevisions.deploy` on the resource `organizations/{org}/apis/{api}/revisions/{rev}` "
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "POST",
																						"header": [],
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/apis/:apisId/revisions/:revisionsId/deployments?override=true&sequencedRollout=true&serviceAccount=labore quis Ut",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"environments",
																								":environmentsId",
																								"apis",
																								":apisId",
																								"revisions",
																								":revisionsId",
																								"deployments"
																							],
																							"query": [
																								{
																									"key": "override",
																									"value": "true"
																								},
																								{
																									"key": "sequencedRollout",
																									"value": "true"
																								},
																								{
																									"key": "serviceAccount",
																									"value": "labore quis Ut"
																								}
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. Required. Name of the API proxy revision deployment in the following format: `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`"
																								},
																								{
																									"key": "environmentsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "apisId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "revisionsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								}
																							]
																						}
																					},
																					"status": "Internal Server Error",
																					"code": 500,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "*/*"
																						}
																					],
																					"cookie": [],
																					"body": "null"
																				}
																			]
																		}
																	]
																},
																{
																	"name": "Generate Undeploy Change Report",
																	"request": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/apis/:apisId/revisions/:revisionsId/deployments:generateUndeployChangeReport",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"apis",
																				":apisId",
																				"revisions",
																				":revisionsId",
																				"deployments:generateUndeployChangeReport"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Name of the API proxy revision deployment in the following format: `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`"
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "apisId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "revisionsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Generates a report for a dry run analysis of an UndeployApiProxy request without committing the undeploy. In addition to the standard validations performed when removing deployments, additional analysis will be done to detect possible traffic routing changes that would result from this deployment being removed. Any potential routing conflicts or unsafe changes will be reported in the response. This routing analysis is not performed for a non-dry-run UndeployApiProxy request. For a request path `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}/deployments:generateUndeployChangeReport`, two permissions are required: * `apigee.deployments.delete` on the resource `organizations/{org}/environments/{env}` * `apigee.proxyrevisions.undeploy` on the resource `organizations/{org}/apis/{api}/revisions/{rev}`"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "POST",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/apis/:apisId/revisions/:revisionsId/deployments:generateUndeployChangeReport",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"apis",
																						":apisId",
																						"revisions",
																						":revisionsId",
																						"deployments:generateUndeployChangeReport"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Name of the API proxy revision deployment in the following format: `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`"
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "apisId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "revisionsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"routingConflicts\": [\n    {\n      \"conflictingDeployment\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"environmentGroup\": \"quis ullamco dolore anim\",\n      \"description\": \"aliquip\"\n    },\n    {\n      \"conflictingDeployment\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"environmentGroup\": \"voluptate aliqua est labore occaecat\",\n      \"description\": \"mollit in tempor exercitation cillum\"\n    }\n  ],\n  \"validationErrors\": {\n    \"violations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"routingChanges\": [\n    {\n      \"shouldSequenceRollout\": false,\n      \"toDeployment\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fromDeployment\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": \"Lorem sint ullamco ipsum aliqua\",\n      \"environmentGroup\": \"ea in\"\n    },\n    {\n      \"shouldSequenceRollout\": false,\n      \"toDeployment\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fromDeployment\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": \"tempor est elit\",\n      \"environmentGroup\": \"ut ex\"\n    }\n  ]\n}"
																		}
																	]
																},
																{
																	"name": "Generate Deploy Change Report",
																	"request": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/apis/:apisId/revisions/:revisionsId/deployments:generateDeployChangeReport?override=true",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"apis",
																				":apisId",
																				"revisions",
																				":revisionsId",
																				"deployments:generateDeployChangeReport"
																			],
																			"query": [
																				{
																					"key": "override",
																					"value": "true",
																					"description": "Flag that specifies whether to force the deployment of the new revision over the currently deployed revision by overriding conflict checks."
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Name of the API proxy revision deployment in the following format: `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`"
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "apisId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "revisionsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Generates a report for a dry run analysis of a DeployApiProxy request without committing the deployment. In addition to the standard validations performed when adding deployments, additional analysis will be done to detect possible traffic routing changes that would result from this deployment being created. Any potential routing conflicts or unsafe changes will be reported in the response. This routing analysis is not performed for a non-dry-run DeployApiProxy request. For a request path `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}/deployments:generateDeployChangeReport`, two permissions are required: * `apigee.deployments.create` on the resource `organizations/{org}/environments/{env}` * `apigee.proxyrevisions.deploy` on the resource `organizations/{org}/apis/{api}/revisions/{rev}`"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "POST",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/apis/:apisId/revisions/:revisionsId/deployments:generateDeployChangeReport?override=true",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"apis",
																						":apisId",
																						"revisions",
																						":revisionsId",
																						"deployments:generateDeployChangeReport"
																					],
																					"query": [
																						{
																							"key": "override",
																							"value": "true"
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Name of the API proxy revision deployment in the following format: `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`"
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "apisId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "revisionsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"routingConflicts\": [\n    {\n      \"conflictingDeployment\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"environmentGroup\": \"irure\",\n      \"description\": \"dolore reprehenderit anim dol\"\n    },\n    {\n      \"conflictingDeployment\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"environmentGroup\": \"dolore laborum\",\n      \"description\": \"ullamco occaecat in ut quis\"\n    }\n  ],\n  \"validationErrors\": {\n    \"violations\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"routingChanges\": [\n    {\n      \"shouldSequenceRollout\": false,\n      \"toDeployment\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fromDeployment\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": \"non occaecat adipi\",\n      \"environmentGroup\": \"aliqua ullamco\"\n    },\n    {\n      \"shouldSequenceRollout\": true,\n      \"toDeployment\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fromDeployment\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": \"commodo in\",\n      \"environmentGroup\": \"cillum enim offi\"\n    }\n  ]\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "List Api Deployments In Environment",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/apis/:apisId/deployments",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId",
																		"apis",
																		":apisId",
																		"deployments"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. Name representing an API proxy in an environment in the following format: `organizations/{org}/environments/{env}/apis/{api}`"
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		},
																		{
																			"key": "apisId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Lists all deployments of an API proxy in an environment."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/apis/:apisId/deployments",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"apis",
																				":apisId",
																				"deployments"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. Name representing an API proxy in an environment in the following format: `organizations/{org}/environments/{env}/apis/{api}`"
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "apisId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														}
													]
												},
												{
													"name": "traceConfig",
													"item": [
														{
															"name": "overrides",
															"item": [
																{
																	"name": "{overridesId}",
																	"item": [
																		{
																			"name": "Get Trace Config Override",
																			"request": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "*/*"
																					}
																				],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/traceConfig/overrides/:overridesId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"traceConfig",
																						"overrides",
																						":overridesId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the trace configuration override. Use the following structure in your request: \"organizations/*/environments/*/traceConfig/overrides/*\"."
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "overridesId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				},
																				"description": "Gets a trace configuration override."
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "GET",
																						"header": [],
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/traceConfig/overrides/:overridesId",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"environments",
																								":environmentsId",
																								"traceConfig",
																								"overrides",
																								":overridesId"
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. Required. Name of the trace configuration override. Use the following structure in your request: \"organizations/*/environments/*/traceConfig/overrides/*\"."
																								},
																								{
																									"key": "environmentsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "overridesId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								}
																							]
																						}
																					},
																					"status": "Internal Server Error",
																					"code": 500,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "*/*"
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"name\": \"est\",\n  \"samplingConfig\": {\n    \"sampler\": \"PROBABILITY\",\n    \"samplingRate\": 21887795.743015334\n  },\n  \"apiProxy\": \"aute exercitation\"\n}"
																				}
																			]
																		},
																		{
																			"name": "Update Trace Config Override",
																			"request": {
																				"method": "PATCH",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "*/*"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"name\": \"est\",\n  \"samplingConfig\": {\n    \"sampler\": \"PROBABILITY\",\n    \"samplingRate\": 21887795.743015334\n  },\n  \"apiProxy\": \"aute exercitation\"\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/traceConfig/overrides/:overridesId?updateMask=labore quis Ut",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"traceConfig",
																						"overrides",
																						":overridesId"
																					],
																					"query": [
																						{
																							"key": "updateMask",
																							"value": "labore quis Ut",
																							"description": "List of fields to be updated."
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the trace configuration override. Use the following structure in your request: \"organizations/*/environments/*/traceConfig/overrides/*\"."
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "overridesId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				},
																				"description": "Updates a distributed trace configuration override. Note that the repeated fields have replace semantics when included in the field mask and that they will be overwritten by the value of the fields in the request body."
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "PATCH",
																						"header": [],
																						"body": {
																							"mode": "raw",
																							"raw": "{\n  \"name\": \"est\",\n  \"samplingConfig\": {\n    \"sampler\": \"PROBABILITY\",\n    \"samplingRate\": 21887795.743015334\n  },\n  \"apiProxy\": \"aute exercitation\"\n}",
																							"options": {
																								"raw": {
																									"language": "json"
																								}
																							}
																						},
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/traceConfig/overrides/:overridesId?updateMask=labore quis Ut",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"environments",
																								":environmentsId",
																								"traceConfig",
																								"overrides",
																								":overridesId"
																							],
																							"query": [
																								{
																									"key": "updateMask",
																									"value": "labore quis Ut"
																								}
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. Required. Name of the trace configuration override. Use the following structure in your request: \"organizations/*/environments/*/traceConfig/overrides/*\"."
																								},
																								{
																									"key": "environmentsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "overridesId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								}
																							]
																						}
																					},
																					"status": "Internal Server Error",
																					"code": 500,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "*/*"
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"name\": \"est\",\n  \"samplingConfig\": {\n    \"sampler\": \"PROBABILITY\",\n    \"samplingRate\": 21887795.743015334\n  },\n  \"apiProxy\": \"aute exercitation\"\n}"
																				}
																			]
																		},
																		{
																			"name": "Delete Trace Config Override",
																			"request": {
																				"method": "DELETE",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "*/*"
																					}
																				],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/traceConfig/overrides/:overridesId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"traceConfig",
																						"overrides",
																						":overridesId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the trace configuration override. Use the following structure in your request: \"organizations/*/environments/*/traceConfig/overrides/*\"."
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "overridesId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				},
																				"description": "Deletes a distributed trace configuration override."
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "DELETE",
																						"header": [],
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/traceConfig/overrides/:overridesId",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"environments",
																								":environmentsId",
																								"traceConfig",
																								"overrides",
																								":overridesId"
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. Required. Name of the trace configuration override. Use the following structure in your request: \"organizations/*/environments/*/traceConfig/overrides/*\"."
																								},
																								{
																									"key": "environmentsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "overridesId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								}
																							]
																						}
																					},
																					"status": "Internal Server Error",
																					"code": 500,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "*/*"
																						}
																					],
																					"cookie": [],
																					"body": "{}"
																				}
																			]
																		}
																	]
																},
																{
																	"name": "List Trace Config Overrides",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/traceConfig/overrides?pageSize=87452072&pageToken=labore quis Ut",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"traceConfig",
																				"overrides"
																			],
																			"query": [
																				{
																					"key": "pageSize",
																					"value": "87452072",
																					"description": "Maximum number of trace configuration overrides to return. If not specified, the maximum number returned is 25. The maximum number cannot exceed 100."
																				},
																				{
																					"key": "pageToken",
																					"value": "labore quis Ut",
																					"description": "A page token, returned from a previous `ListTraceConfigOverrides` call. Token value that can be used to retrieve the subsequent page. When paginating, all other parameters provided to `ListTraceConfigOverrides` must match those specified in the call to obtain the page token."
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. Parent resource of the trace configuration override. Use the following structure in your request: \"organizations/*/environments/*/traceConfig\"."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Lists all of the distributed trace configuration overrides in an environment."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/traceConfig/overrides?pageSize=87452072&pageToken=labore quis Ut",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"traceConfig",
																						"overrides"
																					],
																					"query": [
																						{
																							"key": "pageSize",
																							"value": "87452072"
																						},
																						{
																							"key": "pageToken",
																							"value": "labore quis Ut"
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. Required. Parent resource of the trace configuration override. Use the following structure in your request: \"organizations/*/environments/*/traceConfig\"."
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"nextPageToken\": \"\",\n  \"traceConfigOverrides\": [\n    {\n      \"name\": \"aliquip anim\",\n      \"samplingConfig\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"apiProxy\": \"ex elit\"\n    },\n    {\n      \"name\": \"sit nulla\",\n      \"samplingConfig\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"apiProxy\": \"laborum mollit ut est deserunt\"\n    }\n  ]\n}"
																		}
																	]
																},
																{
																	"name": "Create Trace Config Override",
																	"request": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"est\",\n  \"samplingConfig\": {\n    \"sampler\": \"PROBABILITY\",\n    \"samplingRate\": 21887795.743015334\n  },\n  \"apiProxy\": \"aute exercitation\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/traceConfig/overrides",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"traceConfig",
																				"overrides"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. Parent resource of the trace configuration override. Use the following structure in your request. \"organizations/*/environments/*/traceConfig\"."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Creates a trace configuration override. The response contains a system-generated UUID, that can be used to view, update, or delete the configuration override. Use the List API to view the existing trace configuration overrides."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "POST",
																				"header": [],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"name\": \"est\",\n  \"samplingConfig\": {\n    \"sampler\": \"PROBABILITY\",\n    \"samplingRate\": 21887795.743015334\n  },\n  \"apiProxy\": \"aute exercitation\"\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/traceConfig/overrides",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"traceConfig",
																						"overrides"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. Required. Parent resource of the trace configuration override. Use the following structure in your request. \"organizations/*/environments/*/traceConfig\"."
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"name\": \"est\",\n  \"samplingConfig\": {\n    \"sampler\": \"PROBABILITY\",\n    \"samplingRate\": 21887795.743015334\n  },\n  \"apiProxy\": \"aute exercitation\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "Update Trace Config",
															"request": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"endpoint\": \"exercitation Lorem\",\n  \"samplingConfig\": {\n    \"sampler\": \"PROBABILITY\",\n    \"samplingRate\": -34725722.400128104\n  },\n  \"exporter\": \"JAEGER\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/traceConfig?updateMask=labore quis Ut",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId",
																		"traceConfig"
																	],
																	"query": [
																		{
																			"key": "updateMask",
																			"value": "labore quis Ut",
																			"description": "List of fields to be updated."
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the trace configuration. Use the following structure in your request: \"organizations/*/environments/*/traceConfig\"."
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Updates the trace configurations in an environment. Note that the repeated fields have replace semantics when included in the field mask and that they will be overwritten by the value of the fields in the request body."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PATCH",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"endpoint\": \"exercitation Lorem\",\n  \"samplingConfig\": {\n    \"sampler\": \"PROBABILITY\",\n    \"samplingRate\": -34725722.400128104\n  },\n  \"exporter\": \"JAEGER\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/traceConfig?updateMask=labore quis Ut",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"traceConfig"
																			],
																			"query": [
																				{
																					"key": "updateMask",
																					"value": "labore quis Ut"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the trace configuration. Use the following structure in your request: \"organizations/*/environments/*/traceConfig\"."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"endpoint\": \"exercitation Lorem\",\n  \"samplingConfig\": {\n    \"sampler\": \"PROBABILITY\",\n    \"samplingRate\": -34725722.400128104\n  },\n  \"exporter\": \"JAEGER\"\n}"
																}
															]
														},
														{
															"name": "Get Trace Config",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/traceConfig",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId",
																		"traceConfig"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the trace configuration. Use the following structure in your request: \"organizations/*/environments/*/traceConfig\"."
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Get distributed trace configuration in an environment."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/traceConfig",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"traceConfig"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the trace configuration. Use the following structure in your request: \"organizations/*/environments/*/traceConfig\"."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"endpoint\": \"exercitation Lorem\",\n  \"samplingConfig\": {\n    \"sampler\": \"PROBABILITY\",\n    \"samplingRate\": -34725722.400128104\n  },\n  \"exporter\": \"JAEGER\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "analytics",
													"item": [
														{
															"name": "exports",
															"item": [
																{
																	"name": "Create Export",
																	"request": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"datastoreName\": \"voluptate cupidatat\",\n  \"description\": \"pariatur aliquip dolore magna\",\n  \"outputFormat\": \"ullamco adipisicing\",\n  \"name\": \"est enim in\",\n  \"csvDelimiter\": \"anim fugiat exercitation laborum eu\",\n  \"dateRange\": {\n    \"start\": \"magna ut \",\n    \"end\": \"ut Ut mollit\"\n  }\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/analytics/exports",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"analytics",
																				"exports"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. Names of the parent organization and environment. Must be of the form `organizations/{org}/environments/{env}`."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Submit a data export job to be processed in the background. If the request is successful, the API returns a 201 status, a URI that can be used to retrieve the status of the export job, and the `state` value of \"enqueued\"."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "POST",
																				"header": [],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"datastoreName\": \"voluptate cupidatat\",\n  \"description\": \"pariatur aliquip dolore magna\",\n  \"outputFormat\": \"ullamco adipisicing\",\n  \"name\": \"est enim in\",\n  \"csvDelimiter\": \"anim fugiat exercitation laborum eu\",\n  \"dateRange\": {\n    \"start\": \"magna ut \",\n    \"end\": \"ut Ut mollit\"\n  }\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/analytics/exports",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"analytics",
																						"exports"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. Required. Names of the parent organization and environment. Must be of the form `organizations/{org}/environments/{env}`."
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"datastoreName\": \"elit\",\n  \"executionTime\": \"officia\",\n  \"error\": \"aute dolore est veniam pariatur\",\n  \"updated\": \"minim \",\n  \"description\": \"id do\",\n  \"created\": \"labore ullamco\",\n  \"state\": \"sint reprehenderit\",\n  \"self\": \"tempor pariatur magna esse Lorem\",\n  \"name\": \"aliquip labore\"\n}"
																		}
																	]
																},
																{
																	"name": "List Exports",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/analytics/exports",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"analytics",
																				"exports"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. Names of the parent organization and environment. Must be of the form `organizations/{org}/environments/{env}`."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Lists the details and status of all analytics export jobs belonging to the parent organization and environment."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/analytics/exports",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"analytics",
																						"exports"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. Required. Names of the parent organization and environment. Must be of the form `organizations/{org}/environments/{env}`."
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"exports\": [\n    {\n      \"datastoreName\": \"ea nisi\",\n      \"executionTime\": \"in\",\n      \"error\": \"qui occaecat minim\",\n      \"updated\": \"consectetur veniam incididunt ipsum\",\n      \"description\": \"veniam aute nostrud ut\",\n      \"created\": \"anim esse labore\",\n      \"state\": \"incididunt\",\n      \"self\": \"fugiat ut aliquip\",\n      \"name\": \"ullamco commodo ad sint\"\n    },\n    {\n      \"datastoreName\": \"deserunt non cupidatat minim qui\",\n      \"executionTime\": \"in dolor\",\n      \"error\": \"eiusmod incididunt ipsum\",\n      \"updated\": \"ullamco nulla commodo voluptate minim\",\n      \"description\": \"deserunt sunt fugiat aute\",\n      \"created\": \"sit aute\",\n      \"state\": \"proident in\",\n      \"self\": \"adipisicing nisi\",\n      \"name\": \"dolor Duis in\"\n    }\n  ]\n}"
																		}
																	]
																},
																{
																	"name": "Get Export",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/analytics/exports/:exportsId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"analytics",
																				"exports",
																				":exportsId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Resource name of the export to get."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "exportsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Gets the details and status of an analytics export job. If the export job is still in progress, its `state` is set to \"running\". After the export job has completed successfully, its `state` is set to \"completed\". If the export job fails, its `state` is set to `failed`."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/analytics/exports/:exportsId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"analytics",
																						"exports",
																						":exportsId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Resource name of the export to get."
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "exportsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"datastoreName\": \"elit\",\n  \"executionTime\": \"officia\",\n  \"error\": \"aute dolore est veniam pariatur\",\n  \"updated\": \"minim \",\n  \"description\": \"id do\",\n  \"created\": \"labore ullamco\",\n  \"state\": \"sint reprehenderit\",\n  \"self\": \"tempor pariatur magna esse Lorem\",\n  \"name\": \"aliquip labore\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "Get Schema",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/analytics/admin/schemav2?type=labore quis Ut&disableCache=true",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId",
																		"analytics",
																		"admin",
																		"schemav2"
																	],
																	"query": [
																		{
																			"key": "type",
																			"value": "labore quis Ut",
																			"description": "Required. Name of the dataset for which you want to retrieve the schema. For example: `fact` or `agg_cus1`"
																		},
																		{
																			"key": "disableCache",
																			"value": "true",
																			"description": "Flag that specifies whether the schema is be read from the database or cache. Set to `true` to read the schema from the database. Defaults to cache."
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Path to the schema. Use the following structure in your request: `organizations/{org}/environments/{env}/analytics/admin/schemav2`."
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Gets a list of metrics and dimensions that can be used to create analytics queries and reports. Each schema element contains the name of the field, its associated type, and a flag indicating whether it is a standard or custom field."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/analytics/admin/schemav2?type=labore quis Ut&disableCache=true",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"analytics",
																				"admin",
																				"schemav2"
																			],
																			"query": [
																				{
																					"key": "type",
																					"value": "labore quis Ut"
																				},
																				{
																					"key": "disableCache",
																					"value": "true"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Path to the schema. Use the following structure in your request: `organizations/{org}/environments/{env}/analytics/admin/schemav2`."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"meta\": [\n    \"labore veniam laboris dolor\",\n    \"in Duis\"\n  ],\n  \"metrics\": [\n    {\n      \"name\": \"tempor magna dolore dolor anim\",\n      \"properties\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"name\": \"Duis dolor\",\n      \"properties\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"dimensions\": [\n    {\n      \"name\": \"exercitation id est consectetur\",\n      \"properties\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"name\": \"dolore sit in\",\n      \"properties\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "queries",
													"item": [
														{
															"name": "{queriesId}",
															"item": [
																{
																	"name": "Get Async Query",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/queries/:queriesId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"queries",
																				":queriesId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the asynchronous query to get. Must be of the form `organizations/{org}/environments/{env}/queries/{queryId}`."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "queriesId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Get query status If the query is still in progress, the `state` is set to \"running\" After the query has completed successfully, `state` is set to \"completed\""
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/queries/:queriesId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"queries",
																						":queriesId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the asynchronous query to get. Must be of the form `organizations/{org}/environments/{env}/queries/{queryId}`."
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "queriesId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "null"
																		}
																	]
																},
																{
																	"name": "Get Async Query Result",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/queries/:queriesId/result",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"queries",
																				":queriesId",
																				"result"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the asynchronous query result to get. Must be of the form `organizations/{org}/environments/{env}/queries/{queryId}/result`."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "queriesId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "After the query is completed, use this API to retrieve the results. If the request succeeds, and there is a non-zero result set, the result is downloaded to the client as a zipped JSON file. The name of the downloaded file will be: OfflineQueryResult-.zip Example: `OfflineQueryResult-9cfc0d85-0f30-46d6-ae6f-318d0cb961bd.zip`"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/queries/:queriesId/result",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"queries",
																						":queriesId",
																						"result"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the asynchronous query result to get. Must be of the form `organizations/{org}/environments/{env}/queries/{queryId}/result`."
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "queriesId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "null"
																		}
																	]
																},
																{
																	"name": "Get Async Query Result Url",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/queries/:queriesId/resulturl",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"queries",
																				":queriesId",
																				"resulturl"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the asynchronous query result to get. Must be of the form `organizations/{org}/environments/{env}/queries/{queryId}/resulturl`."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "queriesId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "After the query is completed, use this API to retrieve the results. If the request succeeds, and there is a non-zero result set, the result is sent to the client as a list of urls to JSON files."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/queries/:queriesId/resulturl",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"queries",
																						":queriesId",
																						"resulturl"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the asynchronous query result to get. Must be of the form `organizations/{org}/environments/{env}/queries/{queryId}/resulturl`."
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "queriesId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "null"
																		}
																	]
																}
															]
														},
														{
															"name": "Create Async Query",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "null",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/queries",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId",
																		"queries"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. The parent resource name. Must be of the form `organizations/{org}/environments/{env}`."
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Submit a query to be processed in the background. If the submission of the query succeeds, the API returns a 201 status and an ID that refer to the query. In addition to the HTTP status 201, the `state` of \"enqueued\" means that the request succeeded."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/queries",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"queries"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. The parent resource name. Must be of the form `organizations/{org}/environments/{env}`."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														},
														{
															"name": "List Async Queries",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/queries?submittedBy=labore quis Ut&status=labore quis Ut&from=labore quis Ut&to=labore quis Ut&dataset=labore quis Ut&inclQueriesWithoutReport=labore quis Ut",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId",
																		"queries"
																	],
																	"query": [
																		{
																			"key": "submittedBy",
																			"value": "labore quis Ut",
																			"description": "Filter response list by user who submitted queries."
																		},
																		{
																			"key": "status",
																			"value": "labore quis Ut",
																			"description": "Filter response list by asynchronous query status."
																		},
																		{
																			"key": "from",
																			"value": "labore quis Ut",
																			"description": "Filter response list by returning asynchronous queries that created after this date time. Time must be in ISO date-time format like '2011-12-03T10:15:30Z'."
																		},
																		{
																			"key": "to",
																			"value": "labore quis Ut",
																			"description": "Filter response list by returning asynchronous queries that created before this date time. Time must be in ISO date-time format like '2011-12-03T10:16:30Z'."
																		},
																		{
																			"key": "dataset",
																			"value": "labore quis Ut",
																			"description": "Filter response list by dataset. Example: `api`, `mint`"
																		},
																		{
																			"key": "inclQueriesWithoutReport",
																			"value": "labore quis Ut",
																			"description": "Flag to include asynchronous queries that don't have a report denifition."
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. The parent resource name. Must be of the form `organizations/{org}/environments/{env}`."
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Return a list of Asynchronous Queries"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/queries?submittedBy=labore quis Ut&status=labore quis Ut&from=labore quis Ut&to=labore quis Ut&dataset=labore quis Ut&inclQueriesWithoutReport=labore quis Ut",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"queries"
																			],
																			"query": [
																				{
																					"key": "submittedBy",
																					"value": "labore quis Ut"
																				},
																				{
																					"key": "status",
																					"value": "labore quis Ut"
																				},
																				{
																					"key": "from",
																					"value": "labore quis Ut"
																				},
																				{
																					"key": "to",
																					"value": "labore quis Ut"
																				},
																				{
																					"key": "dataset",
																					"value": "labore quis Ut"
																				},
																				{
																					"key": "inclQueriesWithoutReport",
																					"value": "labore quis Ut"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. The parent resource name. Must be of the form `organizations/{org}/environments/{env}`."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														}
													]
												},
												{
													"name": "sharedflows/{sharedflowsId}",
													"item": [
														{
															"name": "revisions/{revisionsId}/deployments",
															"item": [
																{
																	"name": "Undeploy Shared Flow",
																	"request": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/sharedflows/:sharedflowsId/revisions/:revisionsId/deployments",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"sharedflows",
																				":sharedflowsId",
																				"revisions",
																				":revisionsId",
																				"deployments"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the shared flow revision to undeploy in the following format: `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`"
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "sharedflowsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "revisionsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Undeploys a shared flow revision from an environment. For a request path `organizations/{org}/environments/{env}/sharedflows/{sf}/revisions/{rev}/deployments`, two permissions are required: * `apigee.deployments.delete` on the resource `organizations/{org}/environments/{env}` * `apigee.sharedflowrevisions.undeploy` on the resource `organizations/{org}/sharedflows/{sf}/revisions/{rev}`"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/sharedflows/:sharedflowsId/revisions/:revisionsId/deployments",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"sharedflows",
																						":sharedflowsId",
																						"revisions",
																						":revisionsId",
																						"deployments"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the shared flow revision to undeploy in the following format: `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`"
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "sharedflowsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "revisionsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "{}"
																		}
																	]
																},
																{
																	"name": "Deploy Shared Flow",
																	"request": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/sharedflows/:sharedflowsId/revisions/:revisionsId/deployments?override=true&serviceAccount=labore quis Ut",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"sharedflows",
																				":sharedflowsId",
																				"revisions",
																				":revisionsId",
																				"deployments"
																			],
																			"query": [
																				{
																					"key": "override",
																					"value": "true",
																					"description": "Flag that specifies whether the new deployment replaces other deployed revisions of the shared flow in the environment. Set `override` to `true` to replace other deployed revisions. By default, `override` is `false` and the deployment is rejected if other revisions of the shared flow are deployed in the environment."
																				},
																				{
																					"key": "serviceAccount",
																					"value": "labore quis Ut",
																					"description": "Google Cloud IAM service account. The service account represents the identity of the deployed proxy, and determines what permissions it has. The format must be `{ACCOUNT_ID}@{PROJECT}.iam.gserviceaccount.com`."
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the shared flow revision to deploy in the following format: `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`"
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "sharedflowsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "revisionsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Deploys a revision of a shared flow. If another revision of the same shared flow is currently deployed, set the `override` parameter to `true` to have this revision replace the currently deployed revision. You cannot use a shared flow until it has been deployed to an environment. For a request path `organizations/{org}/environments/{env}/sharedflows/{sf}/revisions/{rev}/deployments`, two permissions are required: * `apigee.deployments.create` on the resource `organizations/{org}/environments/{env}` * `apigee.sharedflowrevisions.deploy` on the resource `organizations/{org}/sharedflows/{sf}/revisions/{rev}`"
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "POST",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/sharedflows/:sharedflowsId/revisions/:revisionsId/deployments?override=true&serviceAccount=labore quis Ut",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"sharedflows",
																						":sharedflowsId",
																						"revisions",
																						":revisionsId",
																						"deployments"
																					],
																					"query": [
																						{
																							"key": "override",
																							"value": "true"
																						},
																						{
																							"key": "serviceAccount",
																							"value": "labore quis Ut"
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the shared flow revision to deploy in the following format: `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`"
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "sharedflowsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "revisionsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "null"
																		}
																	]
																},
																{
																	"name": "Get Shared Flow Deployment",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/sharedflows/:sharedflowsId/revisions/:revisionsId/deployments",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"sharedflows",
																				":sharedflowsId",
																				"revisions",
																				":revisionsId",
																				"deployments"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name representing a shared flow in an environment in the following format: `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`"
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "sharedflowsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "revisionsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Gets the deployment of a shared flow revision and actual state reported by runtime pods."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/sharedflows/:sharedflowsId/revisions/:revisionsId/deployments",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"sharedflows",
																						":sharedflowsId",
																						"revisions",
																						":revisionsId",
																						"deployments"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name representing a shared flow in an environment in the following format: `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`"
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "sharedflowsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "revisionsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "null"
																		}
																	]
																}
															]
														},
														{
															"name": "List Shared Flow Deployments In Environment",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/sharedflows/:sharedflowsId/deployments",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId",
																		"sharedflows",
																		":sharedflowsId",
																		"deployments"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. Name representing a shared flow in an environment in the following format: `organizations/{org}/environments/{env}/sharedflows/{sharedflow}`"
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		},
																		{
																			"key": "sharedflowsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Lists all deployments of a shared flow in an environment."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/sharedflows/:sharedflowsId/deployments",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"sharedflows",
																				":sharedflowsId",
																				"deployments"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. Name representing a shared flow in an environment in the following format: `organizations/{org}/environments/{env}/sharedflows/{sharedflow}`"
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "sharedflowsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														}
													]
												},
												{
													"name": "archiveDeployments",
													"item": [
														{
															"name": "{archiveDeploymentsId}",
															"item": [
																{
																	"name": "Get Archive Deployment",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/archiveDeployments/:archiveDeploymentsId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"archiveDeployments",
																				":archiveDeploymentsId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the Archive Deployment in the following format: `organizations/{org}/environments/{env}/archiveDeployments/{id}`."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "archiveDeploymentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Gets the specified ArchiveDeployment."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/archiveDeployments/:archiveDeploymentsId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"archiveDeployments",
																						":archiveDeploymentsId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the Archive Deployment in the following format: `organizations/{org}/environments/{env}/archiveDeployments/{id}`."
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "archiveDeploymentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "null"
																		}
																	]
																},
																{
																	"name": "Delete Archive Deployment",
																	"request": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/archiveDeployments/:archiveDeploymentsId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"archiveDeployments",
																				":archiveDeploymentsId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the Archive Deployment in the following format: `organizations/{org}/environments/{env}/archiveDeployments/{id}`."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "archiveDeploymentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Deletes an archive deployment."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/archiveDeployments/:archiveDeploymentsId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"archiveDeployments",
																						":archiveDeploymentsId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the Archive Deployment in the following format: `organizations/{org}/environments/{env}/archiveDeployments/{id}`."
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "archiveDeploymentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "{}"
																		}
																	]
																},
																{
																	"name": "Update Archive Deployment",
																	"request": {
																		"method": "PATCH",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"labels\": {\n    \"estd_\": \"qui eiusmod\"\n  },\n  \"gcsUri\": \"in si\",\n  \"name\": \"incididunt magna\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/archiveDeployments/:archiveDeploymentsId?updateMask=labore quis Ut",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"archiveDeployments",
																				":archiveDeploymentsId"
																			],
																			"query": [
																				{
																					"key": "updateMask",
																					"value": "labore quis Ut",
																					"description": "Required. The list of fields to be updated."
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `archiveDeployment.name`. Name of the Archive Deployment in the following format: `organizations/{org}/environments/{env}/archiveDeployments/{id}`."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `archiveDeployment.name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "archiveDeploymentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `archiveDeployment.name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Updates an existing ArchiveDeployment. Labels can modified but most of the other fields are not modifiable."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "PATCH",
																				"header": [],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"labels\": {\n    \"estd_\": \"qui eiusmod\"\n  },\n  \"gcsUri\": \"in si\",\n  \"name\": \"incididunt magna\"\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/archiveDeployments/:archiveDeploymentsId?updateMask=labore quis Ut",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"archiveDeployments",
																						":archiveDeploymentsId"
																					],
																					"query": [
																						{
																							"key": "updateMask",
																							"value": "labore quis Ut"
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `archiveDeployment.name`. Name of the Archive Deployment in the following format: `organizations/{org}/environments/{env}/archiveDeployments/{id}`."
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `archiveDeployment.name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "archiveDeploymentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `archiveDeployment.name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "null"
																		}
																	]
																}
															]
														},
														{
															"name": "Create Archive Deployment",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"labels\": {\n    \"estd_\": \"qui eiusmod\"\n  },\n  \"gcsUri\": \"in si\",\n  \"name\": \"incididunt magna\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/archiveDeployments",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId",
																		"archiveDeployments"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. The Environment this Archive Deployment will be created in."
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Creates a new ArchiveDeployment."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"labels\": {\n    \"estd_\": \"qui eiusmod\"\n  },\n  \"gcsUri\": \"in si\",\n  \"name\": \"incididunt magna\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/archiveDeployments",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"archiveDeployments"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. The Environment this Archive Deployment will be created in."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														},
														{
															"name": "List Archive Deployments",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/archiveDeployments?filter=labore quis Ut&pageSize=87452072&pageToken=labore quis Ut",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId",
																		"archiveDeployments"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "labore quis Ut",
																			"description": "Optional. An optional query used to return a subset of Archive Deployments using the semantics defined in https://google.aip.dev/160."
																		},
																		{
																			"key": "pageSize",
																			"value": "87452072",
																			"description": "Optional. Maximum number of Archive Deployments to return. If unspecified, at most 25 deployments will be returned."
																		},
																		{
																			"key": "pageToken",
																			"value": "labore quis Ut",
																			"description": "Optional. Page token, returned from a previous ListArchiveDeployments call, that you can use to retrieve the next page."
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. Name of the Environment for which to list Archive Deployments in the format: `organizations/{org}/environments/{env}`."
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Lists the ArchiveDeployments in the specified Environment."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/archiveDeployments?filter=labore quis Ut&pageSize=87452072&pageToken=labore quis Ut",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"archiveDeployments"
																			],
																			"query": [
																				{
																					"key": "filter",
																					"value": "labore quis Ut"
																				},
																				{
																					"key": "pageSize",
																					"value": "87452072"
																				},
																				{
																					"key": "pageToken",
																					"value": "labore quis Ut"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. Name of the Environment for which to list Archive Deployments in the format: `organizations/{org}/environments/{env}`."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														},
														{
															"name": "Generate Download Url",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/archiveDeployments/{{archiveDeploymentsId}}:generateDownloadUrl",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId",
																		"archiveDeployments",
																		"{{archiveDeploymentsId}}:generateDownloadUrl"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. The name of the Archive Deployment you want to download."
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Generates a signed URL for downloading the original zip file used to create an Archive Deployment. The URL is only valid for a limited period and should be used within minutes after generation. Each call returns a new upload URL."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/archiveDeployments/{{archiveDeploymentsId}}:generateDownloadUrl",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"archiveDeployments",
																				"{{archiveDeploymentsId}}:generateDownloadUrl"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. The name of the Archive Deployment you want to download."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"downloadUri\": \"aliqua in\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "references",
													"item": [
														{
															"name": "{referencesId}",
															"item": [
																{
																	"name": "Update Reference",
																	"request": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"description\": \"id reprehenderit occaecat eiusmod\",\n  \"resourceType\": \"tempor Lorem aute\",\n  \"name\": \"nulla ipsum occaecat commodo magna\",\n  \"refers\": \"elit cillum officia\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/references/:referencesId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"references",
																				":referencesId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. The name of the Reference to update. Must be of the form `organizations/{org}/environments/{env}/references/{ref}`."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "referencesId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Updates an existing Reference. Note that this operation has PUT semantics; it will replace the entirety of the existing Reference with the resource in the request body."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"description\": \"id reprehenderit occaecat eiusmod\",\n  \"resourceType\": \"tempor Lorem aute\",\n  \"name\": \"nulla ipsum occaecat commodo magna\",\n  \"refers\": \"elit cillum officia\"\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/references/:referencesId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"references",
																						":referencesId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. The name of the Reference to update. Must be of the form `organizations/{org}/environments/{env}/references/{ref}`."
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "referencesId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"description\": \"id reprehenderit occaecat eiusmod\",\n  \"resourceType\": \"tempor Lorem aute\",\n  \"name\": \"nulla ipsum occaecat commodo magna\",\n  \"refers\": \"elit cillum officia\"\n}"
																		}
																	]
																},
																{
																	"name": "Get Reference",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/references/:referencesId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"references",
																				":referencesId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. The name of the Reference to get. Must be of the form `organizations/{org}/environments/{env}/references/{ref}`."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "referencesId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Gets a Reference resource."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/references/:referencesId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"references",
																						":referencesId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. The name of the Reference to get. Must be of the form `organizations/{org}/environments/{env}/references/{ref}`."
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "referencesId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"description\": \"id reprehenderit occaecat eiusmod\",\n  \"resourceType\": \"tempor Lorem aute\",\n  \"name\": \"nulla ipsum occaecat commodo magna\",\n  \"refers\": \"elit cillum officia\"\n}"
																		}
																	]
																},
																{
																	"name": "Delete Reference",
																	"request": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/references/:referencesId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"references",
																				":referencesId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. The name of the Reference to delete. Must be of the form `organizations/{org}/environments/{env}/references/{ref}`."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "referencesId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Deletes a Reference from an environment. Returns the deleted Reference resource."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/references/:referencesId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"references",
																						":referencesId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. The name of the Reference to delete. Must be of the form `organizations/{org}/environments/{env}/references/{ref}`."
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "referencesId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"description\": \"id reprehenderit occaecat eiusmod\",\n  \"resourceType\": \"tempor Lorem aute\",\n  \"name\": \"nulla ipsum occaecat commodo magna\",\n  \"refers\": \"elit cillum officia\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "Create Reference",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"description\": \"id reprehenderit occaecat eiusmod\",\n  \"resourceType\": \"tempor Lorem aute\",\n  \"name\": \"nulla ipsum occaecat commodo magna\",\n  \"refers\": \"elit cillum officia\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/references",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId",
																		"references"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. The parent environment name under which the Reference will be created. Must be of the form `organizations/{org}/environments/{env}`."
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Creates a Reference in the specified environment."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"description\": \"id reprehenderit occaecat eiusmod\",\n  \"resourceType\": \"tempor Lorem aute\",\n  \"name\": \"nulla ipsum occaecat commodo magna\",\n  \"refers\": \"elit cillum officia\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/references",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"references"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. The parent environment name under which the Reference will be created. Must be of the form `organizations/{org}/environments/{env}`."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"description\": \"id reprehenderit occaecat eiusmod\",\n  \"resourceType\": \"tempor Lorem aute\",\n  \"name\": \"nulla ipsum occaecat commodo magna\",\n  \"refers\": \"elit cillum officia\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "targetservers",
													"item": [
														{
															"name": "{targetserversId}",
															"item": [
																{
																	"name": "Get Target Server",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/targetservers/:targetserversId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"targetservers",
																				":targetserversId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. The name of the TargetServer to get. Must be of the form `organizations/{org}/environments/{env}/targetservers/{target_server_id}`."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "targetserversId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Gets a TargetServer resource."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/targetservers/:targetserversId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"targetservers",
																						":targetserversId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. The name of the TargetServer to get. Must be of the form `organizations/{org}/environments/{env}/targetservers/{target_server_id}`."
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "targetserversId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"host\": \"cupidatat nisi ex officia exercitation\",\n  \"description\": \"ipsum sint\",\n  \"name\": \"eiusmod magna Excepteur\",\n  \"protocol\": \"GRPC\",\n  \"isEnabled\": false,\n  \"port\": -6188204,\n  \"sSLInfo\": {\n    \"protocols\": [\n      \"nulla no\",\n      \"in Excepteur id\"\n    ],\n    \"clientAuthEnabled\": true,\n    \"trustStore\": \"voluptate aliquip est nisi\",\n    \"enabled\": true,\n    \"commonName\": {\n      \"wildcardMatch\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"keyStore\": \"qui eiusmod enim laborum\",\n    \"ignoreValidationErrors\": true,\n    \"ciphers\": [\n      \"velit exercitation Lorem in\",\n      \"proident anim officia veniam\"\n    ],\n    \"keyAlias\": \"consequat aliquip\"\n  }\n}"
																		}
																	]
																},
																{
																	"name": "Update Target Server",
																	"request": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"host\": \"cupidatat nisi ex officia exercitation\",\n  \"description\": \"ipsum sint\",\n  \"name\": \"eiusmod magna Excepteur\",\n  \"protocol\": \"GRPC\",\n  \"isEnabled\": false,\n  \"port\": -6188204,\n  \"sSLInfo\": {\n    \"protocols\": [\n      \"nulla no\",\n      \"in Excepteur id\"\n    ],\n    \"clientAuthEnabled\": true,\n    \"trustStore\": \"voluptate aliquip est nisi\",\n    \"enabled\": true,\n    \"commonName\": {\n      \"wildcardMatch\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"keyStore\": \"qui eiusmod enim laborum\",\n    \"ignoreValidationErrors\": true,\n    \"ciphers\": [\n      \"velit exercitation Lorem in\",\n      \"proident anim officia veniam\"\n    ],\n    \"keyAlias\": \"consequat aliquip\"\n  }\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/targetservers/:targetserversId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"targetservers",
																				":targetserversId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. The name of the TargetServer to replace. Must be of the form `organizations/{org}/environments/{env}/targetservers/{target_server_id}`."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "targetserversId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Updates an existing TargetServer. Note that this operation has PUT semantics; it will replace the entirety of the existing TargetServer with the resource in the request body."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"host\": \"cupidatat nisi ex officia exercitation\",\n  \"description\": \"ipsum sint\",\n  \"name\": \"eiusmod magna Excepteur\",\n  \"protocol\": \"GRPC\",\n  \"isEnabled\": false,\n  \"port\": -6188204,\n  \"sSLInfo\": {\n    \"protocols\": [\n      \"nulla no\",\n      \"in Excepteur id\"\n    ],\n    \"clientAuthEnabled\": true,\n    \"trustStore\": \"voluptate aliquip est nisi\",\n    \"enabled\": true,\n    \"commonName\": {\n      \"wildcardMatch\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"keyStore\": \"qui eiusmod enim laborum\",\n    \"ignoreValidationErrors\": true,\n    \"ciphers\": [\n      \"velit exercitation Lorem in\",\n      \"proident anim officia veniam\"\n    ],\n    \"keyAlias\": \"consequat aliquip\"\n  }\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/targetservers/:targetserversId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"targetservers",
																						":targetserversId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. The name of the TargetServer to replace. Must be of the form `organizations/{org}/environments/{env}/targetservers/{target_server_id}`."
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "targetserversId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"host\": \"cupidatat nisi ex officia exercitation\",\n  \"description\": \"ipsum sint\",\n  \"name\": \"eiusmod magna Excepteur\",\n  \"protocol\": \"GRPC\",\n  \"isEnabled\": false,\n  \"port\": -6188204,\n  \"sSLInfo\": {\n    \"protocols\": [\n      \"nulla no\",\n      \"in Excepteur id\"\n    ],\n    \"clientAuthEnabled\": true,\n    \"trustStore\": \"voluptate aliquip est nisi\",\n    \"enabled\": true,\n    \"commonName\": {\n      \"wildcardMatch\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"keyStore\": \"qui eiusmod enim laborum\",\n    \"ignoreValidationErrors\": true,\n    \"ciphers\": [\n      \"velit exercitation Lorem in\",\n      \"proident anim officia veniam\"\n    ],\n    \"keyAlias\": \"consequat aliquip\"\n  }\n}"
																		}
																	]
																},
																{
																	"name": "Delete Target Server",
																	"request": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/targetservers/:targetserversId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"targetservers",
																				":targetserversId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. The name of the TargetServer to delete. Must be of the form `organizations/{org}/environments/{env}/targetservers/{target_server_id}`."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "targetserversId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Deletes a TargetServer from an environment. Returns the deleted TargetServer resource."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/targetservers/:targetserversId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"environments",
																						":environmentsId",
																						"targetservers",
																						":targetserversId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. The name of the TargetServer to delete. Must be of the form `organizations/{org}/environments/{env}/targetservers/{target_server_id}`."
																						},
																						{
																							"key": "environmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "targetserversId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"host\": \"cupidatat nisi ex officia exercitation\",\n  \"description\": \"ipsum sint\",\n  \"name\": \"eiusmod magna Excepteur\",\n  \"protocol\": \"GRPC\",\n  \"isEnabled\": false,\n  \"port\": -6188204,\n  \"sSLInfo\": {\n    \"protocols\": [\n      \"nulla no\",\n      \"in Excepteur id\"\n    ],\n    \"clientAuthEnabled\": true,\n    \"trustStore\": \"voluptate aliquip est nisi\",\n    \"enabled\": true,\n    \"commonName\": {\n      \"wildcardMatch\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"keyStore\": \"qui eiusmod enim laborum\",\n    \"ignoreValidationErrors\": true,\n    \"ciphers\": [\n      \"velit exercitation Lorem in\",\n      \"proident anim officia veniam\"\n    ],\n    \"keyAlias\": \"consequat aliquip\"\n  }\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "Create Target Server",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"host\": \"officia in\",\n  \"description\": \"dolor eu voluptate\",\n  \"name\": \"elit occaecat ex veniam magna\",\n  \"protocol\": \"HTTP\",\n  \"isEnabled\": true,\n  \"port\": -76540677,\n  \"sSLInfo\": {\n    \"protocols\": [\n      \"anim deserunt dolore\",\n      \"Duis non si\"\n    ],\n    \"clientAuthEnabled\": false,\n    \"trustStore\": \"aute in quis cillum\",\n    \"enabled\": true,\n    \"commonName\": {\n      \"wildcardMatch\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"keyStore\": \"ad Ut\",\n    \"ignoreValidationErrors\": true,\n    \"ciphers\": [\n      \"dolore magna\",\n      \"velit non\"\n    ],\n    \"keyAlias\": \"eu veniam officia\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/targetservers?name=labore quis Ut",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId",
																		"targetservers"
																	],
																	"query": [
																		{
																			"key": "name",
																			"value": "labore quis Ut",
																			"description": "Optional. The ID to give the TargetServer. This will overwrite the value in TargetServer."
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. The parent environment name under which the TargetServer will be created. Must be of the form `organizations/{org}/environments/{env}`."
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Creates a TargetServer in the specified environment."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"host\": \"cupidatat nisi ex officia exercitation\",\n  \"description\": \"ipsum sint\",\n  \"name\": \"eiusmod magna Excepteur\",\n  \"protocol\": \"GRPC\",\n  \"isEnabled\": false,\n  \"port\": -6188204,\n  \"sSLInfo\": {\n    \"protocols\": [\n      \"nulla no\",\n      \"in Excepteur id\"\n    ],\n    \"clientAuthEnabled\": true,\n    \"trustStore\": \"voluptate aliquip est nisi\",\n    \"enabled\": true,\n    \"commonName\": {\n      \"wildcardMatch\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"keyStore\": \"qui eiusmod enim laborum\",\n    \"ignoreValidationErrors\": true,\n    \"ciphers\": [\n      \"velit exercitation Lorem in\",\n      \"proident anim officia veniam\"\n    ],\n    \"keyAlias\": \"consequat aliquip\"\n  }\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/targetservers?name=labore quis Ut",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"environments",
																				":environmentsId",
																				"targetservers"
																			],
																			"query": [
																				{
																					"key": "name",
																					"value": "labore quis Ut"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. The parent environment name under which the TargetServer will be created. Must be of the form `organizations/{org}/environments/{env}`."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"host\": \"cupidatat nisi ex officia exercitation\",\n  \"description\": \"ipsum sint\",\n  \"name\": \"eiusmod magna Excepteur\",\n  \"protocol\": \"GRPC\",\n  \"isEnabled\": false,\n  \"port\": -6188204,\n  \"sSLInfo\": {\n    \"protocols\": [\n      \"nulla no\",\n      \"in Excepteur id\"\n    ],\n    \"clientAuthEnabled\": true,\n    \"trustStore\": \"voluptate aliquip est nisi\",\n    \"enabled\": true,\n    \"commonName\": {\n      \"wildcardMatch\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"keyStore\": \"qui eiusmod enim laborum\",\n    \"ignoreValidationErrors\": true,\n    \"ciphers\": [\n      \"velit exercitation Lorem in\",\n      \"proident anim officia veniam\"\n    ],\n    \"keyAlias\": \"consequat aliquip\"\n  }\n}"
																}
															]
														}
													]
												},
												{
													"name": "Delete Environment",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"environments",
																":environmentsId"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Name of the environment. Use the following structure in your request: `organizations/{org}/environments/{env}`"
																},
																{
																	"key": "environmentsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Deletes an environment from an organization. **Warning: You must delete all key value maps and key value entries before you delete an environment.** Otherwise, if you re-create the environment the key value map entry operations will encounter encryption/decryption discrepancies."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the environment. Use the following structure in your request: `organizations/{org}/environments/{env}`"
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "Modify Environment",
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "null",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId?updateMask=labore quis Ut",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"environments",
																":environmentsId"
															],
															"query": [
																{
																	"key": "updateMask",
																	"value": "labore quis Ut",
																	"description": "List of fields to be updated. Fields that can be updated: node_config."
																}
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Name of the environment. Use the following structure in your request: `organizations/{org}/environments/{environment}`."
																},
																{
																	"key": "environmentsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Updates properties for an Apigee environment with patch semantics using a field mask. **Note:** Not supported for Apigee hybrid."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PATCH",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "null",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId?updateMask=labore quis Ut",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId"
																	],
																	"query": [
																		{
																			"key": "updateMask",
																			"value": "labore quis Ut"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the environment. Use the following structure in your request: `organizations/{org}/environments/{environment}`."
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "Update Environment1",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "null",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"environments",
																":environmentsId"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Name of the environment. Use the following structure in your request: `organizations/{org}/environments/{env}`"
																},
																{
																	"key": "environmentsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Updates an existing environment. When updating properties, you must pass all existing properties to the API, even if they are not being changed. If you omit properties from the payload, the properties are removed. To get the current list of properties for the environment, use the [Get Environment API](get). **Note**: Both `PUT` and `POST` methods are supported for updating an existing environment."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the environment. Use the following structure in your request: `organizations/{org}/environments/{env}`"
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "Update Environment",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "null",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"environments",
																":environmentsId"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Name of the environment. Use the following structure in your request: `organizations/{org}/environments/{env}`"
																},
																{
																	"key": "environmentsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Updates an existing environment. When updating properties, you must pass all existing properties to the API, even if they are not being changed. If you omit properties from the payload, the properties are removed. To get the current list of properties for the environment, use the [Get Environment API](get). **Note**: Both `PUT` and `POST` methods are supported for updating an existing environment."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the environment. Use the following structure in your request: `organizations/{org}/environments/{env}`"
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "Get Environment",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"environments",
																":environmentsId"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Name of the environment. Use the following structure in your request: `organizations/{org}/environments/{env}`"
																},
																{
																	"key": "environmentsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Gets environment details."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the environment. Use the following structure in your request: `organizations/{org}/environments/{env}`"
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "Get Optimized Stats",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/optimizedStats/:optimizedStatsId?select=labore quis Ut&timeUnit=labore quis Ut&timeRange=labore quis Ut&filter=labore quis Ut&sort=labore quis Ut&sortby=labore quis Ut&aggTable=labore quis Ut&limit=labore quis Ut&offset=labore quis Ut&topk=labore quis Ut&tsAscending=true&realtime=true&sonar=true&tzo=labore quis Ut&accuracy=labore quis Ut",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"environments",
																":environmentsId",
																"optimizedStats",
																":optimizedStatsId"
															],
															"query": [
																{
																	"key": "select",
																	"value": "labore quis Ut",
																	"description": "Required. Comma-separated list of metrics. For example: `sum(message_count),sum(error_count)`"
																},
																{
																	"key": "timeUnit",
																	"value": "labore quis Ut",
																	"description": "Granularity of metrics returned. Valid values include: `second`, `minute`, `hour`, `day`, `week`, or `month`."
																},
																{
																	"key": "timeRange",
																	"value": "labore quis Ut",
																	"description": "Required. Time interval for the interactive query. Time range is specified in GMT as `start~end`. For example: `04/15/2017 00:00~05/15/2017 23:59`"
																},
																{
																	"key": "filter",
																	"value": "labore quis Ut",
																	"description": "Filter that enables you to drill-down on specific dimension values."
																},
																{
																	"key": "sort",
																	"value": "labore quis Ut",
																	"description": "Flag that specifies whether the sort order should be ascending or descending. Valid values include `DESC` and `ASC`."
																},
																{
																	"key": "sortby",
																	"value": "labore quis Ut",
																	"description": "Comma-separated list of columns to sort the final result."
																},
																{
																	"key": "aggTable",
																	"value": "labore quis Ut",
																	"description": "Table name used to query custom aggregate tables. If this parameter is skipped, then Apigee will try to retrieve the data from fact tables which will be expensive."
																},
																{
																	"key": "limit",
																	"value": "labore quis Ut",
																	"description": "Maximum number of result items to return. The default and maximum value that can be returned is 14400."
																},
																{
																	"key": "offset",
																	"value": "labore quis Ut",
																	"description": "Offset value. Use `offset` with `limit` to enable pagination of results. For example, to display results 11-20, set limit to `10` and offset to `10`."
																},
																{
																	"key": "topk",
																	"value": "labore quis Ut",
																	"description": "Top number of results to return. For example, to return the top 5 results, set `topk=5`."
																},
																{
																	"key": "tsAscending",
																	"value": "true",
																	"description": "Flag that specifies whether to list timestamps in ascending (`true`) or descending (`false`) order. Apigee recommends setting this value to `true` if you are using `sortby` with `sort=DESC`."
																},
																{
																	"key": "realtime",
																	"value": "true",
																	"description": "No longer used by Apigee. Supported for backwards compatibility."
																},
																{
																	"key": "sonar",
																	"value": "true",
																	"description": "Routes the query to API Monitoring for the last hour."
																},
																{
																	"key": "tzo",
																	"value": "labore quis Ut",
																	"description": "Timezone offset value."
																},
																{
																	"key": "accuracy",
																	"value": "labore quis Ut",
																	"description": "No longer used by Apigee. Supported for backwards compatibility."
																}
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Resource name for which the interactive query will be executed. Use the following format in your request: `organizations/{org}/environments/{env}/optimizedStats/{dimensions}` Dimensions let you view metrics in meaningful groupings, such as `apiproxy`, `target_host`. The value of `dimensions` should be a comma-separated list as shown below: `organizations/{org}/environments/{env}/optimizedStats/apiproxy,request_verb`"
																},
																{
																	"key": "environmentsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																},
																{
																	"key": "optimizedStatsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Similar to GetStats except that the response is less verbose."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/optimizedStats/:optimizedStatsId?select=labore quis Ut&timeUnit=labore quis Ut&timeRange=labore quis Ut&filter=labore quis Ut&sort=labore quis Ut&sortby=labore quis Ut&aggTable=labore quis Ut&limit=labore quis Ut&offset=labore quis Ut&topk=labore quis Ut&tsAscending=true&realtime=true&sonar=true&tzo=labore quis Ut&accuracy=labore quis Ut",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId",
																		"optimizedStats",
																		":optimizedStatsId"
																	],
																	"query": [
																		{
																			"key": "select",
																			"value": "labore quis Ut"
																		},
																		{
																			"key": "timeUnit",
																			"value": "labore quis Ut"
																		},
																		{
																			"key": "timeRange",
																			"value": "labore quis Ut"
																		},
																		{
																			"key": "filter",
																			"value": "labore quis Ut"
																		},
																		{
																			"key": "sort",
																			"value": "labore quis Ut"
																		},
																		{
																			"key": "sortby",
																			"value": "labore quis Ut"
																		},
																		{
																			"key": "aggTable",
																			"value": "labore quis Ut"
																		},
																		{
																			"key": "limit",
																			"value": "labore quis Ut"
																		},
																		{
																			"key": "offset",
																			"value": "labore quis Ut"
																		},
																		{
																			"key": "topk",
																			"value": "labore quis Ut"
																		},
																		{
																			"key": "tsAscending",
																			"value": "true"
																		},
																		{
																			"key": "realtime",
																			"value": "true"
																		},
																		{
																			"key": "sonar",
																			"value": "true"
																		},
																		{
																			"key": "tzo",
																			"value": "labore quis Ut"
																		},
																		{
																			"key": "accuracy",
																			"value": "labore quis Ut"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Resource name for which the interactive query will be executed. Use the following format in your request: `organizations/{org}/environments/{env}/optimizedStats/{dimensions}` Dimensions let you view metrics in meaningful groupings, such as `apiproxy`, `target_host`. The value of `dimensions` should be a comma-separated list as shown below: `organizations/{org}/environments/{env}/optimizedStats/apiproxy,request_verb`"
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		},
																		{
																			"key": "optimizedStatsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "Get Deployed Config",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/deployedConfig",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"environments",
																":environmentsId",
																"deployedConfig"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Name of the environment deployed configuration resource. Use the following structure in your request: `organizations/{org}/environments/{env}/deployedConfig`"
																},
																{
																	"key": "environmentsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Gets the deployed configuration for an environment."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/deployedConfig",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId",
																		"deployedConfig"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the environment deployed configuration resource. Use the following structure in your request: `organizations/{org}/environments/{env}/deployedConfig`"
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "Query Tabular Stats",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"filter\": \"pariatur et minim incididunt sunt\",\n  \"timeRange\": {\n    \"endTime\": \"id \",\n    \"startTime\": \"dolor\"\n  },\n  \"pageSize\": 82329880,\n  \"pageToken\": \"dolore mi\",\n  \"dimensions\": [\n    \"ipsum exercitation commodo nisi\",\n    \"sint sunt pariatur\"\n  ],\n  \"metrics\": [\n    {\n      \"name\": \"officia\",\n      \"order\": \"ASCENDING\",\n      \"aggregation\": \"AGGREGATION_FUNCTION_UNSPECIFIED\"\n    },\n    {\n      \"name\": \"amet\",\n      \"order\": \"DESCENDING\",\n      \"aggregation\": \"SUM\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/securityStats:queryTabularStats",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"environments",
																":environmentsId",
																"securityStats:queryTabularStats"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `orgenv`. Required. Should be of the form organizations//environments/."
																},
																{
																	"key": "environmentsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `orgenv`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Retrieve security statistics as tabular rows."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"filter\": \"eu do \",\n  \"timeRange\": {\n    \"endTime\": \"ea ad elit consectetur\",\n    \"startTime\": \"dolor do ea\"\n  },\n  \"pageSize\": -46667564,\n  \"pageToken\": \"exercitation consequat sunt dolor\",\n  \"dimensions\": [\n    \"tempor Ut mollit\",\n    \"nisi ipsum Ut\"\n  ],\n  \"metrics\": [\n    {\n      \"name\": \"anim\",\n      \"order\": \"ORDER_UNSPECIFIED\",\n      \"aggregation\": \"SUM\"\n    },\n    {\n      \"name\": \"adipisicing magna qui incididunt\",\n      \"order\": \"DESCENDING\",\n      \"aggregation\": \"SUM\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/securityStats:queryTabularStats",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId",
																		"securityStats:queryTabularStats"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `orgenv`. Required. Should be of the form organizations//environments/."
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `orgenv`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "List Environment Deployments",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/deployments?sharedFlows=true",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"environments",
																":environmentsId",
																"deployments"
															],
															"query": [
																{
																	"key": "sharedFlows",
																	"value": "true",
																	"description": "Optional. Flag that specifies whether to return shared flow or API proxy deployments. Set to `true` to return shared flow deployments; set to `false` to return API proxy deployments. Defaults to `false`."
																}
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. Name of the environment for which to return deployment information in the following format: `organizations/{org}/environments/{env}`"
																},
																{
																	"key": "environmentsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Lists all deployments of API proxies or shared flows in an environment."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/deployments?sharedFlows=true",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId",
																		"deployments"
																	],
																	"query": [
																		{
																			"key": "sharedFlows",
																			"value": "true"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. Name of the environment for which to return deployment information in the following format: `organizations/{org}/environments/{env}`"
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "Query Time Series Stats",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"pageToken\": \"exerci\",\n  \"pageSize\": -94794630,\n  \"filter\": \"Excepteur cupidatat\",\n  \"dimensions\": [\n    \"eiusmod id\",\n    \"non aute eu incididunt \"\n  ],\n  \"timestampOrder\": \"ORDER_UNSPECIFIED\",\n  \"windowSize\": \"MINUTE\",\n  \"metrics\": [\n    {\n      \"name\": \"dolor re\",\n      \"order\": \"ORDER_UNSPECIFIED\",\n      \"aggregation\": \"AGGREGATION_FUNCTION_UNSPECIFIED\"\n    },\n    {\n      \"name\": \"est aliquip eu culpa dolor\",\n      \"order\": \"DESCENDING\",\n      \"aggregation\": \"AVG\"\n    }\n  ],\n  \"timeRange\": {\n    \"endTime\": \"in elit mollit\",\n    \"startTime\": \"dolore sint elit deserunt ex\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/securityStats:queryTimeSeriesStats",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"environments",
																":environmentsId",
																"securityStats:queryTimeSeriesStats"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `orgenv`. Required. Should be of the form organizations//environments/."
																},
																{
																	"key": "environmentsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `orgenv`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Retrieve security statistics as a collection of time series."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"pageToken\": \"voluptate cupidatat in\",\n  \"pageSize\": 42245407,\n  \"filter\": \"eu Ut\",\n  \"dimensions\": [\n    \"aute quis\",\n    \"pariatur voluptat\"\n  ],\n  \"timestampOrder\": \"ASCENDING\",\n  \"windowSize\": \"WINDOW_SIZE_UNSPECIFIED\",\n  \"metrics\": [\n    {\n      \"name\": \"aute ut ullamco\",\n      \"order\": \"ORDER_UNSPECIFIED\",\n      \"aggregation\": \"COUNT_DISTINCT\"\n    },\n    {\n      \"name\": \"veniam\",\n      \"order\": \"DESCENDING\",\n      \"aggregation\": \"AGGREGATION_FUNCTION_UNSPECIFIED\"\n    }\n  ],\n  \"timeRange\": {\n    \"endTime\": \"deserunt adipisicing ut quis sit\",\n    \"startTime\": \"Excepteur Ut amet tempor\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/securityStats:queryTimeSeriesStats",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId",
																		"securityStats:queryTimeSeriesStats"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `orgenv`. Required. Should be of the form organizations//environments/."
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `orgenv`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "{\n  \"columns\": [\n    \"id eu exercitation reprehenderit deserunt\",\n    \"reprehenderit\"\n  ],\n  \"nextPageToken\": \"do nisi magna ea\",\n  \"values\": [\n    {\n      \"points\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dimensions\": {\n        \"consequat6e_\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    },\n    {\n      \"points\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dimensions\": {\n        \"mollit_6d7\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"Ut_0e\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"do7e_\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"est_e\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Get Stats",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/stats/:statsId?select=labore quis Ut&timeUnit=labore quis Ut&timeRange=labore quis Ut&filter=labore quis Ut&sort=labore quis Ut&sortby=labore quis Ut&aggTable=labore quis Ut&limit=labore quis Ut&offset=labore quis Ut&topk=labore quis Ut&tsAscending=true&realtime=true&sonar=true&tzo=labore quis Ut&accuracy=labore quis Ut",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"environments",
																":environmentsId",
																"stats",
																":statsId"
															],
															"query": [
																{
																	"key": "select",
																	"value": "labore quis Ut",
																	"description": "Comma-separated list of metrics. For example: `sum(message_count),sum(error_count)`"
																},
																{
																	"key": "timeUnit",
																	"value": "labore quis Ut",
																	"description": "Granularity of metrics returned. Valid values include: `second`, `minute`, `hour`, `day`, `week`, or` month`."
																},
																{
																	"key": "timeRange",
																	"value": "labore quis Ut",
																	"description": "Time interval for the interactive query. Time range is specified in GMT as `start~end`. For example: `04/15/2017 00:00~05/15/2017 23:59`"
																},
																{
																	"key": "filter",
																	"value": "labore quis Ut",
																	"description": "Filter that enables you to drill down on specific dimension values."
																},
																{
																	"key": "sort",
																	"value": "labore quis Ut",
																	"description": "Flag that specifies whether the sort order should be ascending or descending. Valid values include: `DESC` and `ASC`."
																},
																{
																	"key": "sortby",
																	"value": "labore quis Ut",
																	"description": "Comma-separated list of columns to sort the final result."
																},
																{
																	"key": "aggTable",
																	"value": "labore quis Ut",
																	"description": "Table name used to query custom aggregate tables. If this parameter is skipped, then Apigee will try to retrieve the data from fact tables which will be expensive."
																},
																{
																	"key": "limit",
																	"value": "labore quis Ut",
																	"description": "Maximum number of result items to return. The default and maximum value that can be returned is 14400."
																},
																{
																	"key": "offset",
																	"value": "labore quis Ut",
																	"description": "Offset value. Use `offset` with `limit` to enable pagination of results. For example, to display results 11-20, set limit to `10` and offset to `10`."
																},
																{
																	"key": "topk",
																	"value": "labore quis Ut",
																	"description": "Top number of results to return. For example, to return the top 5 results, set `topk=5`."
																},
																{
																	"key": "tsAscending",
																	"value": "true",
																	"description": "Flag that specifies whether to list timestamps in ascending (`true`) or descending (`false`) order. Apigee recommends that you set this value to `true` if you are using `sortby` with `sort=DESC`."
																},
																{
																	"key": "realtime",
																	"value": "true",
																	"description": "No longer used by Apigee. Supported for backwards compatibility."
																},
																{
																	"key": "sonar",
																	"value": "true",
																	"description": "Routes the query to API Monitoring for the last hour."
																},
																{
																	"key": "tzo",
																	"value": "labore quis Ut",
																	"description": "Timezone offset value."
																},
																{
																	"key": "accuracy",
																	"value": "labore quis Ut",
																	"description": "No longer used by Apigee. Supported for backwards compatibility."
																}
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Resource name for which the interactive query will be executed. Use the following format in your request: `organizations/{org}/environments/{env}/stats/{dimensions}` Dimensions let you view metrics in meaningful groupings, such as `apiproxy` or `target_host`. The value of dimensions should be a comma-separated list, as shown below: `organizations/{org}/environments/{env}/stats/apiproxy,request_verb`"
																},
																{
																	"key": "environmentsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																},
																{
																	"key": "statsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Retrieve metrics grouped by dimensions. The types of metrics you can retrieve include traffic, message counts, API call latency, response size, and cache hits and counts. Dimensions let you view metrics in meaningful groups. You can optionally pass dimensions as path parameters to the `stats` API. If dimensions are not specified, the metrics are computed on the entire set of data for the given time range."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/stats/:statsId?select=labore quis Ut&timeUnit=labore quis Ut&timeRange=labore quis Ut&filter=labore quis Ut&sort=labore quis Ut&sortby=labore quis Ut&aggTable=labore quis Ut&limit=labore quis Ut&offset=labore quis Ut&topk=labore quis Ut&tsAscending=true&realtime=true&sonar=true&tzo=labore quis Ut&accuracy=labore quis Ut",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId",
																		"stats",
																		":statsId"
																	],
																	"query": [
																		{
																			"key": "select",
																			"value": "labore quis Ut"
																		},
																		{
																			"key": "timeUnit",
																			"value": "labore quis Ut"
																		},
																		{
																			"key": "timeRange",
																			"value": "labore quis Ut"
																		},
																		{
																			"key": "filter",
																			"value": "labore quis Ut"
																		},
																		{
																			"key": "sort",
																			"value": "labore quis Ut"
																		},
																		{
																			"key": "sortby",
																			"value": "labore quis Ut"
																		},
																		{
																			"key": "aggTable",
																			"value": "labore quis Ut"
																		},
																		{
																			"key": "limit",
																			"value": "labore quis Ut"
																		},
																		{
																			"key": "offset",
																			"value": "labore quis Ut"
																		},
																		{
																			"key": "topk",
																			"value": "labore quis Ut"
																		},
																		{
																			"key": "tsAscending",
																			"value": "true"
																		},
																		{
																			"key": "realtime",
																			"value": "true"
																		},
																		{
																			"key": "sonar",
																			"value": "true"
																		},
																		{
																			"key": "tzo",
																			"value": "labore quis Ut"
																		},
																		{
																			"key": "accuracy",
																			"value": "labore quis Ut"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Resource name for which the interactive query will be executed. Use the following format in your request: `organizations/{org}/environments/{env}/stats/{dimensions}` Dimensions let you view metrics in meaningful groupings, such as `apiproxy` or `target_host`. The value of dimensions should be a comma-separated list, as shown below: `organizations/{org}/environments/{env}/stats/apiproxy,request_verb`"
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		},
																		{
																			"key": "statsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "{\n  \"metaData\": {\n    \"notices\": [\n      \"id ea officia Excepteur tempor\",\n      \"Duis nulla\"\n    ],\n    \"errors\": [\n      \"dolore reprehenderit sint\",\n      \"occaecat Ut officia ea\"\n    ]\n  },\n  \"hosts\": [\n    {\n      \"name\": \"minim Lorem\",\n      \"metrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dimensions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"officia Ut anim\",\n      \"metrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dimensions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"environments\": [\n    {\n      \"metrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dimensions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"name\": \"in ut proident sint\"\n    },\n    {\n      \"metrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dimensions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"name\": \"laboris\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Generate Upload Url",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/archiveDeployments:generateUploadUrl",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"environments",
																":environmentsId",
																"archiveDeployments:generateUploadUrl"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. The organization and environment to upload to."
																},
																{
																	"key": "environmentsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Generates a signed URL for uploading an Archive zip file to Google Cloud Storage. Once the upload is complete, the signed URL should be passed to CreateArchiveDeployment. When uploading to the generated signed URL, please follow these restrictions: * Source file type should be a zip file. * Source file size should not exceed 1GB limit. * No credentials should be attached - the signed URLs provide access to the target bucket using internal service identity; if credentials were attached, the identity from the credentials would be used, but that identity does not have permissions to upload files to the URL. When making a HTTP PUT request, these two headers need to be specified: * `content-type: application/zip` * `x-goog-content-length-range: 0,1073741824` And this header SHOULD NOT be specified: * `Authorization: Bearer YOUR_TOKEN`"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/archiveDeployments:generateUploadUrl",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId",
																		"archiveDeployments:generateUploadUrl"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. The organization and environment to upload to."
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "{\n  \"uploadUri\": \"in\"\n}"
														}
													]
												},
												{
													"name": "Delete Cache",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/caches/:cachesId",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"environments",
																":environmentsId",
																"caches",
																":cachesId"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Cache resource name of the form: `organizations/{organization_id}/environments/{environment_id}/caches/{cache_id}`"
																},
																{
																	"key": "environmentsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																},
																{
																	"key": "cachesId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Deletes a cache."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/caches/:cachesId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId",
																		"caches",
																		":cachesId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Cache resource name of the form: `organizations/{organization_id}/environments/{environment_id}/caches/{cache_id}`"
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		},
																		{
																			"key": "cachesId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Get Api Security Runtime Config",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/apiSecurityRuntimeConfig",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"environments",
																":environmentsId",
																"apiSecurityRuntimeConfig"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Name of the environment API Security Runtime configuration resource. Use the following structure in your request: `organizations/{org}/environments/{env}/apiSecurityRuntimeConfig`"
																},
																{
																	"key": "environmentsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Gets the API Security runtime configuration for an environment. This named ApiSecurityRuntimeConfig to prevent conflicts with ApiSecurityConfig from addon config."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/:environmentsId/apiSecurityRuntimeConfig",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"environments",
																		":environmentsId",
																		"apiSecurityRuntimeConfig"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the environment API Security Runtime configuration resource. Use the following structure in your request: `organizations/{org}/environments/{env}/apiSecurityRuntimeConfig`"
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												}
											]
										},
										{
											"name": "Create Environment",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "null",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments?name=labore quis Ut",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"environments"
													],
													"query": [
														{
															"key": "name",
															"value": "labore quis Ut",
															"description": "Optional. Name of the environment."
														}
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `parent`. Required. Name of the organization in which the environment will be created. Use the following structure in your request: `organizations/{org}`"
														}
													]
												},
												"description": "Creates an environment in an organization."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "null",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments?name=labore quis Ut",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"environments"
															],
															"query": [
																{
																	"key": "name",
																	"value": "labore quis Ut"
																}
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. Name of the organization in which the environment will be created. Use the following structure in your request: `organizations/{org}`"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "null"
												}
											]
										},
										{
											"name": "Get Iam Policy",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/{{environmentsId}}:getIamPolicy?options.requestedPolicyVersion=87452072",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"environments",
														"{{environmentsId}}:getIamPolicy"
													],
													"query": [
														{
															"key": "options.requestedPolicyVersion",
															"value": "87452072",
															"description": "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
														}
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `resource`. REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
														}
													]
												},
												"description": "Gets the IAM policy on an environment. For more information, see [Manage users, roles, and permissions using the API](https://cloud.google.com/apigee/docs/api-platform/system-administration/manage-users-roles). You must have the `apigee.environments.getIamPolicy` permission to call this API."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/{{environmentsId}}:getIamPolicy?options.requestedPolicyVersion=87452072",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"environments",
																"{{environmentsId}}:getIamPolicy"
															],
															"query": [
																{
																	"key": "options.requestedPolicyVersion",
																	"value": "87452072"
																}
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `resource`. REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{\n  \"auditConfigs\": [\n    {\n      \"service\": \"ad\",\n      \"auditLogConfigs\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"service\": \"officia in\",\n      \"auditLogConfigs\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"members\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"role\": \"dolor ut cillum\"\n    },\n    {\n      \"condition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"members\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"role\": \"in Excepteur sint ut\"\n    }\n  ],\n  \"etag\": \"Ut aute veniam irure\",\n  \"version\": 50747572\n}"
												}
											]
										},
										{
											"name": "Test Iam Permissions",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"permissions\": [\n    \"ex ut et Excepteur\",\n    \"sed Lorem\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/{{environmentsId}}:testIamPermissions",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"environments",
														"{{environmentsId}}:testIamPermissions"
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `resource`. REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
														}
													]
												},
												"description": "Tests the permissions of a user on an environment, and returns a subset of permissions that the user has on the environment. If the environment does not exist, an empty permission set is returned (a NOT_FOUND error is not returned)."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"permissions\": [\n    \"pariatur dolore nulla\",\n    \"veniam occaecat la\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/{{environmentsId}}:testIamPermissions",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"environments",
																"{{environmentsId}}:testIamPermissions"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `resource`. REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{\n  \"permissions\": [\n    \"aute irure\",\n    \"laborum dolore non\"\n  ]\n}"
												}
											]
										},
										{
											"name": "Subscribe",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/{{environmentsId}}:subscribe",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"environments",
														"{{environmentsId}}:subscribe"
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `parent`. Required. Name of the environment. Use the following structure in your request: `organizations/{org}/environments/{env}`"
														}
													]
												},
												"description": "Creates a subscription for the environment's Pub/Sub topic. The server will assign a random name for this subscription. The \"name\" and \"push_config\" must *not* be specified."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/{{environmentsId}}:subscribe",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"environments",
																"{{environmentsId}}:subscribe"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. Name of the environment. Use the following structure in your request: `organizations/{org}/environments/{env}`"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{\n  \"name\": \"est deserunt aute velit voluptate\"\n}"
												}
											]
										},
										{
											"name": "Set Iam Policy",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"updateMask\": \"labore incididunt dolor occaecat\",\n  \"policy\": {\n    \"auditConfigs\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"bindings\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"etag\": \"esse\",\n    \"version\": 38270276\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/{{environmentsId}}:setIamPolicy",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"environments",
														"{{environmentsId}}:setIamPolicy"
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `resource`. REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
														}
													]
												},
												"description": "Sets the IAM policy on an environment, if the policy already exists it will be replaced. For more information, see [Manage users, roles, and permissions using the API](https://cloud.google.com/apigee/docs/api-platform/system-administration/manage-users-roles). You must have the `apigee.environments.setIamPolicy` permission to call this API."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"updateMask\": \"labore incididunt dolor occaecat\",\n  \"policy\": {\n    \"auditConfigs\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"bindings\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"etag\": \"esse\",\n    \"version\": 38270276\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/{{environmentsId}}:setIamPolicy",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"environments",
																"{{environmentsId}}:setIamPolicy"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `resource`. REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{\n  \"auditConfigs\": [\n    {\n      \"service\": \"sit commodo ut ex\",\n      \"auditLogConfigs\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"service\": \"proident labore elit\",\n      \"auditLogConfigs\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"bindings\": [\n    {\n      \"condition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"members\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"role\": \"anim dolore irure u\"\n    },\n    {\n      \"condition\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"members\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"role\": \"deserunt pariatur enim\"\n    }\n  ],\n  \"etag\": \"eu\",\n  \"version\": 36358252\n}"
												}
											]
										},
										{
											"name": "Unsubscribe",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"est deserunt aute velit voluptate\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/{{environmentsId}}:unsubscribe",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"environments",
														"{{environmentsId}}:unsubscribe"
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `parent`. Required. Name of the environment. Use the following structure in your request: `organizations/{org}/environments/{env}`"
														}
													]
												},
												"description": "Deletes a subscription for the environment's Pub/Sub topic."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"est deserunt aute velit voluptate\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/environments/{{environmentsId}}:unsubscribe",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"environments",
																"{{environmentsId}}:unsubscribe"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. Name of the environment. Use the following structure in your request: `organizations/{org}/environments/{env}`"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{}"
												}
											]
										}
									]
								},
								{
									"name": "operations",
									"item": [
										{
											"name": "List Operations",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/operations?filter=labore quis Ut&pageSize=87452072&pageToken=labore quis Ut",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"operations"
													],
													"query": [
														{
															"key": "filter",
															"value": "labore quis Ut",
															"description": "The standard list filter."
														},
														{
															"key": "pageSize",
															"value": "87452072",
															"description": "The standard list page size."
														},
														{
															"key": "pageToken",
															"value": "labore quis Ut",
															"description": "The standard list page token."
														}
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `name`. The name of the operation's parent resource."
														}
													]
												},
												"description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/operations?filter=labore quis Ut&pageSize=87452072&pageToken=labore quis Ut",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"operations"
															],
															"query": [
																{
																	"key": "filter",
																	"value": "labore quis Ut"
																},
																{
																	"key": "pageSize",
																	"value": "87452072"
																},
																{
																	"key": "pageToken",
																	"value": "labore quis Ut"
																}
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. The name of the operation's parent resource."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{\n  \"nextPageToken\": \"incididunt Duis\",\n  \"operations\": [\n    {\n      \"name\": \"ipsum\",\n      \"done\": false,\n      \"metadata\": {\n        \"ex_720\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"response\": {\n        \"sunt0\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"mollit_d\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"minim5\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"name\": \"exercitation fugiat\",\n      \"done\": true,\n      \"metadata\": {\n        \"est_4a\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"officiaaeb\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"deserunt_c7e\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"laborisd1\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"response\": {\n        \"dolor_7\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"officia_8\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Get Operation",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/operations/:operationsId",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"operations",
														":operationsId"
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `name`. The name of the operation resource."
														},
														{
															"key": "operationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `name`. See documentation of `organizationsId`."
														}
													]
												},
												"description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/operations/:operationsId",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"operations",
																":operationsId"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. The name of the operation resource."
																},
																{
																	"key": "operationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "null"
												}
											]
										}
									]
								},
								{
									"name": "hostQueries",
									"item": [
										{
											"name": "{hostQueriesId}",
											"item": [
												{
													"name": "Get Host Async Query",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/hostQueries/:hostQueriesId",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"hostQueries",
																":hostQueriesId"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Name of the asynchronous query to get. Must be of the form `organizations/{org}/queries/{queryId}`."
																},
																{
																	"key": "hostQueriesId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Get status of a query submitted at host level. If the query is still in progress, the `state` is set to \"running\" After the query has completed successfully, `state` is set to \"completed\""
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/hostQueries/:hostQueriesId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"hostQueries",
																		":hostQueriesId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the asynchronous query to get. Must be of the form `organizations/{org}/queries/{queryId}`."
																		},
																		{
																			"key": "hostQueriesId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "Get Host Async Query Result View",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/hostQueries/:hostQueriesId/resultView",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"hostQueries",
																":hostQueriesId",
																"resultView"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Name of the asynchronous query result view to get. Must be of the form `organizations/{org}/queries/{queryId}/resultView`."
																},
																{
																	"key": "hostQueriesId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														}
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/hostQueries/:hostQueriesId/resultView",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"hostQueries",
																		":hostQueriesId",
																		"resultView"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the asynchronous query result view to get. Must be of the form `organizations/{org}/queries/{queryId}/resultView`."
																		},
																		{
																			"key": "hostQueriesId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "Get Host Async Query Result",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/hostQueries/:hostQueriesId/result",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"hostQueries",
																":hostQueriesId",
																"result"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Name of the asynchronous query result to get. Must be of the form `organizations/{org}/queries/{queryId}/result`."
																},
																{
																	"key": "hostQueriesId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "After the query is completed, use this API to retrieve the results. If the request succeeds, and there is a non-zero result set, the result is downloaded to the client as a zipped JSON file. The name of the downloaded file will be: OfflineQueryResult-.zip Example: `OfflineQueryResult-9cfc0d85-0f30-46d6-ae6f-318d0cb961bd.zip`"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/hostQueries/:hostQueriesId/result",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"hostQueries",
																		":hostQueriesId",
																		"result"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the asynchronous query result to get. Must be of the form `organizations/{org}/queries/{queryId}/result`."
																		},
																		{
																			"key": "hostQueriesId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												}
											]
										},
										{
											"name": "List Host Async Queries",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/hostQueries?submittedBy=labore quis Ut&status=labore quis Ut&from=labore quis Ut&to=labore quis Ut&dataset=labore quis Ut&inclQueriesWithoutReport=labore quis Ut&envgroupHostname=labore quis Ut",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"hostQueries"
													],
													"query": [
														{
															"key": "submittedBy",
															"value": "labore quis Ut",
															"description": "Filter response list by user who submitted queries."
														},
														{
															"key": "status",
															"value": "labore quis Ut",
															"description": "Filter response list by asynchronous query status."
														},
														{
															"key": "from",
															"value": "labore quis Ut",
															"description": "Filter response list by returning asynchronous queries that created after this date time. Time must be in ISO date-time format like '2011-12-03T10:15:30Z'."
														},
														{
															"key": "to",
															"value": "labore quis Ut",
															"description": "Filter response list by returning asynchronous queries that created before this date time. Time must be in ISO date-time format like '2011-12-03T10:16:30Z'."
														},
														{
															"key": "dataset",
															"value": "labore quis Ut",
															"description": "Filter response list by dataset. Example: `api`, `mint`"
														},
														{
															"key": "inclQueriesWithoutReport",
															"value": "labore quis Ut",
															"description": "Flag to include asynchronous queries that don't have a report denifition."
														},
														{
															"key": "envgroupHostname",
															"value": "labore quis Ut",
															"description": "Required. Filter response list by hostname."
														}
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `parent`. Required. The parent resource name. Must be of the form `organizations/{org}`."
														}
													]
												},
												"description": "Return a list of Asynchronous Queries at host level."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/hostQueries?submittedBy=labore quis Ut&status=labore quis Ut&from=labore quis Ut&to=labore quis Ut&dataset=labore quis Ut&inclQueriesWithoutReport=labore quis Ut&envgroupHostname=labore quis Ut",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"hostQueries"
															],
															"query": [
																{
																	"key": "submittedBy",
																	"value": "labore quis Ut"
																},
																{
																	"key": "status",
																	"value": "labore quis Ut"
																},
																{
																	"key": "from",
																	"value": "labore quis Ut"
																},
																{
																	"key": "to",
																	"value": "labore quis Ut"
																},
																{
																	"key": "dataset",
																	"value": "labore quis Ut"
																},
																{
																	"key": "inclQueriesWithoutReport",
																	"value": "labore quis Ut"
																},
																{
																	"key": "envgroupHostname",
																	"value": "labore quis Ut"
																}
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. The parent resource name. Must be of the form `organizations/{org}`."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "null"
												}
											]
										},
										{
											"name": "Create Host Async Query",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "null",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/hostQueries",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"hostQueries"
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `parent`. Required. The parent resource name. Must be of the form `organizations/{org}`."
														}
													]
												},
												"description": "Submit a query at host level to be processed in the background. If the submission of the query succeeds, the API returns a 201 status and an ID that refer to the query. In addition to the HTTP status 201, the `state` of \"enqueued\" means that the request succeeded."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/hostQueries",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"hostQueries"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. The parent resource name. Must be of the form `organizations/{org}`."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "null"
												}
											]
										}
									]
								},
								{
									"name": "sharedflows",
									"item": [
										{
											"name": "{sharedflowsId}",
											"item": [
												{
													"name": "revisions/{revisionsId}",
													"item": [
														{
															"name": "Delete Shared Flow Revision",
															"request": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/sharedflows/:sharedflowsId/revisions/:revisionsId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"sharedflows",
																		":sharedflowsId",
																		"revisions",
																		":revisionsId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. The name of the shared flow revision to delete. Must be of the form: `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`"
																		},
																		{
																			"key": "sharedflowsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		},
																		{
																			"key": "revisionsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Deletes a shared flow and all associated policies, resources, and revisions. You must undeploy the shared flow before deleting it."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/sharedflows/:sharedflowsId/revisions/:revisionsId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"sharedflows",
																				":sharedflowsId",
																				"revisions",
																				":revisionsId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. The name of the shared flow revision to delete. Must be of the form: `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`"
																				},
																				{
																					"key": "sharedflowsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "revisionsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														},
														{
															"name": "Update Shared Flow Revision",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "null",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/sharedflows/:sharedflowsId/revisions/:revisionsId?validate=true",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"sharedflows",
																		":sharedflowsId",
																		"revisions",
																		":revisionsId"
																	],
																	"query": [
																		{
																			"key": "validate",
																			"value": "true",
																			"description": "Ignored. All uploads are validated regardless of the value of this field. It is kept for compatibility with existing APIs. Must be `true` or `false` if provided."
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. The name of the shared flow revision to update. Must be of the form: `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`"
																		},
																		{
																			"key": "sharedflowsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		},
																		{
																			"key": "revisionsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Updates a shared flow revision. This operation is only allowed on revisions which have never been deployed. After deployment a revision becomes immutable, even if it becomes undeployed. The payload is a ZIP-formatted shared flow. Content type must be either multipart/form-data or application/octet-stream."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "null",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/sharedflows/:sharedflowsId/revisions/:revisionsId?validate=true",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"sharedflows",
																				":sharedflowsId",
																				"revisions",
																				":revisionsId"
																			],
																			"query": [
																				{
																					"key": "validate",
																					"value": "true"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. The name of the shared flow revision to update. Must be of the form: `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`"
																				},
																				{
																					"key": "sharedflowsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "revisionsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														},
														{
															"name": "Get Shared Flow Revision",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/sharedflows/:sharedflowsId/revisions/:revisionsId?format=labore quis Ut",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"sharedflows",
																		":sharedflowsId",
																		"revisions",
																		":revisionsId"
																	],
																	"query": [
																		{
																			"key": "format",
																			"value": "labore quis Ut",
																			"description": "Specify `bundle` to export the contents of the shared flow bundle. Otherwise, the bundle metadata is returned."
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. The name of the shared flow revision to get. Must be of the form: `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`"
																		},
																		{
																			"key": "sharedflowsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		},
																		{
																			"key": "revisionsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Gets a revision of a shared flow. To download the shared flow configuration bundle for the specified revision as a zip file, set the `format` query parameter to `bundle`. If you are using curl, specify `-o filename.zip` to save the output to a file; otherwise, it displays to `stdout`. Then, develop the shared flow configuration locally and upload the updated sharedFlow configuration revision, as described in [updateSharedFlowRevision](updateSharedFlowRevision)."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/sharedflows/:sharedflowsId/revisions/:revisionsId?format=labore quis Ut",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"sharedflows",
																				":sharedflowsId",
																				"revisions",
																				":revisionsId"
																			],
																			"query": [
																				{
																					"key": "format",
																					"value": "labore quis Ut"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. The name of the shared flow revision to get. Must be of the form: `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`"
																				},
																				{
																					"key": "sharedflowsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "revisionsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														},
														{
															"name": "List Shared Flow Revision Deployments",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/sharedflows/:sharedflowsId/revisions/:revisionsId/deployments",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"sharedflows",
																		":sharedflowsId",
																		"revisions",
																		":revisionsId",
																		"deployments"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. Name of the API proxy revision for which to return deployment information in the following format: `organizations/{org}/sharedflows/{sharedflow}/revisions/{rev}`."
																		},
																		{
																			"key": "sharedflowsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		},
																		{
																			"key": "revisionsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Lists all deployments of a shared flow revision."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/sharedflows/:sharedflowsId/revisions/:revisionsId/deployments",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"sharedflows",
																				":sharedflowsId",
																				"revisions",
																				":revisionsId",
																				"deployments"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. Name of the API proxy revision for which to return deployment information in the following format: `organizations/{org}/sharedflows/{sharedflow}/revisions/{rev}`."
																				},
																				{
																					"key": "sharedflowsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "revisionsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														}
													]
												},
												{
													"name": "Delete Shared Flow",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/sharedflows/:sharedflowsId",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"sharedflows",
																":sharedflowsId"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. shared flow name of the form: `organizations/{organization_id}/sharedflows/{shared_flow_id}`"
																},
																{
																	"key": "sharedflowsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Deletes a shared flow and all it's revisions. The shared flow must be undeployed before you can delete it."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/sharedflows/:sharedflowsId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"sharedflows",
																		":sharedflowsId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. shared flow name of the form: `organizations/{organization_id}/sharedflows/{shared_flow_id}`"
																		},
																		{
																			"key": "sharedflowsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "Get Shared Flow",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/sharedflows/:sharedflowsId",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"sharedflows",
																":sharedflowsId"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. The name of the shared flow to get. Must be of the form: `organizations/{organization_id}/sharedflows/{shared_flow_id}`"
																},
																{
																	"key": "sharedflowsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Gets a shared flow by name, including a list of its revisions."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/sharedflows/:sharedflowsId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"sharedflows",
																		":sharedflowsId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. The name of the shared flow to get. Must be of the form: `organizations/{organization_id}/sharedflows/{shared_flow_id}`"
																		},
																		{
																			"key": "sharedflowsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "List Shared Flow Deployments",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/sharedflows/:sharedflowsId/deployments",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"sharedflows",
																":sharedflowsId",
																"deployments"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. Name of the shared flow for which to return deployment information in the following format: `organizations/{org}/sharedflows/{sharedflow}`"
																},
																{
																	"key": "sharedflowsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Lists all deployments of a shared flow."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/sharedflows/:sharedflowsId/deployments",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"sharedflows",
																		":sharedflowsId",
																		"deployments"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. Name of the shared flow for which to return deployment information in the following format: `organizations/{org}/sharedflows/{sharedflow}`"
																		},
																		{
																			"key": "sharedflowsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												}
											]
										},
										{
											"name": "Create Shared Flow Revision",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "null",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/sharedflows?action=labore quis Ut&name=labore quis Ut",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"sharedflows"
													],
													"query": [
														{
															"key": "action",
															"value": "labore quis Ut",
															"description": "Required. Must be set to either `import` or `validate`."
														},
														{
															"key": "name",
															"value": "labore quis Ut",
															"description": "Required. The name to give the shared flow"
														}
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `parent`. Required. The name of the parent organization under which to create the shared flow. Must be of the form: `organizations/{organization_id}`"
														}
													]
												},
												"description": "Uploads a ZIP-formatted shared flow configuration bundle to an organization. If the shared flow already exists, this creates a new revision of it. If the shared flow does not exist, this creates it. Once imported, the shared flow revision must be deployed before it can be accessed at runtime. The size limit of a shared flow bundle is 15 MB."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "null",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/sharedflows?action=labore quis Ut&name=labore quis Ut",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"sharedflows"
															],
															"query": [
																{
																	"key": "action",
																	"value": "labore quis Ut"
																},
																{
																	"key": "name",
																	"value": "labore quis Ut"
																}
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. The name of the parent organization under which to create the shared flow. Must be of the form: `organizations/{organization_id}`"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "null"
												}
											]
										},
										{
											"name": "List Shared Flows",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/sharedflows?includeRevisions=true&includeMetaData=true",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"sharedflows"
													],
													"query": [
														{
															"key": "includeRevisions",
															"value": "true",
															"description": "Indicates whether to include a list of revisions in the response."
														},
														{
															"key": "includeMetaData",
															"value": "true",
															"description": "Indicates whether to include shared flow metadata in the response."
														}
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `parent`. Required. The name of the parent organization under which to get shared flows. Must be of the form: `organizations/{organization_id}`"
														}
													]
												},
												"description": "Lists all shared flows in the organization."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/sharedflows?includeRevisions=true&includeMetaData=true",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"sharedflows"
															],
															"query": [
																{
																	"key": "includeRevisions",
																	"value": "true"
																},
																{
																	"key": "includeMetaData",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. The name of the parent organization under which to get shared flows. Must be of the form: `organizations/{organization_id}`"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{\n  \"sharedFlows\": [\n    {\n      \"metaData\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"revision\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"latestRevisionId\": \"Duis tempor dolor adipisicing\",\n      \"name\": \"sed\"\n    },\n    {\n      \"metaData\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"revision\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"latestRevisionId\": \"enim dolore\",\n      \"name\": \"in fugiat sint elit ut\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "securityProfiles",
									"item": [
										{
											"name": "{securityProfilesId}",
											"item": [
												{
													"name": "environments",
													"item": [
														{
															"name": "Create Security Profile Environment Association",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "null",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/securityProfiles/:securityProfilesId/environments",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"securityProfiles",
																		":securityProfilesId",
																		"environments"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. Name of organization and security profile ID. Format: organizations/{org}/securityProfiles/{profile}"
																		},
																		{
																			"key": "securityProfilesId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "CreateSecurityProfileEnvironmentAssociation creates profile environment association i.e. attaches environment to security profile."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "null",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/securityProfiles/:securityProfilesId/environments",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"securityProfiles",
																				":securityProfilesId",
																				"environments"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. Name of organization and security profile ID. Format: organizations/{org}/securityProfiles/{profile}"
																				},
																				{
																					"key": "securityProfilesId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														},
														{
															"name": "Delete Security Profile Environment Association",
															"request": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/securityProfiles/:securityProfilesId/environments/:environmentsId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"securityProfiles",
																		":securityProfilesId",
																		"environments",
																		":environmentsId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. The name of the environment attachment to delete. Format: organizations/{org}/securityProfiles/{profile}/environments/{env}"
																		},
																		{
																			"key": "securityProfilesId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		},
																		{
																			"key": "environmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "DeleteSecurityProfileEnvironmentAssociation removes profile environment association i.e. detaches environment from security profile."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/securityProfiles/:securityProfilesId/environments/:environmentsId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"securityProfiles",
																				":securityProfilesId",
																				"environments",
																				":environmentsId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. The name of the environment attachment to delete. Format: organizations/{org}/securityProfiles/{profile}/environments/{env}"
																				},
																				{
																					"key": "securityProfilesId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "environmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														},
														{
															"name": "Compute Environment Scores",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"pageToken\": \"anim fugiat ipsum in\",\n  \"timeRange\": {\n    \"endTime\": \"minim et Duis Lorem velit\",\n    \"startTime\": \"amet veniam culpa nisi dolor\"\n  },\n  \"pageSize\": -39805327,\n  \"filters\": [\n    {\n      \"scorePath\": \"Excepteur\"\n    },\n    {\n      \"scorePath\": \"incididunt sed mollit tempor\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/securityProfiles/:securityProfilesId/environments/{{environmentsId}}:computeEnvironmentScores",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"securityProfiles",
																		":securityProfilesId",
																		"environments",
																		"{{environmentsId}}:computeEnvironmentScores"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `profileEnvironment`. Required. Name of organization and environment and profile id for which score needs to be computed. Format: organizations/{org}/securityProfiles/{profile}/environments/{env}"
																		},
																		{
																			"key": "securityProfilesId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `profileEnvironment`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "ComputeEnvironmentScores calculates scores for requested time range for the specified security profile and environment."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"pageToken\": \"ea magna ad\",\n  \"timeRange\": {\n    \"endTime\": \"aliquip Ut in\",\n    \"startTime\": \"aliquip aliqua do\"\n  },\n  \"pageSize\": -98386215,\n  \"filters\": [\n    {\n      \"scorePath\": \"deserunt incididunt\"\n    },\n    {\n      \"scorePath\": \"eiusmod\"\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/securityProfiles/:securityProfilesId/environments/{{environmentsId}}:computeEnvironmentScores",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"securityProfiles",
																				":securityProfilesId",
																				"environments",
																				"{{environmentsId}}:computeEnvironmentScores"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `profileEnvironment`. Required. Name of organization and environment and profile id for which score needs to be computed. Format: organizations/{org}/securityProfiles/{profile}/environments/{env}"
																				},
																				{
																					"key": "securityProfilesId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `profileEnvironment`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"scores\": [\n    {\n      \"subcomponents\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"timeRange\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"component\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"subcomponents\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"timeRange\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"component\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"nextPageToken\": \"in\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Get Security Profile",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/securityProfiles/:securityProfilesId",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"securityProfiles",
																":securityProfilesId"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Security profile in the following format: `organizations/{org}/securityProfiles/{profile}'. Profile may optionally contain revision ID. If revision ID is not provided, the response will contain latest revision by default. Example: organizations/testOrg/securityProfiles/testProfile@5"
																},
																{
																	"key": "securityProfilesId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "GetSecurityProfile gets the specified security profile. Returns NOT_FOUND if security profile is not present for the specified organization."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/securityProfiles/:securityProfilesId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"securityProfiles",
																		":securityProfilesId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Security profile in the following format: `organizations/{org}/securityProfiles/{profile}'. Profile may optionally contain revision ID. If revision ID is not provided, the response will contain latest revision by default. Example: organizations/testOrg/securityProfiles/testProfile@5"
																		},
																		{
																			"key": "securityProfilesId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												}
											]
										},
										{
											"name": "List Security Profiles",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/securityProfiles?pageSize=87452072&pageToken=labore quis Ut",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"securityProfiles"
													],
													"query": [
														{
															"key": "pageSize",
															"value": "87452072",
															"description": "The maximum number of profiles to return. The service may return fewer than this value. If unspecified, at most 50 profiles will be returned."
														},
														{
															"key": "pageToken",
															"value": "labore quis Ut",
															"description": "A page token, received from a previous `ListSecurityProfiles` call. Provide this to retrieve the subsequent page."
														}
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `parent`. Required. For a specific organization, list of all the security profiles. Format: `organizations/{org}`"
														}
													]
												},
												"description": "ListSecurityProfiles lists all the security profiles associated with the org including attached and unattached profiles."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/securityProfiles?pageSize=87452072&pageToken=labore quis Ut",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"securityProfiles"
															],
															"query": [
																{
																	"key": "pageSize",
																	"value": "87452072"
																},
																{
																	"key": "pageToken",
																	"value": "labore quis Ut"
																}
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. For a specific organization, list of all the security profiles. Format: `organizations/{org}`"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "null"
												}
											]
										},
										{
											"name": "List Security Profile Revisions",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/securityProfiles/{{securityProfilesId}}:listRevisions?pageSize=87452072&pageToken=labore quis Ut",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"securityProfiles",
														"{{securityProfilesId}}:listRevisions"
													],
													"query": [
														{
															"key": "pageSize",
															"value": "87452072",
															"description": "The maximum number of profile revisions to return. The service may return fewer than this value. If unspecified, at most 50 revisions will be returned."
														},
														{
															"key": "pageToken",
															"value": "labore quis Ut",
															"description": "A page token, received from a previous `ListSecurityProfileRevisions` call. Provide this to retrieve the subsequent page."
														}
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `name`. Required. For a specific profile, list all the revisions. Format: `organizations/{org}/securityProfiles/{profile}`"
														}
													]
												},
												"description": "ListSecurityProfileRevisions lists all the revisions of the security profile."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/securityProfiles/{{securityProfilesId}}:listRevisions?pageSize=87452072&pageToken=labore quis Ut",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"securityProfiles",
																"{{securityProfilesId}}:listRevisions"
															],
															"query": [
																{
																	"key": "pageSize",
																	"value": "87452072"
																},
																{
																	"key": "pageToken",
																	"value": "labore quis Ut"
																}
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. For a specific profile, list all the revisions. Format: `organizations/{org}/securityProfiles/{profile}`"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "null"
												}
											]
										}
									]
								},
								{
									"name": "hostSecurityReports",
									"item": [
										{
											"name": "{hostSecurityReportsId}",
											"item": [
												{
													"name": "Get Host Security Report",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/hostSecurityReports/:hostSecurityReportsId",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"hostSecurityReports",
																":hostSecurityReportsId"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Name of the security report to get. Must be of the form `organizations/{org}/securityReports/{reportId}`."
																},
																{
																	"key": "hostSecurityReportsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Get status of a query submitted at host level. If the query is still in progress, the `state` is set to \"running\" After the query has completed successfully, `state` is set to \"completed\""
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/hostSecurityReports/:hostSecurityReportsId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"hostSecurityReports",
																		":hostSecurityReportsId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the security report to get. Must be of the form `organizations/{org}/securityReports/{reportId}`."
																		},
																		{
																			"key": "hostSecurityReportsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "Get Host Security Report Result View",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/hostSecurityReports/:hostSecurityReportsId/resultView",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"hostSecurityReports",
																":hostSecurityReportsId",
																"resultView"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Name of the security report result view to get. Must be of the form `organizations/{org}/securityReports/{reportId}/resultView`."
																},
																{
																	"key": "hostSecurityReportsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "After the query is completed, use this API to view the query result when result size is small."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/hostSecurityReports/:hostSecurityReportsId/resultView",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"hostSecurityReports",
																		":hostSecurityReportsId",
																		"resultView"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the security report result view to get. Must be of the form `organizations/{org}/securityReports/{reportId}/resultView`."
																		},
																		{
																			"key": "hostSecurityReportsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "Get Host Security Report Result",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/hostSecurityReports/:hostSecurityReportsId/result",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"hostSecurityReports",
																":hostSecurityReportsId",
																"result"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Name of the security report result to get. Must be of the form `organizations/{org}/securityReports/{reportId}/result`."
																},
																{
																	"key": "hostSecurityReportsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "After the query is completed, use this API to retrieve the results. If the request succeeds, and there is a non-zero result set, the result is downloaded to the client as a zipped JSON file. The name of the downloaded file will be: OfflineQueryResult-.zip Example: `OfflineQueryResult-9cfc0d85-0f30-46d6-ae6f-318d0cb961bd.zip`"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/hostSecurityReports/:hostSecurityReportsId/result",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"hostSecurityReports",
																		":hostSecurityReportsId",
																		"result"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the security report result to get. Must be of the form `organizations/{org}/securityReports/{reportId}/result`."
																		},
																		{
																			"key": "hostSecurityReportsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												}
											]
										},
										{
											"name": "List Host Security Reports",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/hostSecurityReports?submittedBy=labore quis Ut&status=labore quis Ut&from=labore quis Ut&to=labore quis Ut&dataset=labore quis Ut&pageSize=87452072&pageToken=labore quis Ut&envgroupHostname=labore quis Ut",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"hostSecurityReports"
													],
													"query": [
														{
															"key": "submittedBy",
															"value": "labore quis Ut",
															"description": "Filter response list by user who submitted queries."
														},
														{
															"key": "status",
															"value": "labore quis Ut",
															"description": "Filter response list by security report status."
														},
														{
															"key": "from",
															"value": "labore quis Ut",
															"description": "Filter response list by returning security reports that created after this date time. Time must be in ISO date-time format like '2011-12-03T10:15:30Z'."
														},
														{
															"key": "to",
															"value": "labore quis Ut",
															"description": "Filter response list by returning security reports that created before this date time. Time must be in ISO date-time format like '2011-12-03T10:16:30Z'."
														},
														{
															"key": "dataset",
															"value": "labore quis Ut",
															"description": "Filter response list by dataset. Example: `api`, `mint`"
														},
														{
															"key": "pageSize",
															"value": "87452072",
															"description": "The maximum number of security report to return in the list response."
														},
														{
															"key": "pageToken",
															"value": "labore quis Ut",
															"description": "Token returned from the previous list response to fetch the next page."
														},
														{
															"key": "envgroupHostname",
															"value": "labore quis Ut",
															"description": "Required. Filter response list by hostname."
														}
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `parent`. Required. The parent resource name. Must be of the form `organizations/{org}`."
														}
													]
												},
												"description": "Return a list of Security Reports at host level."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/hostSecurityReports?submittedBy=labore quis Ut&status=labore quis Ut&from=labore quis Ut&to=labore quis Ut&dataset=labore quis Ut&pageSize=87452072&pageToken=labore quis Ut&envgroupHostname=labore quis Ut",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"hostSecurityReports"
															],
															"query": [
																{
																	"key": "submittedBy",
																	"value": "labore quis Ut"
																},
																{
																	"key": "status",
																	"value": "labore quis Ut"
																},
																{
																	"key": "from",
																	"value": "labore quis Ut"
																},
																{
																	"key": "to",
																	"value": "labore quis Ut"
																},
																{
																	"key": "dataset",
																	"value": "labore quis Ut"
																},
																{
																	"key": "pageSize",
																	"value": "87452072"
																},
																{
																	"key": "pageToken",
																	"value": "labore quis Ut"
																},
																{
																	"key": "envgroupHostname",
																	"value": "labore quis Ut"
																}
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. The parent resource name. Must be of the form `organizations/{org}`."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "null"
												}
											]
										},
										{
											"name": "Create Host Security Report",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "null",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/hostSecurityReports",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"hostSecurityReports"
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `parent`. Required. The parent resource name. Must be of the form `organizations/{org}`."
														}
													]
												},
												"description": "Submit a query at host level to be processed in the background. If the submission of the query succeeds, the API returns a 201 status and an ID that refer to the query. In addition to the HTTP status 201, the `state` of \"enqueued\" means that the request succeeded."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/hostSecurityReports",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"hostSecurityReports"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. The parent resource name. Must be of the form `organizations/{org}`."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "null"
												}
											]
										}
									]
								},
								{
									"name": "keyvaluemaps",
									"item": [
										{
											"name": "{keyvaluemapsId}",
											"item": [
												{
													"name": "entries",
													"item": [
														{
															"name": "{entriesId}",
															"item": [
																{
																	"name": "Get Key Value Entry1",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/keyvaluemaps/:keyvaluemapsId/entries/:entriesId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"keyvaluemaps",
																				":keyvaluemapsId",
																				"entries",
																				":entriesId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Scope as indicated by the URI in which to fetch the key value map entry/value. Use **one** of the following structures in your request: * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`. * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/{entry}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`."
																				},
																				{
																					"key": "keyvaluemapsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "entriesId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Get the key value entry value for a key value map scoped to an organization, environment, or API proxy. **Note**: Supported for Apigee hybrid 1.8.x and higher."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/keyvaluemaps/:keyvaluemapsId/entries/:entriesId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"keyvaluemaps",
																						":keyvaluemapsId",
																						"entries",
																						":entriesId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Scope as indicated by the URI in which to fetch the key value map entry/value. Use **one** of the following structures in your request: * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`. * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/{entry}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`."
																						},
																						{
																							"key": "keyvaluemapsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "entriesId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"value\": \"anim deserunt id\",\n  \"name\": \"sit eiusmod lab\"\n}"
																		}
																	]
																},
																{
																	"name": "Delete Key Value Entry1",
																	"request": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/keyvaluemaps/:keyvaluemapsId/entries/:entriesId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"keyvaluemaps",
																				":keyvaluemapsId",
																				"entries",
																				":entriesId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Scope as indicated by the URI in which to delete the key value map entry. Use **one** of the following structures in your request: * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`. * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/{entry}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`."
																				},
																				{
																					"key": "keyvaluemapsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "entriesId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Deletes a key value entry from a key value map scoped to an organization, environment, or API proxy. **Notes:** * After you delete the key value entry, the policy consuming the entry will continue to function with its cached values for a few minutes. This is expected behavior. * Supported for Apigee hybrid 1.8.x and higher."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/keyvaluemaps/:keyvaluemapsId/entries/:entriesId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"keyvaluemaps",
																						":keyvaluemapsId",
																						"entries",
																						":entriesId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Scope as indicated by the URI in which to delete the key value map entry. Use **one** of the following structures in your request: * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`. * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/{entry}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`."
																						},
																						{
																							"key": "keyvaluemapsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "entriesId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"value\": \"anim deserunt id\",\n  \"name\": \"sit eiusmod lab\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "Create Key Value Entry1",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"value\": \"anim deserunt id\",\n  \"name\": \"sit eiusmod lab\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/keyvaluemaps/:keyvaluemapsId/entries",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"keyvaluemaps",
																		":keyvaluemapsId",
																		"entries"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. Scope as indicated by the URI in which to create the key value map entry. Use **one** of the following structures in your request: * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`."
																		},
																		{
																			"key": "keyvaluemapsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Creates key value entries in a key value map scoped to an organization, environment, or API proxy. **Note**: Supported for Apigee hybrid 1.8.x and higher."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/keyvaluemaps/:keyvaluemapsId/entries",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"keyvaluemaps",
																				":keyvaluemapsId",
																				"entries"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. Scope as indicated by the URI in which to create the key value map entry. Use **one** of the following structures in your request: * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`."
																				},
																				{
																					"key": "keyvaluemapsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"value\": \"anim deserunt id\",\n  \"name\": \"sit eiusmod lab\"\n}"
																}
															]
														},
														{
															"name": "List Key Value Entries1",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/keyvaluemaps/:keyvaluemapsId/entries?pageSize=87452072&pageToken=labore quis Ut",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"keyvaluemaps",
																		":keyvaluemapsId",
																		"entries"
																	],
																	"query": [
																		{
																			"key": "pageSize",
																			"value": "87452072",
																			"description": "Optional. Maximum number of key value entries to return. If unspecified, at most 100 entries will be returned."
																		},
																		{
																			"key": "pageToken",
																			"value": "labore quis Ut",
																			"description": "Optional. Page token. If provides, must be a valid key value entry returned from a previous call that can be used to retrieve the next page."
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. Scope as indicated by the URI in which to list key value maps. Use **one** of the following structures in your request: * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`."
																		},
																		{
																			"key": "keyvaluemapsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Lists key value entries for key values maps scoped to an organization, environment, or API proxy. **Note**: Supported for Apigee hybrid 1.8.x and higher."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/keyvaluemaps/:keyvaluemapsId/entries?pageSize=87452072&pageToken=labore quis Ut",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"keyvaluemaps",
																				":keyvaluemapsId",
																				"entries"
																			],
																			"query": [
																				{
																					"key": "pageSize",
																					"value": "87452072"
																				},
																				{
																					"key": "pageToken",
																					"value": "labore quis Ut"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. Scope as indicated by the URI in which to list key value maps. Use **one** of the following structures in your request: * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`."
																				},
																				{
																					"key": "keyvaluemapsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"nextPageToken\": \"ullamco ipsum\",\n  \"keyValueEntries\": [\n    {\n      \"value\": \"sint in nostrud\",\n      \"name\": \"laborum\"\n    },\n    {\n      \"value\": \"nulla laborum\",\n      \"name\": \"consectetur laborum\"\n    }\n  ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "Delete Organization Key Value Map",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/keyvaluemaps/:keyvaluemapsId",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"keyvaluemaps",
																":keyvaluemapsId"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Name of the key value map. Use the following structure in your request: `organizations/{org}/keyvaluemaps/{keyvaluemap}`"
																},
																{
																	"key": "keyvaluemapsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Deletes a key value map from an organization."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/keyvaluemaps/:keyvaluemapsId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"keyvaluemaps",
																		":keyvaluemapsId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the key value map. Use the following structure in your request: `organizations/{org}/keyvaluemaps/{keyvaluemap}`"
																		},
																		{
																			"key": "keyvaluemapsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "{\n  \"name\": \"de\",\n  \"encrypted\": false\n}"
														}
													]
												}
											]
										},
										{
											"name": "Create Organization Key Value Map",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"de\",\n  \"encrypted\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/keyvaluemaps",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"keyvaluemaps"
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `parent`. Required. Name of the organization in which to create the key value map file. Use the following structure in your request: `organizations/{org}`"
														}
													]
												},
												"description": "Creates a key value map in an organization."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/keyvaluemaps",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"keyvaluemaps"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. Name of the organization in which to create the key value map file. Use the following structure in your request: `organizations/{org}`"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{\n  \"name\": \"de\",\n  \"encrypted\": false\n}"
												}
											]
										}
									]
								},
								{
									"name": "developers",
									"item": [
										{
											"name": "{developersId}",
											"item": [
												{
													"name": "apps",
													"item": [
														{
															"name": "{appsId}",
															"item": [
																{
																	"name": "attributes",
																	"item": [
																		{
																			"name": "{attributesId}",
																			"item": [
																				{
																					"name": "Update Developer App Attribute",
																					"request": {
																						"method": "POST",
																						"header": [
																							{
																								"key": "Content-Type",
																								"value": "application/json"
																							},
																							{
																								"key": "Accept",
																								"value": "*/*"
																							}
																						],
																						"body": {
																							"mode": "raw",
																							"raw": "{\n  \"name\": \"consequat laboris nisi ut\",\n  \"value\": \"nostrud adipisicing\"\n}",
																							"options": {
																								"raw": {
																									"language": "json"
																								}
																							}
																						},
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps/:appsId/attributes/:attributesId",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"developers",
																								":developersId",
																								"apps",
																								":appsId",
																								"attributes",
																								":attributesId"
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. Required. Name of the developer app attribute. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`"
																								},
																								{
																									"key": "developersId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "appsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "attributesId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								}
																							]
																						},
																						"description": "Updates a developer app attribute. **Note**: OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and API products) are cached for 180 seconds (current default). Any custom attributes associated with these entities are cached for at least 180 seconds after the entity is accessed at runtime. Therefore, an `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token in less than 180 seconds."
																					},
																					"response": [
																						{
																							"name": "Successful operation",
																							"originalRequest": {
																								"method": "POST",
																								"header": [],
																								"body": {
																									"mode": "raw",
																									"raw": "{\n  \"name\": \"consequat laboris nisi ut\",\n  \"value\": \"nostrud adipisicing\"\n}",
																									"options": {
																										"raw": {
																											"language": "json"
																										}
																									}
																								},
																								"url": {
																									"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps/:appsId/attributes/:attributesId",
																									"host": [
																										"{{BASE_URL}}"
																									],
																									"path": [
																										"v1",
																										"organizations",
																										"{{ORG_ID}}",
																										"developers",
																										":developersId",
																										"apps",
																										":appsId",
																										"attributes",
																										":attributesId"
																									],
																									"variable": [
																										{
																											"key": "organizationsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. Required. Name of the developer app attribute. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`"
																										},
																										{
																											"key": "developersId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "appsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "attributesId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										}
																									]
																								}
																							},
																							"status": "Internal Server Error",
																							"code": 500,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "*/*"
																								}
																							],
																							"cookie": [],
																							"body": "{\n  \"name\": \"consequat laboris nisi ut\",\n  \"value\": \"nostrud adipisicing\"\n}"
																						}
																					]
																				},
																				{
																					"name": "Get Developer App Attribute",
																					"request": {
																						"method": "GET",
																						"header": [
																							{
																								"key": "Accept",
																								"value": "*/*"
																							}
																						],
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps/:appsId/attributes/:attributesId",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"developers",
																								":developersId",
																								"apps",
																								":appsId",
																								"attributes",
																								":attributesId"
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. Required. Name of the developer app attribute. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`"
																								},
																								{
																									"key": "developersId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "appsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "attributesId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								}
																							]
																						},
																						"description": "Returns a developer app attribute."
																					},
																					"response": [
																						{
																							"name": "Successful operation",
																							"originalRequest": {
																								"method": "GET",
																								"header": [],
																								"url": {
																									"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps/:appsId/attributes/:attributesId",
																									"host": [
																										"{{BASE_URL}}"
																									],
																									"path": [
																										"v1",
																										"organizations",
																										"{{ORG_ID}}",
																										"developers",
																										":developersId",
																										"apps",
																										":appsId",
																										"attributes",
																										":attributesId"
																									],
																									"variable": [
																										{
																											"key": "organizationsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. Required. Name of the developer app attribute. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`"
																										},
																										{
																											"key": "developersId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "appsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "attributesId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										}
																									]
																								}
																							},
																							"status": "Internal Server Error",
																							"code": 500,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "*/*"
																								}
																							],
																							"cookie": [],
																							"body": "{\n  \"name\": \"consequat laboris nisi ut\",\n  \"value\": \"nostrud adipisicing\"\n}"
																						}
																					]
																				},
																				{
																					"name": "Delete Developer App Attribute",
																					"request": {
																						"method": "DELETE",
																						"header": [
																							{
																								"key": "Accept",
																								"value": "*/*"
																							}
																						],
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps/:appsId/attributes/:attributesId",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"developers",
																								":developersId",
																								"apps",
																								":appsId",
																								"attributes",
																								":attributesId"
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. Required. Name of the developer app attribute. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`"
																								},
																								{
																									"key": "developersId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "appsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "attributesId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								}
																							]
																						},
																						"description": "Deletes a developer app attribute."
																					},
																					"response": [
																						{
																							"name": "Successful operation",
																							"originalRequest": {
																								"method": "DELETE",
																								"header": [],
																								"url": {
																									"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps/:appsId/attributes/:attributesId",
																									"host": [
																										"{{BASE_URL}}"
																									],
																									"path": [
																										"v1",
																										"organizations",
																										"{{ORG_ID}}",
																										"developers",
																										":developersId",
																										"apps",
																										":appsId",
																										"attributes",
																										":attributesId"
																									],
																									"variable": [
																										{
																											"key": "organizationsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. Required. Name of the developer app attribute. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`"
																										},
																										{
																											"key": "developersId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "appsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "attributesId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										}
																									]
																								}
																							},
																							"status": "Internal Server Error",
																							"code": 500,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "*/*"
																								}
																							],
																							"cookie": [],
																							"body": "{\n  \"name\": \"consequat laboris nisi ut\",\n  \"value\": \"nostrud adipisicing\"\n}"
																						}
																					]
																				}
																			]
																		},
																		{
																			"name": "List Developer App Attributes",
																			"request": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "*/*"
																					}
																				],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps/:appsId/attributes",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"developers",
																						":developersId",
																						"apps",
																						":appsId",
																						"attributes"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. Required. Name of the developer app. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}`"
																						},
																						{
																							"key": "developersId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "appsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																						}
																					]
																				},
																				"description": "Returns a list of all developer app attributes."
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "GET",
																						"header": [],
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps/:appsId/attributes",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"developers",
																								":developersId",
																								"apps",
																								":appsId",
																								"attributes"
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. Required. Name of the developer app. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}`"
																								},
																								{
																									"key": "developersId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "appsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																								}
																							]
																						}
																					},
																					"status": "Internal Server Error",
																					"code": 500,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "*/*"
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"attribute\": [\n    {\n      \"name\": \"voluptate eiusmod\",\n      \"value\": \"cupidatat esse\"\n    },\n    {\n      \"name\": \"tempor dolore Lorem sunt\",\n      \"value\": \"Duis ad\"\n    }\n  ]\n}"
																				}
																			]
																		},
																		{
																			"name": "Update Developer App Attributes",
																			"request": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "*/*"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"attribute\": [\n    {\n      \"name\": \"ut esse incididunt velit\",\n      \"value\": \"culpa mollit magna Ut\"\n    },\n    {\n      \"name\": \"laborum nostrud\",\n      \"value\": \"Excepteur ullamco consequa\"\n    }\n  ]\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps/:appsId/attributes",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"developers",
																						":developersId",
																						"apps",
																						":appsId",
																						"attributes"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the developer app. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}`"
																						},
																						{
																							"key": "developersId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "appsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				},
																				"description": "Updates attributes for a developer app. This API replaces the current attributes with those specified in the request."
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "POST",
																						"header": [],
																						"body": {
																							"mode": "raw",
																							"raw": "{\n  \"attribute\": [\n    {\n      \"name\": \"ut esse incididunt velit\",\n      \"value\": \"culpa mollit magna Ut\"\n    },\n    {\n      \"name\": \"laborum nostrud\",\n      \"value\": \"Excepteur ullamco consequa\"\n    }\n  ]\n}",
																							"options": {
																								"raw": {
																									"language": "json"
																								}
																							}
																						},
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps/:appsId/attributes",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"developers",
																								":developersId",
																								"apps",
																								":appsId",
																								"attributes"
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. Required. Name of the developer app. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}`"
																								},
																								{
																									"key": "developersId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "appsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								}
																							]
																						}
																					},
																					"status": "Internal Server Error",
																					"code": 500,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "*/*"
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"attribute\": [\n    {\n      \"name\": \"ut esse incididunt velit\",\n      \"value\": \"culpa mollit magna Ut\"\n    },\n    {\n      \"name\": \"laborum nostrud\",\n      \"value\": \"Excepteur ullamco consequa\"\n    }\n  ]\n}"
																				}
																			]
																		}
																	]
																},
																{
																	"name": "keys",
																	"item": [
																		{
																			"name": "{keysId}",
																			"item": [
																				{
																					"name": "apiproducts/{apiproductsId}",
																					"item": [
																						{
																							"name": "Update Developer App Key Api Product",
																							"request": {
																								"method": "POST",
																								"header": [
																									{
																										"key": "Accept",
																										"value": "*/*"
																									}
																								],
																								"url": {
																									"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps/:appsId/keys/:keysId/apiproducts/:apiproductsId?action=labore quis Ut",
																									"host": [
																										"{{BASE_URL}}"
																									],
																									"path": [
																										"v1",
																										"organizations",
																										"{{ORG_ID}}",
																										"developers",
																										":developersId",
																										"apps",
																										":appsId",
																										"keys",
																										":keysId",
																										"apiproducts",
																										":apiproductsId"
																									],
																									"query": [
																										{
																											"key": "action",
																											"value": "labore quis Ut",
																											"description": "Approve or revoke the consumer key by setting this value to `approve` or `revoke`, respectively."
																										}
																									],
																									"variable": [
																										{
																											"key": "organizationsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. Name of the API product in the developer app key in the following format: `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}/apiproducts/{apiproduct}`"
																										},
																										{
																											"key": "developersId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "appsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "keysId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "apiproductsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										}
																									]
																								},
																								"description": "Approves or revokes the consumer key for an API product. After a consumer key is approved, the app can use it to access APIs. A consumer key that is revoked or pending cannot be used to access an API. Any access tokens associated with a revoked consumer key will remain active. However, Apigee checks the status of the consumer key and if set to `revoked` will not allow access to the API."
																							},
																							"response": [
																								{
																									"name": "Successful operation",
																									"originalRequest": {
																										"method": "POST",
																										"header": [],
																										"url": {
																											"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps/:appsId/keys/:keysId/apiproducts/:apiproductsId?action=labore quis Ut",
																											"host": [
																												"{{BASE_URL}}"
																											],
																											"path": [
																												"v1",
																												"organizations",
																												"{{ORG_ID}}",
																												"developers",
																												":developersId",
																												"apps",
																												":appsId",
																												"keys",
																												":keysId",
																												"apiproducts",
																												":apiproductsId"
																											],
																											"query": [
																												{
																													"key": "action",
																													"value": "labore quis Ut"
																												}
																											],
																											"variable": [
																												{
																													"key": "organizationsId",
																													"value": "labore quis Ut",
																													"description": "(Required) Part of `name`. Name of the API product in the developer app key in the following format: `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}/apiproducts/{apiproduct}`"
																												},
																												{
																													"key": "developersId",
																													"value": "labore quis Ut",
																													"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																												},
																												{
																													"key": "appsId",
																													"value": "labore quis Ut",
																													"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																												},
																												{
																													"key": "keysId",
																													"value": "labore quis Ut",
																													"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																												},
																												{
																													"key": "apiproductsId",
																													"value": "labore quis Ut",
																													"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																												}
																											]
																										}
																									},
																									"status": "Internal Server Error",
																									"code": 500,
																									"_postman_previewlanguage": "json",
																									"header": [
																										{
																											"key": "Content-Type",
																											"value": "*/*"
																										}
																									],
																									"cookie": [],
																									"body": "{}"
																								}
																							]
																						},
																						{
																							"name": "Delete Api Product1",
																							"request": {
																								"method": "DELETE",
																								"header": [
																									{
																										"key": "Accept",
																										"value": "*/*"
																									}
																								],
																								"url": {
																									"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps/:appsId/keys/:keysId/apiproducts/:apiproductsId",
																									"host": [
																										"{{BASE_URL}}"
																									],
																									"path": [
																										"v1",
																										"organizations",
																										"{{ORG_ID}}",
																										"developers",
																										":developersId",
																										"apps",
																										":appsId",
																										"keys",
																										":keysId",
																										"apiproducts",
																										":apiproductsId"
																									],
																									"variable": [
																										{
																											"key": "organizationsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. Name of the API product in the developer app key in the following format: `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}/apiproducts/{apiproduct}`"
																										},
																										{
																											"key": "developersId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "appsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "keysId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "apiproductsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										}
																									]
																								},
																								"description": "Removes an API product from an app's consumer key. After the API product is removed, the app cannot access the API resources defined in that API product. **Note**: The consumer key is not removed, only its association with the API product."
																							},
																							"response": [
																								{
																									"name": "Successful operation",
																									"originalRequest": {
																										"method": "DELETE",
																										"header": [],
																										"url": {
																											"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps/:appsId/keys/:keysId/apiproducts/:apiproductsId",
																											"host": [
																												"{{BASE_URL}}"
																											],
																											"path": [
																												"v1",
																												"organizations",
																												"{{ORG_ID}}",
																												"developers",
																												":developersId",
																												"apps",
																												":appsId",
																												"keys",
																												":keysId",
																												"apiproducts",
																												":apiproductsId"
																											],
																											"variable": [
																												{
																													"key": "organizationsId",
																													"value": "labore quis Ut",
																													"description": "(Required) Part of `name`. Name of the API product in the developer app key in the following format: `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}/apiproducts/{apiproduct}`"
																												},
																												{
																													"key": "developersId",
																													"value": "labore quis Ut",
																													"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																												},
																												{
																													"key": "appsId",
																													"value": "labore quis Ut",
																													"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																												},
																												{
																													"key": "keysId",
																													"value": "labore quis Ut",
																													"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																												},
																												{
																													"key": "apiproductsId",
																													"value": "labore quis Ut",
																													"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																												}
																											]
																										}
																									},
																									"status": "Internal Server Error",
																									"code": 500,
																									"_postman_previewlanguage": "json",
																									"header": [
																										{
																											"key": "Content-Type",
																											"value": "*/*"
																										}
																									],
																									"cookie": [],
																									"body": "null"
																								}
																							]
																						}
																					]
																				},
																				{
																					"name": "Update Developer App Key",
																					"request": {
																						"method": "POST",
																						"header": [
																							{
																								"key": "Content-Type",
																								"value": "application/json"
																							},
																							{
																								"key": "Accept",
																								"value": "*/*"
																							}
																						],
																						"body": {
																							"mode": "raw",
																							"raw": "null",
																							"options": {
																								"raw": {
																									"language": "json"
																								}
																							}
																						},
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps/:appsId/keys/:keysId?action=labore quis Ut",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"developers",
																								":developersId",
																								"apps",
																								":appsId",
																								"keys",
																								":keysId"
																							],
																							"query": [
																								{
																									"key": "action",
																									"value": "labore quis Ut",
																									"description": "Approve or revoke the consumer key by setting this value to `approve` or `revoke`, respectively. The `Content-Type` header must be set to `application/octet-stream`."
																								}
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. Name of the developer app key. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`"
																								},
																								{
																									"key": "developersId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "appsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "keysId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								}
																							]
																						},
																						"description": "Adds an API product to a developer app key, enabling the app that holds the key to access the API resources bundled in the API product. In addition, you can add attributes to a developer app key. This API replaces the existing attributes with those specified in the request. Include or exclude any existing attributes that you want to retain or delete, respectively. You can use the same key to access all API products associated with the app."
																					},
																					"response": [
																						{
																							"name": "Successful operation",
																							"originalRequest": {
																								"method": "POST",
																								"header": [],
																								"url": {
																									"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps/:appsId/keys/:keysId?action=labore quis Ut",
																									"host": [
																										"{{BASE_URL}}"
																									],
																									"path": [
																										"v1",
																										"organizations",
																										"{{ORG_ID}}",
																										"developers",
																										":developersId",
																										"apps",
																										":appsId",
																										"keys",
																										":keysId"
																									],
																									"query": [
																										{
																											"key": "action",
																											"value": "labore quis Ut"
																										}
																									],
																									"variable": [
																										{
																											"key": "organizationsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. Name of the developer app key. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`"
																										},
																										{
																											"key": "developersId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "appsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "keysId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										}
																									]
																								}
																							},
																							"status": "Internal Server Error",
																							"code": 500,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "*/*"
																								}
																							],
																							"cookie": [],
																							"body": "null"
																						}
																					]
																				},
																				{
																					"name": "Get Developer App Key",
																					"request": {
																						"method": "GET",
																						"header": [
																							{
																								"key": "Accept",
																								"value": "*/*"
																							}
																						],
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps/:appsId/keys/:keysId",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"developers",
																								":developersId",
																								"apps",
																								":appsId",
																								"keys",
																								":keysId"
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. Name of the developer app key. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`"
																								},
																								{
																									"key": "developersId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "appsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "keysId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								}
																							]
																						},
																						"description": "Gets details for a consumer key for a developer app, including the key and secret value, associated API products, and other information."
																					},
																					"response": [
																						{
																							"name": "Successful operation",
																							"originalRequest": {
																								"method": "GET",
																								"header": [],
																								"url": {
																									"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps/:appsId/keys/:keysId",
																									"host": [
																										"{{BASE_URL}}"
																									],
																									"path": [
																										"v1",
																										"organizations",
																										"{{ORG_ID}}",
																										"developers",
																										":developersId",
																										"apps",
																										":appsId",
																										"keys",
																										":keysId"
																									],
																									"variable": [
																										{
																											"key": "organizationsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. Name of the developer app key. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`"
																										},
																										{
																											"key": "developersId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "appsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "keysId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										}
																									]
																								}
																							},
																							"status": "Internal Server Error",
																							"code": 500,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "*/*"
																								}
																							],
																							"cookie": [],
																							"body": "null"
																						}
																					]
																				},
																				{
																					"name": "Replace Developer App Key",
																					"request": {
																						"method": "PUT",
																						"header": [
																							{
																								"key": "Content-Type",
																								"value": "application/json"
																							},
																							{
																								"key": "Accept",
																								"value": "*/*"
																							}
																						],
																						"body": {
																							"mode": "raw",
																							"raw": "null",
																							"options": {
																								"raw": {
																									"language": "json"
																								}
																							}
																						},
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps/:appsId/keys/:keysId",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"developers",
																								":developersId",
																								"apps",
																								":appsId",
																								"keys",
																								":keysId"
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. Name of the developer app key. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`"
																								},
																								{
																									"key": "developersId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "appsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "keysId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								}
																							]
																						},
																						"description": "Updates the scope of an app. This API replaces the existing scopes with those specified in the request. Include or exclude any existing scopes that you want to retain or delete, respectively. The specified scopes must already be defined for the API products associated with the app. This API sets the `scopes` element under the `apiProducts` element in the attributes of the app."
																					},
																					"response": [
																						{
																							"name": "Successful operation",
																							"originalRequest": {
																								"method": "PUT",
																								"header": [],
																								"url": {
																									"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps/:appsId/keys/:keysId",
																									"host": [
																										"{{BASE_URL}}"
																									],
																									"path": [
																										"v1",
																										"organizations",
																										"{{ORG_ID}}",
																										"developers",
																										":developersId",
																										"apps",
																										":appsId",
																										"keys",
																										":keysId"
																									],
																									"variable": [
																										{
																											"key": "organizationsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. Name of the developer app key. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`"
																										},
																										{
																											"key": "developersId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "appsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "keysId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										}
																									]
																								}
																							},
																							"status": "Internal Server Error",
																							"code": 500,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "*/*"
																								}
																							],
																							"cookie": [],
																							"body": "null"
																						}
																					]
																				},
																				{
																					"name": "Delete Developer App Key",
																					"request": {
																						"method": "DELETE",
																						"header": [
																							{
																								"key": "Accept",
																								"value": "*/*"
																							}
																						],
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps/:appsId/keys/:keysId",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"developers",
																								":developersId",
																								"apps",
																								":appsId",
																								"keys",
																								":keysId"
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. Name of the developer app key. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`"
																								},
																								{
																									"key": "developersId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "appsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "keysId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								}
																							]
																						},
																						"description": "Deletes an app's consumer key and removes all API products associated with the app. After the consumer key is deleted, it cannot be used to access any APIs. **Note**: After you delete a consumer key, you may want to: 1. Create a new consumer key and secret for the developer app using the CreateDeveloperAppKey API, and subsequently add an API product to the key using the UpdateDeveloperAppKey API. 2. Delete the developer app, if it is no longer required."
																					},
																					"response": [
																						{
																							"name": "Successful operation",
																							"originalRequest": {
																								"method": "DELETE",
																								"header": [],
																								"url": {
																									"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps/:appsId/keys/:keysId",
																									"host": [
																										"{{BASE_URL}}"
																									],
																									"path": [
																										"v1",
																										"organizations",
																										"{{ORG_ID}}",
																										"developers",
																										":developersId",
																										"apps",
																										":appsId",
																										"keys",
																										":keysId"
																									],
																									"variable": [
																										{
																											"key": "organizationsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. Name of the developer app key. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`"
																										},
																										{
																											"key": "developersId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "appsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "keysId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										}
																									]
																								}
																							},
																							"status": "Internal Server Error",
																							"code": 500,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "*/*"
																								}
																							],
																							"cookie": [],
																							"body": "null"
																						}
																					]
																				}
																			]
																		},
																		{
																			"name": "Create Developer App Key",
																			"request": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "*/*"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "null",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps/:appsId/keys",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"developers",
																						":developersId",
																						"apps",
																						":appsId",
																						"keys"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. Parent of the developer app key. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps`"
																						},
																						{
																							"key": "developersId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "appsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																						}
																					]
																				},
																				"description": "Creates a custom consumer key and secret for a developer app. This is particularly useful if you want to migrate existing consumer keys and secrets to Apigee from another system. Consumer keys and secrets can contain letters, numbers, underscores, and hyphens. No other special characters are allowed. To avoid service disruptions, a consumer key and secret should not exceed 2 KBs each. **Note**: When creating the consumer key and secret, an association to API products will not be made. Therefore, you should not specify the associated API products in your request. Instead, use the UpdateDeveloperAppKey API to make the association after the consumer key and secret are created. If a consumer key and secret already exist, you can keep them or delete them using the DeleteDeveloperAppKey API."
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "POST",
																						"header": [],
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps/:appsId/keys",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"developers",
																								":developersId",
																								"apps",
																								":appsId",
																								"keys"
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. Parent of the developer app key. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps`"
																								},
																								{
																									"key": "developersId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "appsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																								}
																							]
																						}
																					},
																					"status": "Internal Server Error",
																					"code": 500,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "*/*"
																						}
																					],
																					"cookie": [],
																					"body": "null"
																				}
																			]
																		},
																		{
																			"name": "Create Developer App Key1",
																			"request": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "*/*"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "null",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps/:appsId/keys/create",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"developers",
																						":developersId",
																						"apps",
																						":appsId",
																						"keys",
																						"create"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. Parent of the developer app key. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps`"
																						},
																						{
																							"key": "developersId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "appsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																						}
																					]
																				},
																				"description": "Creates a custom consumer key and secret for a developer app. This is particularly useful if you want to migrate existing consumer keys and secrets to Apigee from another system. Consumer keys and secrets can contain letters, numbers, underscores, and hyphens. No other special characters are allowed. To avoid service disruptions, a consumer key and secret should not exceed 2 KBs each. **Note**: When creating the consumer key and secret, an association to API products will not be made. Therefore, you should not specify the associated API products in your request. Instead, use the UpdateDeveloperAppKey API to make the association after the consumer key and secret are created. If a consumer key and secret already exist, you can keep them or delete them using the DeleteDeveloperAppKey API."
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "POST",
																						"header": [],
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps/:appsId/keys/create",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"developers",
																								":developersId",
																								"apps",
																								":appsId",
																								"keys",
																								"create"
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. Parent of the developer app key. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps`"
																								},
																								{
																									"key": "developersId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "appsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																								}
																							]
																						}
																					},
																					"status": "Internal Server Error",
																					"code": 500,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "*/*"
																						}
																					],
																					"cookie": [],
																					"body": "null"
																				}
																			]
																		}
																	]
																},
																{
																	"name": "Generate Key Pair Or Update Developer App Status",
																	"request": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "null",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps/:appsId?action=labore quis Ut",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"developers",
																				":developersId",
																				"apps",
																				":appsId"
																			],
																			"query": [
																				{
																					"key": "action",
																					"value": "labore quis Ut",
																					"description": "Action. Valid values are `approve` or `revoke`."
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the developer app. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}`"
																				},
																				{
																					"key": "developersId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "appsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Manages access to a developer app by enabling you to: * Approve or revoke a developer app * Generate a new consumer key and secret for a developer app To approve or revoke a developer app, set the `action` query parameter to `approve` or `revoke`, respectively, and the `Content-Type` header to `application/octet-stream`. If a developer app is revoked, none of its API keys are valid for API calls even though the keys are still approved. If successful, the API call returns the following HTTP status code: `204 No Content` To generate a new consumer key and secret for a developer app, pass the new key/secret details. Rather than replace an existing key, this API generates a new key. In this case, multiple key pairs may be associated with a single developer app. Each key pair has an independent status (`approve` or `revoke`) and expiration time. Any approved, non-expired key can be used in an API call. For example, if you're using API key rotation, you can generate new keys with expiration times that overlap keys that are going to expire. You might also generate a new consumer key/secret if the security of the original key/secret is compromised. The `keyExpiresIn` property defines the expiration time for the API key in milliseconds. If you don't set this property or set it to `-1`, the API key never expires. **Notes**: * When generating a new key/secret, this API replaces the existing attributes, notes, and callback URLs with those specified in the request. Include or exclude any existing information that you want to retain or delete, respectively. * To migrate existing consumer keys and secrets to hybrid from another system, see the CreateDeveloperAppKey API."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "POST",
																				"header": [],
																				"body": {
																					"mode": "raw",
																					"raw": "null",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps/:appsId?action=labore quis Ut",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"developers",
																						":developersId",
																						"apps",
																						":appsId"
																					],
																					"query": [
																						{
																							"key": "action",
																							"value": "labore quis Ut"
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the developer app. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}`"
																						},
																						{
																							"key": "developersId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "appsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "null"
																		}
																	]
																},
																{
																	"name": "Update Developer App",
																	"request": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "null",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps/:appsId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"developers",
																				":developersId",
																				"apps",
																				":appsId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the developer app. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}`"
																				},
																				{
																					"key": "developersId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "appsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Updates the details for a developer app. In addition, you can add an API product to a developer app and automatically generate an API key for the app to use when calling APIs in the API product. If you want to use an existing API key for the API product, add the API product to the API key using the UpdateDeveloperAppKey API. Using this API, you cannot update the following: * App name as it is the primary key used to identify the app and cannot be changed. * Scopes associated with the app. Instead, use the ReplaceDeveloperAppKey API. This API replaces the existing attributes with those specified in the request. Include or exclude any existing attributes that you want to retain or delete, respectively."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [],
																				"body": {
																					"mode": "raw",
																					"raw": "null",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps/:appsId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"developers",
																						":developersId",
																						"apps",
																						":appsId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the developer app. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}`"
																						},
																						{
																							"key": "developersId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "appsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "null"
																		}
																	]
																},
																{
																	"name": "Delete Developer App",
																	"request": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps/:appsId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"developers",
																				":developersId",
																				"apps",
																				":appsId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the developer app. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}`"
																				},
																				{
																					"key": "developersId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "appsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Deletes a developer app. **Note**: The delete operation is asynchronous. The developer app is deleted immediately, but its associated resources, such as app keys or access tokens, may take anywhere from a few seconds to a few minutes to be deleted."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps/:appsId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"developers",
																						":developersId",
																						"apps",
																						":appsId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the developer app. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}`"
																						},
																						{
																							"key": "developersId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "appsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "null"
																		}
																	]
																},
																{
																	"name": "Get Developer App",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps/:appsId?query=labore quis Ut&entity=labore quis Ut",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"developers",
																				":developersId",
																				"apps",
																				":appsId"
																			],
																			"query": [
																				{
																					"key": "query",
																					"value": "labore quis Ut",
																					"description": "**Note**: Must be used in conjunction with the `entity` parameter. Set to `count` to return the number of API resources that have been approved for access by a developer app in the specified Apigee organization."
																				},
																				{
																					"key": "entity",
																					"value": "labore quis Ut",
																					"description": "**Note**: Must be used in conjunction with the `query` parameter. Set to `apiresources` to return the number of API resources that have been approved for access by a developer app in the specified Apigee organization."
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the developer app. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}`"
																				},
																				{
																					"key": "developersId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "appsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Returns the details for a developer app."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps/:appsId?query=labore quis Ut&entity=labore quis Ut",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"developers",
																						":developersId",
																						"apps",
																						":appsId"
																					],
																					"query": [
																						{
																							"key": "query",
																							"value": "labore quis Ut"
																						},
																						{
																							"key": "entity",
																							"value": "labore quis Ut"
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the developer app. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}`"
																						},
																						{
																							"key": "developersId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "appsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "null"
																		}
																	]
																}
															]
														},
														{
															"name": "List Developer Apps",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps?expand=true&count=&startKey=labore quis Ut&shallowExpand=true",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"developers",
																		":developersId",
																		"apps"
																	],
																	"query": [
																		{
																			"key": "expand",
																			"value": "true",
																			"description": "Optional. Specifies whether to expand the results. Set to `true` to expand the results. This query parameter is not valid if you use the `count` or `startKey` query parameters."
																		},
																		{
																			"key": "count",
																			"value": "",
																			"description": "Number of developer apps to return in the API call. Use with the `startKey` parameter to provide more targeted filtering. The limit is 1000."
																		},
																		{
																			"key": "startKey",
																			"value": "labore quis Ut",
																			"description": "**Note**: Must be used in conjunction with the `count` parameter. Name of the developer app from which to start displaying the list of developer apps. For example, if you're returning 50 developer apps at a time (using the `count` query parameter), you can view developer apps 50-99 by entering the name of the 50th developer app. The developer app name is case sensitive."
																		},
																		{
																			"key": "shallowExpand",
																			"value": "true",
																			"description": "Optional. Specifies whether to expand the results in shallow mode. Set to `true` to expand the results in shallow mode."
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. Name of the developer. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`"
																		},
																		{
																			"key": "developersId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Lists all apps created by a developer in an Apigee organization. Optionally, you can request an expanded view of the developer apps. A maximum of 100 developer apps are returned per API call. You can paginate the list of deveoper apps returned using the `startKey` and `count` query parameters."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps?expand=true&count=&startKey=labore quis Ut&shallowExpand=true",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"developers",
																				":developersId",
																				"apps"
																			],
																			"query": [
																				{
																					"key": "expand",
																					"value": "true"
																				},
																				{
																					"key": "count",
																					"value": ""
																				},
																				{
																					"key": "startKey",
																					"value": "labore quis Ut"
																				},
																				{
																					"key": "shallowExpand",
																					"value": "true"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. Name of the developer. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`"
																				},
																				{
																					"key": "developersId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														},
														{
															"name": "Create Developer App",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "null",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"developers",
																		":developersId",
																		"apps"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. Name of the developer. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`"
																		},
																		{
																			"key": "developersId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Creates an app associated with a developer. This API associates the developer app with the specified API product and auto-generates an API key for the app to use in calls to API proxies inside that API product. The `name` is the unique ID of the app that you can use in API calls. The `DisplayName` (set as an attribute) appears in the UI. If you don't set the `DisplayName` attribute, the `name` appears in the UI."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "null",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/apps",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"developers",
																				":developersId",
																				"apps"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. Name of the developer. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`"
																				},
																				{
																					"key": "developersId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														}
													]
												},
												{
													"name": "monetizationConfig",
													"item": [
														{
															"name": "Get Developer Monetization Config",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/monetizationConfig",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"developers",
																		":developersId",
																		"monetizationConfig"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Monetization configuration for the developer. Use the following structure in your request: `organizations/{org}/developers/{developer}/monetizationConfig`"
																		},
																		{
																			"key": "developersId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Gets the monetization configuration for the developer."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/monetizationConfig",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"developers",
																				":developersId",
																				"monetizationConfig"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Monetization configuration for the developer. Use the following structure in your request: `organizations/{org}/developers/{developer}/monetizationConfig`"
																				},
																				{
																					"key": "developersId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"billingType\": \"BILLING_TYPE_UNSPECIFIED\"\n}"
																}
															]
														},
														{
															"name": "Update Developer Monetization Config",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"billingType\": \"BILLING_TYPE_UNSPECIFIED\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/monetizationConfig",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"developers",
																		":developersId",
																		"monetizationConfig"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Monetization configuration for the developer. Use the following structure in your request: `organizations/{org}/developers/{developer}/monetizationConfig`"
																		},
																		{
																			"key": "developersId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Updates the monetization configuration for the developer."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"billingType\": \"BILLING_TYPE_UNSPECIFIED\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/monetizationConfig",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"developers",
																				":developersId",
																				"monetizationConfig"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Monetization configuration for the developer. Use the following structure in your request: `organizations/{org}/developers/{developer}/monetizationConfig`"
																				},
																				{
																					"key": "developersId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"billingType\": \"BILLING_TYPE_UNSPECIFIED\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "attributes",
													"item": [
														{
															"name": "{attributesId}",
															"item": [
																{
																	"name": "Get Developer Attribute",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/attributes/:attributesId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"developers",
																				":developersId",
																				"attributes",
																				":attributesId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the developer attribute. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/attributes/{attribute}`"
																				},
																				{
																					"key": "developersId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "attributesId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Returns the value of the specified developer attribute."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/attributes/:attributesId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"developers",
																						":developersId",
																						"attributes",
																						":attributesId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the developer attribute. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/attributes/{attribute}`"
																						},
																						{
																							"key": "developersId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "attributesId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"name\": \"consequat laboris nisi ut\",\n  \"value\": \"nostrud adipisicing\"\n}"
																		}
																	]
																},
																{
																	"name": "Delete Developer Attribute",
																	"request": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/attributes/:attributesId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"developers",
																				":developersId",
																				"attributes",
																				":attributesId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the developer attribute. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/attributes/{attribute}`"
																				},
																				{
																					"key": "developersId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "attributesId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Deletes a developer attribute."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/attributes/:attributesId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"developers",
																						":developersId",
																						"attributes",
																						":attributesId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the developer attribute. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/attributes/{attribute}`"
																						},
																						{
																							"key": "developersId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "attributesId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"name\": \"consequat laboris nisi ut\",\n  \"value\": \"nostrud adipisicing\"\n}"
																		}
																	]
																},
																{
																	"name": "Update Developer Attribute",
																	"request": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"consequat laboris nisi ut\",\n  \"value\": \"nostrud adipisicing\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/attributes/:attributesId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"developers",
																				":developersId",
																				"attributes",
																				":attributesId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the developer attribute. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/attributes/{attribute}`"
																				},
																				{
																					"key": "developersId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "attributesId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Updates a developer attribute. **Note**: OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and API products) are cached for 180 seconds (default). Any custom attributes associated with these entities are cached for at least 180 seconds after the entity is accessed at runtime. Therefore, an `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token in less than 180 seconds."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "POST",
																				"header": [],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"name\": \"consequat laboris nisi ut\",\n  \"value\": \"nostrud adipisicing\"\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/attributes/:attributesId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"developers",
																						":developersId",
																						"attributes",
																						":attributesId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the developer attribute. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/attributes/{attribute}`"
																						},
																						{
																							"key": "developersId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "attributesId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"name\": \"consequat laboris nisi ut\",\n  \"value\": \"nostrud adipisicing\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "List Developer Attributes",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/attributes",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"developers",
																		":developersId",
																		"attributes"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. Email address of the developer for which attributes are being listed. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`"
																		},
																		{
																			"key": "developersId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Returns a list of all developer attributes."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/attributes",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"developers",
																				":developersId",
																				"attributes"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. Email address of the developer for which attributes are being listed. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`"
																				},
																				{
																					"key": "developersId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"attribute\": [\n    {\n      \"name\": \"ut esse incididunt velit\",\n      \"value\": \"culpa mollit magna Ut\"\n    },\n    {\n      \"name\": \"laborum nostrud\",\n      \"value\": \"Excepteur ullamco consequa\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Update Developer Attributes",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"attribute\": [\n    {\n      \"name\": \"ut esse incididunt velit\",\n      \"value\": \"culpa mollit magna Ut\"\n    },\n    {\n      \"name\": \"laborum nostrud\",\n      \"value\": \"Excepteur ullamco consequa\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/attributes",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"developers",
																		":developersId",
																		"attributes"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. Email address of the developer for which attributes are being updated. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`"
																		},
																		{
																			"key": "developersId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Updates developer attributes. This API replaces the existing attributes with those specified in the request. Add new attributes, and include or exclude any existing attributes that you want to retain or remove, respectively. The custom attribute limit is 18. **Note**: OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and API products) are cached for 180 seconds (default). Any custom attributes associated with these entities are cached for at least 180 seconds after the entity is accessed at runtime. Therefore, an `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token in less than 180 seconds."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"attribute\": [\n    {\n      \"name\": \"ut esse incididunt velit\",\n      \"value\": \"culpa mollit magna Ut\"\n    },\n    {\n      \"name\": \"laborum nostrud\",\n      \"value\": \"Excepteur ullamco consequa\"\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/attributes",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"developers",
																				":developersId",
																				"attributes"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. Email address of the developer for which attributes are being updated. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`"
																				},
																				{
																					"key": "developersId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"attribute\": [\n    {\n      \"name\": \"ut esse incididunt velit\",\n      \"value\": \"culpa mollit magna Ut\"\n    },\n    {\n      \"name\": \"laborum nostrud\",\n      \"value\": \"Excepteur ullamco consequa\"\n    }\n  ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "subscriptions",
													"item": [
														{
															"name": "Create Developer Subscription",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "null",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/subscriptions",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"developers",
																		":developersId",
																		"subscriptions"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. Email address of the developer that is purchasing a subscription to the API product. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`"
																		},
																		{
																			"key": "developersId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Creates a subscription to an API product. "
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "null",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/subscriptions",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"developers",
																				":developersId",
																				"subscriptions"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. Email address of the developer that is purchasing a subscription to the API product. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`"
																				},
																				{
																					"key": "developersId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														},
														{
															"name": "List Developer Subscriptions",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/subscriptions?startKey=labore quis Ut&count=87452072",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"developers",
																		":developersId",
																		"subscriptions"
																	],
																	"query": [
																		{
																			"key": "startKey",
																			"value": "labore quis Ut",
																			"description": "Name of the API product subscription from which to start displaying the list of subscriptions. If omitted, the list starts from the first item. For example, to view the API product subscriptions from 51-150, set the value of `startKey` to the name of the 51st subscription and set the value of `count` to 100."
																		},
																		{
																			"key": "count",
																			"value": "87452072",
																			"description": "Number of API product subscriptions to return in the API call. Use with `startKey` to provide more targeted filtering. Defaults to 100. The maximum limit is 1000."
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. Email address of the developer. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`"
																		},
																		{
																			"key": "developersId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Lists all API product subscriptions for a developer."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/subscriptions?startKey=labore quis Ut&count=87452072",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"developers",
																				":developersId",
																				"subscriptions"
																			],
																			"query": [
																				{
																					"key": "startKey",
																					"value": "labore quis Ut"
																				},
																				{
																					"key": "count",
																					"value": "87452072"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. Email address of the developer. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`"
																				},
																				{
																					"key": "developersId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														},
														{
															"name": "Expire Developer Subscription",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/subscriptions/{{subscriptionsId}}:expire",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"developers",
																		":developersId",
																		"subscriptions",
																		"{{subscriptionsId}}:expire"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the API product subscription. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/subscriptions/{subscription}`"
																		},
																		{
																			"key": "developersId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Expires an API product subscription immediately."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/subscriptions/{{subscriptionsId}}:expire",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"developers",
																				":developersId",
																				"subscriptions",
																				"{{subscriptionsId}}:expire"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the API product subscription. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/subscriptions/{subscription}`"
																				},
																				{
																					"key": "developersId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														},
														{
															"name": "Get Developer Subscription",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/subscriptions/:subscriptionsId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"developers",
																		":developersId",
																		"subscriptions",
																		":subscriptionsId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the API product subscription. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/subscriptions/{subscription}`"
																		},
																		{
																			"key": "developersId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		},
																		{
																			"key": "subscriptionsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Gets details for an API product subscription."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/subscriptions/:subscriptionsId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"developers",
																				":developersId",
																				"subscriptions",
																				":subscriptionsId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the API product subscription. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/subscriptions/{subscription}`"
																				},
																				{
																					"key": "developersId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "subscriptionsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														}
													]
												},
												{
													"name": "Get Developer",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId?action=labore quis Ut",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"developers",
																":developersId"
															],
															"query": [
																{
																	"key": "action",
																	"value": "labore quis Ut",
																	"description": "Status of the developer. Valid values are `active` or `inactive`."
																}
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Email address of the developer. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`"
																},
																{
																	"key": "developersId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Returns the developer details, including the developer's name, email address, apps, and other information. **Note**: The response includes only the first 100 developer apps."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId?action=labore quis Ut",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"developers",
																		":developersId"
																	],
																	"query": [
																		{
																			"key": "action",
																			"value": "labore quis Ut"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Email address of the developer. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`"
																		},
																		{
																			"key": "developersId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "Delete Developer",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"developers",
																":developersId"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Email address of the developer. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`"
																},
																{
																	"key": "developersId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Deletes a developer. All apps and API keys associated with the developer are also removed. **Warning**: This API will permanently delete the developer and related artifacts. To avoid permanently deleting developers and their artifacts, set the developer status to `inactive` using the SetDeveloperStatus API. **Note**: The delete operation is asynchronous. The developer app is deleted immediately, but its associated resources, such as apps and API keys, may take anywhere from a few seconds to a few minutes to be deleted."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"developers",
																		":developersId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Email address of the developer. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`"
																		},
																		{
																			"key": "developersId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "Update Developer",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"developerId\": \"commodo in dolore\",\n  \"companies\": [\n    \"enim incididunt\",\n    \"exercit\"\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"occaecat elit adipisicing commodo\",\n      \"value\": \"Lorem ullamco eu\"\n    },\n    {\n      \"name\": \"aliqua cupidatat repr\",\n      \"value\": \"cupidatat id commodo Duis\"\n    }\n  ],\n  \"email\": \"in cupidatat ut\",\n  \"firstName\": \"cillu\",\n  \"apps\": [\n    \"culpa dolore\",\n    \"dolor id\"\n  ],\n  \"lastName\": \"Excepteur sint irure minim\",\n  \"userName\": \"do elit\",\n  \"appFamily\": \"ipsum \",\n  \"accessType\": \"culpa consequat eiusmod\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"developers",
																":developersId"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Email address of the developer. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`"
																},
																{
																	"key": "developersId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Updates a developer. This API replaces the existing developer details with those specified in the request. Include or exclude any existing details that you want to retain or delete, respectively. The custom attribute limit is 18. **Note**: OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and API products) are cached for 180 seconds (current default). Any custom attributes associated with these entities are cached for at least 180 seconds after the entity is accessed at runtime. Therefore, an `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token in less than 180 seconds."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"developers",
																		":developersId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Email address of the developer. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`"
																		},
																		{
																			"key": "developersId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "Set Developer Status",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId?action=labore quis Ut",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"developers",
																":developersId"
															],
															"query": [
																{
																	"key": "action",
																	"value": "labore quis Ut",
																	"description": "Status of the developer. Valid values are `active` and `inactive`."
																}
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Name of the developer. Use the following structure in your request: `organizations/{org}/developers/{developer_id}`"
																},
																{
																	"key": "developersId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Sets the status of a developer. A developer is `active` by default. If you set a developer's status to `inactive`, the API keys assigned to the developer apps are no longer valid even though the API keys are set to `approved`. Inactive developers can still sign in to the developer portal and create apps; however, any new API keys generated during app creation won't work. To set the status of a developer, set the `action` query parameter to `active` or `inactive`, and the `Content-Type` header to `application/octet-stream`. If successful, the API call returns the following HTTP status code: `204 No Content`"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId?action=labore quis Ut",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"developers",
																		":developersId"
																	],
																	"query": [
																		{
																			"key": "action",
																			"value": "labore quis Ut"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the developer. Use the following structure in your request: `organizations/{org}/developers/{developer_id}`"
																		},
																		{
																			"key": "developersId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												},
												{
													"name": "Credit Developer Balance",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "null",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/balance:credit",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"developers",
																":developersId",
																"balance:credit"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Account balance for the developer. Use the following structure in your request: `organizations/{org}/developers/{developer}/balance`"
																},
																{
																	"key": "developersId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Credits the account balance for the developer."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "null",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/balance:credit",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"developers",
																		":developersId",
																		"balance:credit"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Account balance for the developer. Use the following structure in your request: `organizations/{org}/developers/{developer}/balance`"
																		},
																		{
																			"key": "developersId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "Adjust Developer Balance",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "null",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/balance:adjust",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"developers",
																":developersId",
																"balance:adjust"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Account balance for the developer. Use the following structure in your request: `organizations/{org}/developers/{developer}/balance`"
																},
																{
																	"key": "developersId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Adjust the prepaid balance for the developer. This API will be used in scenarios where the developer has been under-charged or over-charged."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "null",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/balance:adjust",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"developers",
																		":developersId",
																		"balance:adjust"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Account balance for the developer. Use the following structure in your request: `organizations/{org}/developers/{developer}/balance`"
																		},
																		{
																			"key": "developersId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "Get Developer Balance",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/balance",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"developers",
																":developersId",
																"balance"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Account balance for the developer. Use the following structure in your request: `organizations/{org}/developers/{developer}/balance`"
																},
																{
																	"key": "developersId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Gets the account balance for the developer."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers/:developersId/balance",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"developers",
																		":developersId",
																		"balance"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Account balance for the developer. Use the following structure in your request: `organizations/{org}/developers/{developer}/balance`"
																		},
																		{
																			"key": "developersId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												}
											]
										},
										{
											"name": "List Developers",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers?expand=true",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"developers"
													],
													"query": [
														{
															"key": "expand",
															"value": "true",
															"description": "Specifies whether to expand the results. Set to `true` to expand the results. This query parameter is not valid if you use the `count` or `startKey` query parameters."
														},
														{
															"key": "startKey",
															"value": "labore quis Ut",
															"description": "**Note**: Must be used in conjunction with the `count` parameter. Email address of the developer from which to start displaying the list of developers. For example, if the an unfiltered list returns: ``` westley@example.com fezzik@example.com buttercup@example.com ``` and your `startKey` is `fezzik@example.com`, the list returned will be ``` fezzik@example.com buttercup@example.com ```",
															"disabled": true
														},
														{
															"key": "count",
															"value": "",
															"description": "Optional. Number of developers to return in the API call. Use with the `startKey` parameter to provide more targeted filtering. The limit is 1000.",
															"disabled": true
														},
														{
															"key": "ids",
															"value": "labore quis Ut",
															"description": "Optional. List of IDs to include, separated by commas.",
															"disabled": true
														},
														{
															"key": "includeCompany",
															"value": "true",
															"description": "Flag that specifies whether to include company details in the response.",
															"disabled": true
														},
														{
															"key": "app",
															"value": "labore quis Ut",
															"description": "Optional. List only Developers that are associated with the app. Note that start_key, count are not applicable for this filter criteria.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `parent`. Required. Name of the Apigee organization. Use the following structure in your request: `organizations/{org}`."
														}
													]
												},
												"description": "Lists all developers in an organization by email address. By default, the response does not include company developers. Set the `includeCompany` query parameter to `true` to include company developers. **Note**: A maximum of 1000 developers are returned in the response. You paginate the list of developers returned using the `startKey` and `count` query parameters."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers?expand=true&startKey=labore quis Ut&count=&ids=labore quis Ut&includeCompany=true&app=labore quis Ut",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"developers"
															],
															"query": [
																{
																	"key": "expand",
																	"value": "true"
																},
																{
																	"key": "startKey",
																	"value": "labore quis Ut"
																},
																{
																	"key": "count",
																	"value": ""
																},
																{
																	"key": "ids",
																	"value": "labore quis Ut"
																},
																{
																	"key": "includeCompany",
																	"value": "true"
																},
																{
																	"key": "app",
																	"value": "labore quis Ut"
																}
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. Name of the Apigee organization. Use the following structure in your request: `organizations/{org}`."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "null"
												}
											]
										},
										{
											"name": "Create Developer",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"developerId\": \"commodo in dolore\",\n  \"companies\": [\n    \"enim incididunt\",\n    \"exercit\"\n  ],\n  \"attributes\": [\n    {\n      \"name\": \"occaecat elit adipisicing commodo\",\n      \"value\": \"Lorem ullamco eu\"\n    },\n    {\n      \"name\": \"aliqua cupidatat repr\",\n      \"value\": \"cupidatat id commodo Duis\"\n    }\n  ],\n  \"email\": \"in cupidatat ut\",\n  \"firstName\": \"cillu\",\n  \"apps\": [\n    \"culpa dolore\",\n    \"dolor id\"\n  ],\n  \"lastName\": \"Excepteur sint irure minim\",\n  \"userName\": \"do elit\",\n  \"appFamily\": \"ipsum \",\n  \"accessType\": \"culpa consequat eiusmod\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"developers"
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `parent`. Required. Name of the Apigee organization in which the developer is created. Use the following structure in your request: `organizations/{org}`."
														}
													]
												},
												"description": "Creates a developer. Once created, the developer can register an app and obtain an API key. At creation time, a developer is set as `active`. To change the developer status, use the SetDeveloperStatus API."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/developers",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"developers"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. Name of the Apigee organization in which the developer is created. Use the following structure in your request: `organizations/{org}`."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "null"
												}
											]
										}
									]
								},
								{
									"name": "apis",
									"item": [
										{
											"name": "{apisId}",
											"item": [
												{
													"name": "keyvaluemaps",
													"item": [
														{
															"name": "{keyvaluemapsId}",
															"item": [
																{
																	"name": "entries",
																	"item": [
																		{
																			"name": "{entriesId}",
																			"item": [
																				{
																					"name": "Get Key Value Entry2",
																					"request": {
																						"method": "GET",
																						"header": [
																							{
																								"key": "Accept",
																								"value": "*/*"
																							}
																						],
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apis/:apisId/keyvaluemaps/:keyvaluemapsId/entries/:entriesId",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"apis",
																								":apisId",
																								"keyvaluemaps",
																								":keyvaluemapsId",
																								"entries",
																								":entriesId"
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. Required. Scope as indicated by the URI in which to fetch the key value map entry/value. Use **one** of the following structures in your request: * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`. * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/{entry}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`."
																								},
																								{
																									"key": "apisId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "keyvaluemapsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "entriesId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								}
																							]
																						},
																						"description": "Get the key value entry value for a key value map scoped to an organization, environment, or API proxy. **Note**: Supported for Apigee hybrid 1.8.x and higher."
																					},
																					"response": [
																						{
																							"name": "Successful operation",
																							"originalRequest": {
																								"method": "GET",
																								"header": [],
																								"url": {
																									"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apis/:apisId/keyvaluemaps/:keyvaluemapsId/entries/:entriesId",
																									"host": [
																										"{{BASE_URL}}"
																									],
																									"path": [
																										"v1",
																										"organizations",
																										"{{ORG_ID}}",
																										"apis",
																										":apisId",
																										"keyvaluemaps",
																										":keyvaluemapsId",
																										"entries",
																										":entriesId"
																									],
																									"variable": [
																										{
																											"key": "organizationsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. Required. Scope as indicated by the URI in which to fetch the key value map entry/value. Use **one** of the following structures in your request: * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`. * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/{entry}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`."
																										},
																										{
																											"key": "apisId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "keyvaluemapsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "entriesId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										}
																									]
																								}
																							},
																							"status": "Internal Server Error",
																							"code": 500,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "*/*"
																								}
																							],
																							"cookie": [],
																							"body": "{\n  \"value\": \"anim deserunt id\",\n  \"name\": \"sit eiusmod lab\"\n}"
																						}
																					]
																				},
																				{
																					"name": "Delete Key Value Entry2",
																					"request": {
																						"method": "DELETE",
																						"header": [
																							{
																								"key": "Accept",
																								"value": "*/*"
																							}
																						],
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apis/:apisId/keyvaluemaps/:keyvaluemapsId/entries/:entriesId",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"apis",
																								":apisId",
																								"keyvaluemaps",
																								":keyvaluemapsId",
																								"entries",
																								":entriesId"
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. Required. Scope as indicated by the URI in which to delete the key value map entry. Use **one** of the following structures in your request: * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`. * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/{entry}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`."
																								},
																								{
																									"key": "apisId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "keyvaluemapsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "entriesId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																								}
																							]
																						},
																						"description": "Deletes a key value entry from a key value map scoped to an organization, environment, or API proxy. **Notes:** * After you delete the key value entry, the policy consuming the entry will continue to function with its cached values for a few minutes. This is expected behavior. * Supported for Apigee hybrid 1.8.x and higher."
																					},
																					"response": [
																						{
																							"name": "Successful operation",
																							"originalRequest": {
																								"method": "DELETE",
																								"header": [],
																								"url": {
																									"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apis/:apisId/keyvaluemaps/:keyvaluemapsId/entries/:entriesId",
																									"host": [
																										"{{BASE_URL}}"
																									],
																									"path": [
																										"v1",
																										"organizations",
																										"{{ORG_ID}}",
																										"apis",
																										":apisId",
																										"keyvaluemaps",
																										":keyvaluemapsId",
																										"entries",
																										":entriesId"
																									],
																									"variable": [
																										{
																											"key": "organizationsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. Required. Scope as indicated by the URI in which to delete the key value map entry. Use **one** of the following structures in your request: * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`. * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/{entry}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`."
																										},
																										{
																											"key": "apisId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "keyvaluemapsId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										},
																										{
																											"key": "entriesId",
																											"value": "labore quis Ut",
																											"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																										}
																									]
																								}
																							},
																							"status": "Internal Server Error",
																							"code": 500,
																							"_postman_previewlanguage": "json",
																							"header": [
																								{
																									"key": "Content-Type",
																									"value": "*/*"
																								}
																							],
																							"cookie": [],
																							"body": "{\n  \"value\": \"anim deserunt id\",\n  \"name\": \"sit eiusmod lab\"\n}"
																						}
																					]
																				}
																			]
																		},
																		{
																			"name": "List Key Value Entries2",
																			"request": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "*/*"
																					}
																				],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apis/:apisId/keyvaluemaps/:keyvaluemapsId/entries?pageSize=87452072&pageToken=labore quis Ut",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"apis",
																						":apisId",
																						"keyvaluemaps",
																						":keyvaluemapsId",
																						"entries"
																					],
																					"query": [
																						{
																							"key": "pageSize",
																							"value": "87452072",
																							"description": "Optional. Maximum number of key value entries to return. If unspecified, at most 100 entries will be returned."
																						},
																						{
																							"key": "pageToken",
																							"value": "labore quis Ut",
																							"description": "Optional. Page token. If provides, must be a valid key value entry returned from a previous call that can be used to retrieve the next page."
																						}
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. Required. Scope as indicated by the URI in which to list key value maps. Use **one** of the following structures in your request: * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`."
																						},
																						{
																							"key": "apisId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "keyvaluemapsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																						}
																					]
																				},
																				"description": "Lists key value entries for key values maps scoped to an organization, environment, or API proxy. **Note**: Supported for Apigee hybrid 1.8.x and higher."
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "GET",
																						"header": [],
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apis/:apisId/keyvaluemaps/:keyvaluemapsId/entries?pageSize=87452072&pageToken=labore quis Ut",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"apis",
																								":apisId",
																								"keyvaluemaps",
																								":keyvaluemapsId",
																								"entries"
																							],
																							"query": [
																								{
																									"key": "pageSize",
																									"value": "87452072"
																								},
																								{
																									"key": "pageToken",
																									"value": "labore quis Ut"
																								}
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. Required. Scope as indicated by the URI in which to list key value maps. Use **one** of the following structures in your request: * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`."
																								},
																								{
																									"key": "apisId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "keyvaluemapsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																								}
																							]
																						}
																					},
																					"status": "Internal Server Error",
																					"code": 500,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "*/*"
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"nextPageToken\": \"ullamco ipsum\",\n  \"keyValueEntries\": [\n    {\n      \"value\": \"sint in nostrud\",\n      \"name\": \"laborum\"\n    },\n    {\n      \"value\": \"nulla laborum\",\n      \"name\": \"consectetur laborum\"\n    }\n  ]\n}"
																				}
																			]
																		},
																		{
																			"name": "Create Key Value Entry2",
																			"request": {
																				"method": "POST",
																				"header": [
																					{
																						"key": "Content-Type",
																						"value": "application/json"
																					},
																					{
																						"key": "Accept",
																						"value": "*/*"
																					}
																				],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"value\": \"anim deserunt id\",\n  \"name\": \"sit eiusmod lab\"\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apis/:apisId/keyvaluemaps/:keyvaluemapsId/entries",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"apis",
																						":apisId",
																						"keyvaluemaps",
																						":keyvaluemapsId",
																						"entries"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. Required. Scope as indicated by the URI in which to create the key value map entry. Use **one** of the following structures in your request: * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`."
																						},
																						{
																							"key": "apisId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "keyvaluemapsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																						}
																					]
																				},
																				"description": "Creates key value entries in a key value map scoped to an organization, environment, or API proxy. **Note**: Supported for Apigee hybrid 1.8.x and higher."
																			},
																			"response": [
																				{
																					"name": "Successful operation",
																					"originalRequest": {
																						"method": "POST",
																						"header": [],
																						"url": {
																							"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apis/:apisId/keyvaluemaps/:keyvaluemapsId/entries",
																							"host": [
																								"{{BASE_URL}}"
																							],
																							"path": [
																								"v1",
																								"organizations",
																								"{{ORG_ID}}",
																								"apis",
																								":apisId",
																								"keyvaluemaps",
																								":keyvaluemapsId",
																								"entries"
																							],
																							"variable": [
																								{
																									"key": "organizationsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. Required. Scope as indicated by the URI in which to create the key value map entry. Use **one** of the following structures in your request: * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`."
																								},
																								{
																									"key": "apisId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																								},
																								{
																									"key": "keyvaluemapsId",
																									"value": "labore quis Ut",
																									"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																								}
																							]
																						}
																					},
																					"status": "Internal Server Error",
																					"code": 500,
																					"_postman_previewlanguage": "json",
																					"header": [
																						{
																							"key": "Content-Type",
																							"value": "*/*"
																						}
																					],
																					"cookie": [],
																					"body": "{\n  \"value\": \"anim deserunt id\",\n  \"name\": \"sit eiusmod lab\"\n}"
																				}
																			]
																		}
																	]
																},
																{
																	"name": "Delete Api Proxy Key Value Map",
																	"request": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apis/:apisId/keyvaluemaps/:keyvaluemapsId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"apis",
																				":apisId",
																				"keyvaluemaps",
																				":keyvaluemapsId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the key value map. Use the following structure in your request: `organizations/{org}/apis/{api}/keyvaluemaps/{keyvaluemap}`"
																				},
																				{
																					"key": "apisId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "keyvaluemapsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Deletes a key value map from an API proxy."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apis/:apisId/keyvaluemaps/:keyvaluemapsId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"apis",
																						":apisId",
																						"keyvaluemaps",
																						":keyvaluemapsId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the key value map. Use the following structure in your request: `organizations/{org}/apis/{api}/keyvaluemaps/{keyvaluemap}`"
																						},
																						{
																							"key": "apisId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "keyvaluemapsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"name\": \"de\",\n  \"encrypted\": false\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "Create Api Proxy Key Value Map",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"de\",\n  \"encrypted\": false\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apis/:apisId/keyvaluemaps",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"apis",
																		":apisId",
																		"keyvaluemaps"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. Name of the environment in which to create the key value map. Use the following structure in your request: `organizations/{org}/apis/{api}`"
																		},
																		{
																			"key": "apisId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Creates a key value map in an API proxy."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apis/:apisId/keyvaluemaps",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"apis",
																				":apisId",
																				"keyvaluemaps"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. Name of the environment in which to create the key value map. Use the following structure in your request: `organizations/{org}/apis/{api}`"
																				},
																				{
																					"key": "apisId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"name\": \"de\",\n  \"encrypted\": false\n}"
																}
															]
														}
													]
												},
												{
													"name": "revisions/{revisionsId}",
													"item": [
														{
															"name": "Get Api Proxy Revision",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apis/:apisId/revisions/:revisionsId?format=labore quis Ut",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"apis",
																		":apisId",
																		"revisions",
																		":revisionsId"
																	],
																	"query": [
																		{
																			"key": "format",
																			"value": "labore quis Ut",
																			"description": "Format used when downloading the API proxy configuration revision. Set to `bundle` to download the API proxy configuration revision as a zip file."
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. API proxy revision in the following format: `organizations/{org}/apis/{api}/revisions/{rev}`"
																		},
																		{
																			"key": "apisId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		},
																		{
																			"key": "revisionsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Gets an API proxy revision. To download the API proxy configuration bundle for the specified revision as a zip file, set the `format` query parameter to `bundle`. If you are using curl, specify `-o filename.zip` to save the output to a file; otherwise, it displays to `stdout`. Then, develop the API proxy configuration locally and upload the updated API proxy configuration revision, as described in [updateApiProxyRevision](updateApiProxyRevision)."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apis/:apisId/revisions/:revisionsId?format=labore quis Ut",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"apis",
																				":apisId",
																				"revisions",
																				":revisionsId"
																			],
																			"query": [
																				{
																					"key": "format",
																					"value": "labore quis Ut"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. API proxy revision in the following format: `organizations/{org}/apis/{api}/revisions/{rev}`"
																				},
																				{
																					"key": "apisId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "revisionsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														},
														{
															"name": "Update Api Proxy Revision",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "null",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apis/:apisId/revisions/:revisionsId?validate=true",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"apis",
																		":apisId",
																		"revisions",
																		":revisionsId"
																	],
																	"query": [
																		{
																			"key": "validate",
																			"value": "true",
																			"description": "Ignored. All uploads are validated regardless of the value of this field. Maintained for compatibility with Apigee Edge API."
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. API proxy revision to update in the following format: `organizations/{org}/apis/{api}/revisions/{rev}`"
																		},
																		{
																			"key": "apisId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		},
																		{
																			"key": "revisionsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Updates an existing API proxy revision by uploading the API proxy configuration bundle as a zip file from your local machine. You can update only API proxy revisions that have never been deployed. After deployment, an API proxy revision becomes immutable, even if it is undeployed. Set the `Content-Type` header to either `multipart/form-data` or `application/octet-stream`."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "null",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apis/:apisId/revisions/:revisionsId?validate=true",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"apis",
																				":apisId",
																				"revisions",
																				":revisionsId"
																			],
																			"query": [
																				{
																					"key": "validate",
																					"value": "true"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. API proxy revision to update in the following format: `organizations/{org}/apis/{api}/revisions/{rev}`"
																				},
																				{
																					"key": "apisId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "revisionsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														},
														{
															"name": "Delete Api Proxy Revision",
															"request": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apis/:apisId/revisions/:revisionsId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"apis",
																		":apisId",
																		"revisions",
																		":revisionsId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. API proxy revision in the following format: `organizations/{org}/apis/{api}/revisions/{rev}`"
																		},
																		{
																			"key": "apisId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		},
																		{
																			"key": "revisionsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Deletes an API proxy revision and all policies, resources, endpoints, and revisions associated with it. The API proxy revision must be undeployed before you can delete it."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apis/:apisId/revisions/:revisionsId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"apis",
																				":apisId",
																				"revisions",
																				":revisionsId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. API proxy revision in the following format: `organizations/{org}/apis/{api}/revisions/{rev}`"
																				},
																				{
																					"key": "apisId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "revisionsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														},
														{
															"name": "List Api Revision Deployments",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apis/:apisId/revisions/:revisionsId/deployments",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"apis",
																		":apisId",
																		"revisions",
																		":revisionsId",
																		"deployments"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. Name of the API proxy revision for which to return deployment information in the following format: `organizations/{org}/apis/{api}/revisions/{rev}`."
																		},
																		{
																			"key": "apisId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		},
																		{
																			"key": "revisionsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Lists all deployments of an API proxy revision."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apis/:apisId/revisions/:revisionsId/deployments",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"apis",
																				":apisId",
																				"revisions",
																				":revisionsId",
																				"deployments"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. Name of the API proxy revision for which to return deployment information in the following format: `organizations/{org}/apis/{api}/revisions/{rev}`."
																				},
																				{
																					"key": "apisId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "revisionsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														}
													]
												},
												{
													"name": "Delete Api Proxy",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apis/:apisId",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"apis",
																":apisId"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Name of the API proxy in the following format: `organizations/{org}/apis/{api}`"
																},
																{
																	"key": "apisId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Deletes an API proxy and all associated endpoints, policies, resources, and revisions. The API proxy must be undeployed before you can delete it."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apis/:apisId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"apis",
																		":apisId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the API proxy in the following format: `organizations/{org}/apis/{api}`"
																		},
																		{
																			"key": "apisId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "Get Api Proxy",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apis/:apisId",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"apis",
																":apisId"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Name of the API proxy in the following format: `organizations/{org}/apis/{api}`"
																},
																{
																	"key": "apisId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Gets an API proxy including a list of existing revisions."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apis/:apisId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"apis",
																		":apisId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the API proxy in the following format: `organizations/{org}/apis/{api}`"
																		},
																		{
																			"key": "apisId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "Update Api Proxy",
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "null",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apis/:apisId?updateMask=labore quis Ut",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"apis",
																":apisId"
															],
															"query": [
																{
																	"key": "updateMask",
																	"value": "labore quis Ut",
																	"description": "Required. The list of fields to update."
																}
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. API proxy to update in the following format: `organizations/{org}/apis/{api}`"
																},
																{
																	"key": "apisId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Updates an existing API proxy."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PATCH",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "null",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apis/:apisId?updateMask=labore quis Ut",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"apis",
																		":apisId"
																	],
																	"query": [
																		{
																			"key": "updateMask",
																			"value": "labore quis Ut"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. API proxy to update in the following format: `organizations/{org}/apis/{api}`"
																		},
																		{
																			"key": "apisId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "List Api Deployments",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apis/:apisId/deployments",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"apis",
																":apisId",
																"deployments"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. Name of the API proxy for which to return deployment information in the following format: `organizations/{org}/apis/{api}`"
																},
																{
																	"key": "apisId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Lists all deployments of an API proxy."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apis/:apisId/deployments",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"apis",
																		":apisId",
																		"deployments"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. Name of the API proxy for which to return deployment information in the following format: `organizations/{org}/apis/{api}`"
																		},
																		{
																			"key": "apisId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												}
											]
										},
										{
											"name": "Create Api Proxy Revision",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "null",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apis?name=labore quis Ut&action=labore quis Ut&validate=true",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"apis"
													],
													"query": [
														{
															"key": "name",
															"value": "labore quis Ut",
															"description": "Name of the API proxy. Restrict the characters used to: A-Za-z0-9._-"
														},
														{
															"key": "action",
															"value": "labore quis Ut",
															"description": "Action to perform when importing an API proxy configuration bundle. Set this parameter to one of the following values: * `import` to import the API proxy configuration bundle. * `validate` to validate the API proxy configuration bundle without importing it."
														},
														{
															"key": "validate",
															"value": "true",
															"description": "Ignored. All uploads are validated regardless of the value of this field. Maintained for compatibility with Apigee Edge API."
														}
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `parent`. Required. Name of the organization in the following format: `organizations/{org}`"
														}
													]
												},
												"description": "Creates an API proxy. The API proxy created will not be accessible at runtime until it is deployed to an environment. Create a new API proxy by setting the `name` query parameter to the name of the API proxy. Import an API proxy configuration bundle stored in zip format on your local machine to your organization by doing the following: * Set the `name` query parameter to the name of the API proxy. * Set the `action` query parameter to `import`. * Set the `Content-Type` header to `multipart/form-data`. * Pass as a file the name of API proxy configuration bundle stored in zip format on your local machine using the `file` form field. **Note**: To validate the API proxy configuration bundle only without importing it, set the `action` query parameter to `validate`. When importing an API proxy configuration bundle, if the API proxy does not exist, it will be created. If the API proxy exists, then a new revision is created. Invalid API proxy configurations are rejected, and a list of validation errors is returned to the client."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "null",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apis?name=labore quis Ut&action=labore quis Ut&validate=true",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"apis"
															],
															"query": [
																{
																	"key": "name",
																	"value": "labore quis Ut"
																},
																{
																	"key": "action",
																	"value": "labore quis Ut"
																},
																{
																	"key": "validate",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. Name of the organization in the following format: `organizations/{org}`"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "null"
												}
											]
										},
										{
											"name": "List Api Proxies",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apis?includeMetaData=true",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"apis"
													],
													"query": [
														{
															"key": "includeRevisions",
															"value": "true",
															"description": "Flag that specifies whether to include a list of revisions in the response.",
															"disabled": true
														},
														{
															"key": "includeMetaData",
															"value": "true",
															"description": "Flag that specifies whether to include API proxy metadata in the response."
														}
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `parent`. Required. Name of the organization in the following format: `organizations/{org}`"
														}
													]
												},
												"description": "Lists the names of all API proxies in an organization. The names returned correspond to the names defined in the configuration files for each API proxy."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apis?includeRevisions=true&includeMetaData=true",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"apis"
															],
															"query": [
																{
																	"key": "includeRevisions",
																	"value": "true"
																},
																{
																	"key": "includeMetaData",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. Name of the organization in the following format: `organizations/{org}`"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{\n  \"proxies\": [\n    {\n      \"readOnly\": false,\n      \"labels\": {\n        \"occaecat_f\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dolore_09_\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"metaData\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"apiProxyType\": \"CONFIGURABLE\",\n      \"latestRevisionId\": \"commodo cillum\",\n      \"revision\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"name\": \"a\"\n    },\n    {\n      \"readOnly\": true,\n      \"labels\": {\n        \"proident6cb\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"metaData\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"apiProxyType\": \"API_PROXY_TYPE_UNSPECIFIED\",\n      \"latestRevisionId\": \"commodo\",\n      \"revision\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"name\": \"ipsum\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "sites/{sitesId}/apicategories",
									"item": [
										{
											"name": "{apicategoriesId}",
											"item": [
												{
													"name": "Update Api Category",
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "null",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/sites/:sitesId/apicategories/:apicategoriesId",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"sites",
																":sitesId",
																"apicategories",
																":apicategoriesId"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Name of the category. Use the following structure in your request: `organizations/{org}/sites/{site}/apicategories/{apicategory}`"
																},
																{
																	"key": "sitesId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																},
																{
																	"key": "apicategoriesId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Updates a category on the portal."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PATCH",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "null",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/sites/:sitesId/apicategories/:apicategoriesId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"sites",
																		":sitesId",
																		"apicategories",
																		":apicategoriesId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the category. Use the following structure in your request: `organizations/{org}/sites/{site}/apicategories/{apicategory}`"
																		},
																		{
																			"key": "sitesId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		},
																		{
																			"key": "apicategoriesId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "Get Api Category",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/sites/:sitesId/apicategories/:apicategoriesId",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"sites",
																":sitesId",
																"apicategories",
																":apicategoriesId"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Name of the category. Use the following structure in your request: `organizations/{org}/sites/{site}/apicategories/{apicategory}`"
																},
																{
																	"key": "sitesId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																},
																{
																	"key": "apicategoriesId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Gets a category on the portal."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/sites/:sitesId/apicategories/:apicategoriesId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"sites",
																		":sitesId",
																		"apicategories",
																		":apicategoriesId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the category. Use the following structure in your request: `organizations/{org}/sites/{site}/apicategories/{apicategory}`"
																		},
																		{
																			"key": "sitesId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		},
																		{
																			"key": "apicategoriesId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "Delete Api Category",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/sites/:sitesId/apicategories/:apicategoriesId",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"sites",
																":sitesId",
																"apicategories",
																":apicategoriesId"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Name of the category. Use the following structure in your request: `organizations/{org}/sites/{site}/apicategories/{apicategory}`"
																},
																{
																	"key": "sitesId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																},
																{
																	"key": "apicategoriesId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Deletes a category from the portal."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/sites/:sitesId/apicategories/:apicategoriesId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"sites",
																		":sitesId",
																		"apicategories",
																		":apicategoriesId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the category. Use the following structure in your request: `organizations/{org}/sites/{site}/apicategories/{apicategory}`"
																		},
																		{
																			"key": "sitesId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		},
																		{
																			"key": "apicategoriesId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"laboris nulla sit\",\n  \"requestId\": \"dolore adi\",\n  \"status\": \"minim sit sint deserunt proident\",\n  \"errorCode\": \"enim ut\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "List Api Categories",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/sites/:sitesId/apicategories",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"sites",
														":sitesId",
														"apicategories"
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `parent`. Required. Name of the portal. Use the following structure in your request: `organizations/{org}/sites/{site}`"
														},
														{
															"key": "sitesId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
														}
													]
												},
												"description": "Lists the categories on the portal."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/sites/:sitesId/apicategories",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"sites",
																":sitesId",
																"apicategories"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. Name of the portal. Use the following structure in your request: `organizations/{org}/sites/{site}`"
																},
																{
																	"key": "sitesId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "null"
												}
											]
										},
										{
											"name": "Create Api Category",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "null",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/sites/:sitesId/apicategories",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"sites",
														":sitesId",
														"apicategories"
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `parent`. Required. Name of the portal. Use the following structure in your request: `organizations/{org}/sites/{site}`"
														},
														{
															"key": "sitesId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
														}
													]
												},
												"description": "Creates a new category on the portal."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "null",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/sites/:sitesId/apicategories",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"sites",
																":sitesId",
																"apicategories"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. Name of the portal. Use the following structure in your request: `organizations/{org}/sites/{site}`"
																},
																{
																	"key": "sitesId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "null"
												}
											]
										}
									]
								},
								{
									"name": "apiproducts",
									"item": [
										{
											"name": "{apiproductsId}",
											"item": [
												{
													"name": "rateplans",
													"item": [
														{
															"name": "{rateplansId}",
															"item": [
																{
																	"name": "Get Rate Plan",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apiproducts/:apiproductsId/rateplans/:rateplansId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"apiproducts",
																				":apiproductsId",
																				"rateplans",
																				":rateplansId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the rate plan. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}/rateplans/{rateplan}`"
																				},
																				{
																					"key": "apiproductsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "rateplansId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Gets the details of a rate plan."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apiproducts/:apiproductsId/rateplans/:rateplansId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"apiproducts",
																						":apiproductsId",
																						"rateplans",
																						":rateplansId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the rate plan. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}/rateplans/{rateplan}`"
																						},
																						{
																							"key": "apiproductsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "rateplansId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "null"
																		}
																	]
																},
																{
																	"name": "Update Rate Plan",
																	"request": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "null",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apiproducts/:apiproductsId/rateplans/:rateplansId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"apiproducts",
																				":apiproductsId",
																				"rateplans",
																				":rateplansId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the rate plan. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}/rateplans/{rateplan}`"
																				},
																				{
																					"key": "apiproductsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "rateplansId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Updates an existing rate plan."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [],
																				"body": {
																					"mode": "raw",
																					"raw": "null",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apiproducts/:apiproductsId/rateplans/:rateplansId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"apiproducts",
																						":apiproductsId",
																						"rateplans",
																						":rateplansId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the rate plan. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}/rateplans/{rateplan}`"
																						},
																						{
																							"key": "apiproductsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "rateplansId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "null"
																		}
																	]
																},
																{
																	"name": "Delete Rate Plan",
																	"request": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apiproducts/:apiproductsId/rateplans/:rateplansId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"apiproducts",
																				":apiproductsId",
																				"rateplans",
																				":rateplansId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. ID of the rate plan. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}/rateplans/{rateplan}`"
																				},
																				{
																					"key": "apiproductsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "rateplansId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Deletes a rate plan."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apiproducts/:apiproductsId/rateplans/:rateplansId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"apiproducts",
																						":apiproductsId",
																						"rateplans",
																						":rateplansId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. ID of the rate plan. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}/rateplans/{rateplan}`"
																						},
																						{
																							"key": "apiproductsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "rateplansId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "null"
																		}
																	]
																}
															]
														},
														{
															"name": "List Rate Plans",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apiproducts/:apiproductsId/rateplans?orderBy=labore quis Ut&startKey=labore quis Ut&count=87452072&expand=true&state=DRAFT",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"apiproducts",
																		":apiproductsId",
																		"rateplans"
																	],
																	"query": [
																		{
																			"key": "orderBy",
																			"value": "labore quis Ut",
																			"description": "Name of the attribute used for sorting. Valid values include: * `name`: Name of the rate plan. * `state`: State of the rate plan (`DRAFT`, `PUBLISHED`). * `startTime`: Time when the rate plan becomes active. * `endTime`: Time when the rate plan expires. **Note**: Not supported by Apigee at this time."
																		},
																		{
																			"key": "startKey",
																			"value": "labore quis Ut",
																			"description": "Name of the rate plan from which to start displaying the list of rate plans. If omitted, the list starts from the first item. For example, to view the rate plans from 51-150, set the value of `startKey` to the name of the 51st rate plan and set the value of `count` to 100."
																		},
																		{
																			"key": "count",
																			"value": "87452072",
																			"description": "Number of rate plans to return in the API call. Use with the `startKey` parameter to provide more targeted filtering. The maximum limit is 1000. Defaults to 100."
																		},
																		{
																			"key": "expand",
																			"value": "true",
																			"description": "Flag that specifies whether to expand the results. Set to `true` to get expanded details about each API. Defaults to `false`."
																		},
																		{
																			"key": "state",
																			"value": "DRAFT",
																			"description": "State of the rate plans (`DRAFT`, `PUBLISHED`) that you want to display."
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. Name of the API product. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}` Use `organizations/{org}/apiproducts/-` to return rate plans for all API products within the organization."
																		},
																		{
																			"key": "apiproductsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Lists all the rate plans for an API product."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apiproducts/:apiproductsId/rateplans?orderBy=labore quis Ut&startKey=labore quis Ut&count=87452072&expand=true&state=DRAFT",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"apiproducts",
																				":apiproductsId",
																				"rateplans"
																			],
																			"query": [
																				{
																					"key": "orderBy",
																					"value": "labore quis Ut"
																				},
																				{
																					"key": "startKey",
																					"value": "labore quis Ut"
																				},
																				{
																					"key": "count",
																					"value": "87452072"
																				},
																				{
																					"key": "expand",
																					"value": "true"
																				},
																				{
																					"key": "state",
																					"value": "DRAFT"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. Name of the API product. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}` Use `organizations/{org}/apiproducts/-` to return rate plans for all API products within the organization."
																				},
																				{
																					"key": "apiproductsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														},
														{
															"name": "Create Rate Plan",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "null",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apiproducts/:apiproductsId/rateplans",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"apiproducts",
																		":apiproductsId",
																		"rateplans"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. Name of the API product that is associated with the rate plan. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}`"
																		},
																		{
																			"key": "apiproductsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Create a rate plan that is associated with an API product in an organization. Using rate plans, API product owners can monetize their API products by configuring one or more of the following: - Billing frequency - Initial setup fees for using an API product - Payment funding model (postpaid only) - Fixed recurring or consumption-based charges for using an API product - Revenue sharing with developer partners An API product can have multiple rate plans associated with it but *only one* rate plan can be active at any point of time. **Note: From the developer's perspective, they purchase API products not rate plans."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "null",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apiproducts/:apiproductsId/rateplans",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"apiproducts",
																				":apiproductsId",
																				"rateplans"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. Name of the API product that is associated with the rate plan. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}`"
																				},
																				{
																					"key": "apiproductsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														}
													]
												},
												{
													"name": "attributes",
													"item": [
														{
															"name": "{attributesId}",
															"item": [
																{
																	"name": "Get Api Product Attribute",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apiproducts/:apiproductsId/attributes/:attributesId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"apiproducts",
																				":apiproductsId",
																				"attributes",
																				":attributesId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the API product attribute. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}/attributes/{attribute}`"
																				},
																				{
																					"key": "apiproductsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "attributesId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Gets the value of an API product attribute."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apiproducts/:apiproductsId/attributes/:attributesId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"apiproducts",
																						":apiproductsId",
																						"attributes",
																						":attributesId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the API product attribute. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}/attributes/{attribute}`"
																						},
																						{
																							"key": "apiproductsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "attributesId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"name\": \"consequat laboris nisi ut\",\n  \"value\": \"nostrud adipisicing\"\n}"
																		}
																	]
																},
																{
																	"name": "Update Api Product Attribute",
																	"request": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/json"
																			},
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"name\": \"consequat laboris nisi ut\",\n  \"value\": \"nostrud adipisicing\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apiproducts/:apiproductsId/attributes/:attributesId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"apiproducts",
																				":apiproductsId",
																				"attributes",
																				":attributesId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the API product. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}`"
																				},
																				{
																					"key": "apiproductsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "attributesId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Updates the value of an API product attribute. **Note**: OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and API products) are cached for 180 seconds (current default). Any custom attributes associated with entities also get cached for at least 180 seconds after entity is accessed during runtime. In this case, the `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token in less than 180 seconds."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "POST",
																				"header": [],
																				"body": {
																					"mode": "raw",
																					"raw": "{\n  \"name\": \"consequat laboris nisi ut\",\n  \"value\": \"nostrud adipisicing\"\n}",
																					"options": {
																						"raw": {
																							"language": "json"
																						}
																					}
																				},
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apiproducts/:apiproductsId/attributes/:attributesId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"apiproducts",
																						":apiproductsId",
																						"attributes",
																						":attributesId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the API product. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}`"
																						},
																						{
																							"key": "apiproductsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "attributesId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"name\": \"consequat laboris nisi ut\",\n  \"value\": \"nostrud adipisicing\"\n}"
																		}
																	]
																},
																{
																	"name": "Delete Api Product Attribute",
																	"request": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apiproducts/:apiproductsId/attributes/:attributesId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"apiproducts",
																				":apiproductsId",
																				"attributes",
																				":attributesId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the API product attribute. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}/attributes/{attribute}`"
																				},
																				{
																					"key": "apiproductsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "attributesId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Deletes an API product attribute."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apiproducts/:apiproductsId/attributes/:attributesId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"apiproducts",
																						":apiproductsId",
																						"attributes",
																						":attributesId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the API product attribute. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}/attributes/{attribute}`"
																						},
																						{
																							"key": "apiproductsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "attributesId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"name\": \"consequat laboris nisi ut\",\n  \"value\": \"nostrud adipisicing\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "List Api Product Attributes",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apiproducts/:apiproductsId/attributes",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"apiproducts",
																		":apiproductsId",
																		"attributes"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. Name of the API product. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}`"
																		},
																		{
																			"key": "apiproductsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Lists all API product attributes."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apiproducts/:apiproductsId/attributes",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"apiproducts",
																				":apiproductsId",
																				"attributes"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. Name of the API product. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}`"
																				},
																				{
																					"key": "apiproductsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"attribute\": [\n    {\n      \"name\": \"ut esse incididunt velit\",\n      \"value\": \"culpa mollit magna Ut\"\n    },\n    {\n      \"name\": \"laborum nostrud\",\n      \"value\": \"Excepteur ullamco consequa\"\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Update Api Product Attributes",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"attribute\": [\n    {\n      \"name\": \"ut esse incididunt velit\",\n      \"value\": \"culpa mollit magna Ut\"\n    },\n    {\n      \"name\": \"laborum nostrud\",\n      \"value\": \"Excepteur ullamco consequa\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apiproducts/:apiproductsId/attributes",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"apiproducts",
																		":apiproductsId",
																		"attributes"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the API product. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}`"
																		},
																		{
																			"key": "apiproductsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Updates or creates API product attributes. This API **replaces** the current list of attributes with the attributes specified in the request body. In this way, you can update existing attributes, add new attributes, or delete existing attributes by omitting them from the request body. **Note**: OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and API products) are cached for 180 seconds (current default). Any custom attributes associated with entities also get cached for at least 180 seconds after entity is accessed during runtime. In this case, the `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token in less than 180 seconds."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"attribute\": [\n    {\n      \"name\": \"ut esse incididunt velit\",\n      \"value\": \"culpa mollit magna Ut\"\n    },\n    {\n      \"name\": \"laborum nostrud\",\n      \"value\": \"Excepteur ullamco consequa\"\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apiproducts/:apiproductsId/attributes",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"apiproducts",
																				":apiproductsId",
																				"attributes"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the API product. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}`"
																				},
																				{
																					"key": "apiproductsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"attribute\": [\n    {\n      \"name\": \"ut esse incididunt velit\",\n      \"value\": \"culpa mollit magna Ut\"\n    },\n    {\n      \"name\": \"laborum nostrud\",\n      \"value\": \"Excepteur ullamco consequa\"\n    }\n  ]\n}"
																}
															]
														}
													]
												},
												{
													"name": "Update Api Product",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "null",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apiproducts/:apiproductsId",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"apiproducts",
																":apiproductsId"
															],
															"variable": [
																{
																	"key": "apiproductsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Updates an existing API product. You must include all required values, whether or not you are updating them, as well as any optional values that you are updating. The API product name required in the request URL is the internal name of the product, not the display name. While they may be the same, it depends on whether the API product was created via UI or API. View the list of API products to identify their internal names."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "null",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apiproducts/:apiproductsId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"apiproducts",
																		":apiproductsId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the API product. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}`"
																		},
																		{
																			"key": "apiproductsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "Get Api Product",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apiproducts/:apiproductsId",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"apiproducts",
																":apiproductsId"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Name of the API product. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}`"
																},
																{
																	"key": "apiproductsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Gets configuration details for an API product. The API product name required in the request URL is the internal name of the product, not the display name. While they may be the same, it depends on whether the API product was created via the UI or the API. View the list of API products to verify the internal name."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apiproducts/:apiproductsId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"apiproducts",
																		":apiproductsId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the API product. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}`"
																		},
																		{
																			"key": "apiproductsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "Delete Api Product",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apiproducts/:apiproductsId",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"apiproducts",
																":apiproductsId"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Name of the API product. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}`"
																},
																{
																	"key": "apiproductsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Deletes an API product from an organization. Deleting an API product causes app requests to the resource URIs defined in the API product to fail. Ensure that you create a new API product to serve existing apps, unless your intention is to disable access to the resources defined in the API product. The API product name required in the request URL is the internal name of the product, not the display name. While they may be the same, it depends on whether the API product was created via the UI or the API. View the list of API products to verify the internal name."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apiproducts/:apiproductsId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"apiproducts",
																		":apiproductsId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the API product. Use the following structure in your request: `organizations/{org}/apiproducts/{apiproduct}`"
																		},
																		{
																			"key": "apiproductsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												}
											]
										},
										{
											"name": "Create Api Product",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"apiResources\": [\r\n    \"/\"\r\n  ],\r\n  \"approvalType\": \"auto\",\r\n  \"attributes\": [\r\n    {\r\n      \"name\": \"access\",\r\n      \"value\": \"public\"\r\n    }\r\n  ],\r\n  \"description\": \"My API product\",\r\n  \"displayName\": \"My API product\",\r\n  \"environments\": [\r\n    \"dev\"\r\n  ],\r\n  \"name\": \"myapiproduct\",\r\n  \"proxies\": [\r\n      \"oauth\"\r\n  ],\r\n  \"scopes\": []\r\n}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apiproducts",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"apiproducts"
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `parent`. Required. Name of the organization in which the API product will be created. Use the following structure in your request: `organizations/{org}`"
														}
													]
												},
												"description": "Creates an API product in an organization. You create API products after you have proxied backend services using API proxies. An API product is a collection of API resources combined with quota settings and metadata that you can use to deliver customized and productized API bundles to your developer community. This metadata can include: - Scope - Environments - API proxies - Extensible profile API products enable you repackage APIs on the fly, without having to do any additional coding or configuration. Apigee recommends that you start with a simple API product including only required elements. You then provision credentials to apps to enable them to start testing your APIs. After you have authentication and authorization working against a simple API product, you can iterate to create finer-grained API products, defining different sets of API resources for each API product. **WARNING:** - If you don't specify an API proxy in the request body, *any* app associated with the product can make calls to *any* API in your entire organization. - If you don't specify an environment in the request body, the product allows access to all environments. For more information, see What is an API product?"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "null",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apiproducts",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"apiproducts"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. Name of the organization in which the API product will be created. Use the following structure in your request: `organizations/{org}`"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "null"
												}
											]
										},
										{
											"name": "List Api Products",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apiproducts?expand=true",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"apiproducts"
													],
													"query": [
														{
															"key": "attributename",
															"value": "labore quis Ut",
															"description": "Name of the attribute used to filter the search.",
															"disabled": true
														},
														{
															"key": "attributevalue",
															"value": "labore quis Ut",
															"description": "Value of the attribute used to filter the search.",
															"disabled": true
														},
														{
															"key": "expand",
															"value": "true",
															"description": "Flag that specifies whether to expand the results. Set to `true` to get expanded details about each API."
														},
														{
															"key": "startKey",
															"value": "labore quis Ut",
															"description": "Gets a list of API products starting with a specific API product in the list. For example, if you're returning 50 API products at a time (using the `count` query parameter), you can view products 50-99 by entering the name of the 50th API product in the first API (without using `startKey`). Product name is case sensitive.",
															"disabled": true
														},
														{
															"key": "count",
															"value": "",
															"description": "Enter the number of API products you want returned in the API call. The limit is 1000.",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `parent`. Required. Name of the organization. Use the following structure in your request: `organizations/{org}`"
														}
													]
												},
												"description": "Lists all API product names for an organization. Filter the list by passing an `attributename` and `attibutevalue`. The maximum number of API products returned is 1000. You can paginate the list of API products returned using the `startKey` and `count` query parameters."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apiproducts?attributename=labore quis Ut&attributevalue=labore quis Ut&expand=true&startKey=labore quis Ut&count=",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"apiproducts"
															],
															"query": [
																{
																	"key": "attributename",
																	"value": "labore quis Ut"
																},
																{
																	"key": "attributevalue",
																	"value": "labore quis Ut"
																},
																{
																	"key": "expand",
																	"value": "true"
																},
																{
																	"key": "startKey",
																	"value": "labore quis Ut"
																},
																{
																	"key": "count",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. Name of the organization. Use the following structure in your request: `organizations/{org}`"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "null"
												}
											]
										}
									]
								},
								{
									"name": "reports",
									"item": [
										{
											"name": "{reportsId}",
											"item": [
												{
													"name": "Delete Custom Report",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/reports/:reportsId",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"reports",
																":reportsId"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Custom Report name of the form: `organizations/{organization_id}/reports/{report_name}`"
																},
																{
																	"key": "reportsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Deletes an existing custom report definition"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/reports/:reportsId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"reports",
																		":reportsId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Custom Report name of the form: `organizations/{organization_id}/reports/{report_name}`"
																		},
																		{
																			"key": "reportsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"ut aliquip est\"\n}"
														}
													]
												},
												{
													"name": "Update Custom Report",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"offset\": \"esse labore\",\n  \"timeUnit\": \"occaecat aute exercitation nisi pariatur\",\n  \"comments\": [\n    \"non ullamco\",\n    \"irure\"\n  ],\n  \"dimensions\": [\n    \"mollit commodo enim\",\n    \"aliquip consectetur elit pariatur\"\n  ],\n  \"sortOrder\": \"eu voluptate\",\n  \"toTime\": \"veniam aliqua consequat\",\n  \"fromTime\": \"non adipisicing\",\n  \"name\": \"sint Excepteur velit ullamco sit\",\n  \"limit\": \"quis commodo\",\n  \"sortByCols\": [\n    \"exercitation\",\n    \"cillum incididunt laboris culpa\"\n  ],\n  \"chartType\": \"nulla\",\n  \"displayName\": \"anim exe\",\n  \"properties\": [\n    {\n      \"value\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"property\": \"dolor ut\"\n    },\n    {\n      \"value\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"property\": \"laboris labore tempor fugiat\"\n    }\n  ],\n  \"topk\": \"ullamco eu proident irure\",\n  \"filter\": \"adipisicing minim anim\",\n  \"metrics\": [\n    {\n      \"function\": \"laborum nisi incididunt ipsum\",\n      \"name\": \"enim elit do\"\n    },\n    {\n      \"function\": \"Lorem minim deserun\",\n      \"name\": \"labore irure enim voluptate\"\n    }\n  ],\n  \"tags\": [\n    \"nulla qui est cul\",\n    \"deserunt incididunt\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/reports/:reportsId",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"reports",
																":reportsId"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Custom Report name of the form: `organizations/{organization_id}/reports/{report_name}`"
																},
																{
																	"key": "reportsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Update an existing custom report definition"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"offset\": \"esse labore\",\n  \"timeUnit\": \"occaecat aute exercitation nisi pariatur\",\n  \"comments\": [\n    \"non ullamco\",\n    \"irure\"\n  ],\n  \"dimensions\": [\n    \"mollit commodo enim\",\n    \"aliquip consectetur elit pariatur\"\n  ],\n  \"sortOrder\": \"eu voluptate\",\n  \"toTime\": \"veniam aliqua consequat\",\n  \"fromTime\": \"non adipisicing\",\n  \"name\": \"sint Excepteur velit ullamco sit\",\n  \"limit\": \"quis commodo\",\n  \"sortByCols\": [\n    \"exercitation\",\n    \"cillum incididunt laboris culpa\"\n  ],\n  \"chartType\": \"nulla\",\n  \"displayName\": \"anim exe\",\n  \"properties\": [\n    {\n      \"value\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"property\": \"dolor ut\"\n    },\n    {\n      \"value\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"property\": \"laboris labore tempor fugiat\"\n    }\n  ],\n  \"topk\": \"ullamco eu proident irure\",\n  \"filter\": \"adipisicing minim anim\",\n  \"metrics\": [\n    {\n      \"function\": \"laborum nisi incididunt ipsum\",\n      \"name\": \"enim elit do\"\n    },\n    {\n      \"function\": \"Lorem minim deserun\",\n      \"name\": \"labore irure enim voluptate\"\n    }\n  ],\n  \"tags\": [\n    \"nulla qui est cul\",\n    \"deserunt incididunt\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/reports/:reportsId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"reports",
																		":reportsId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Custom Report name of the form: `organizations/{organization_id}/reports/{report_name}`"
																		},
																		{
																			"key": "reportsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "Get Custom Report",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/reports/:reportsId",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"reports",
																":reportsId"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Custom Report name of the form: `organizations/{organization_id}/reports/{report_name}`"
																},
																{
																	"key": "reportsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Retrieve a custom report definition."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/reports/:reportsId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"reports",
																		":reportsId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Custom Report name of the form: `organizations/{organization_id}/reports/{report_name}`"
																		},
																		{
																			"key": "reportsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												}
											]
										},
										{
											"name": "List Custom Reports",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/reports?expand=true",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"reports"
													],
													"query": [
														{
															"key": "expand",
															"value": "true",
															"description": "Set to 'true' to get expanded details about each custom report."
														}
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `parent`. Required. The parent organization name under which the API product will be listed `organizations/{organization_id}/reports`"
														}
													]
												},
												"description": "Return a list of Custom Reports"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/reports?expand=true",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"reports"
															],
															"query": [
																{
																	"key": "expand",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. The parent organization name under which the API product will be listed `organizations/{organization_id}/reports`"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "null"
												}
											]
										},
										{
											"name": "Create Custom Report",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"offset\": \"est reprehenderit veniam\",\n  \"timeUnit\": \"eiusmod\",\n  \"comments\": [\n    \"non in cupidatat laboris\",\n    \"amet\"\n  ],\n  \"dimensions\": [\n    \"Lorem in \",\n    \"qui fugiat\"\n  ],\n  \"sortOrder\": \"iru\",\n  \"toTime\": \"deserunt non ipsum\",\n  \"fromTime\": \"esse dolore\",\n  \"name\": \"ex consequat tempor\",\n  \"limit\": \"dolore dolore consectetu\",\n  \"sortByCols\": [\n    \"irure Excepteur\",\n    \"voluptate sit\"\n  ],\n  \"chartType\": \"Ut velit laborum\",\n  \"displayName\": \"exercitation Duis non\",\n  \"properties\": [\n    {\n      \"value\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"property\": \"cillum dolor\"\n    },\n    {\n      \"value\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"property\": \"qui sit\"\n    }\n  ],\n  \"topk\": \"dolore do\",\n  \"filter\": \"elit\",\n  \"metrics\": [\n    {\n      \"function\": \"enim minim\",\n      \"name\": \"dolor culpa do et\"\n    },\n    {\n      \"function\": \"mollit ut\",\n      \"name\": \"pariatur nostrud do\"\n    }\n  ],\n  \"tags\": [\n    \"Ut dolore in consequat Excepteur\",\n    \"mollit minim adipisicing reprehenderit\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/reports",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"reports"
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `parent`. Required. The parent organization name under which the Custom Report will be created. Must be of the form: `organizations/{organization_id}/reports`"
														}
													]
												},
												"description": "Creates a Custom Report for an Organization. A Custom Report provides Apigee Customers to create custom dashboards in addition to the standard dashboards which are provided. The Custom Report in its simplest form contains specifications about metrics, dimensions and filters. It is important to note that the custom report by itself does not provide an executable entity. The Edge UI converts the custom report definition into an analytics query and displays the result in a chart."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"offset\": \"esse labore\",\n  \"timeUnit\": \"occaecat aute exercitation nisi pariatur\",\n  \"comments\": [\n    \"non ullamco\",\n    \"irure\"\n  ],\n  \"dimensions\": [\n    \"mollit commodo enim\",\n    \"aliquip consectetur elit pariatur\"\n  ],\n  \"sortOrder\": \"eu voluptate\",\n  \"toTime\": \"veniam aliqua consequat\",\n  \"fromTime\": \"non adipisicing\",\n  \"name\": \"sint Excepteur velit ullamco sit\",\n  \"limit\": \"quis commodo\",\n  \"sortByCols\": [\n    \"exercitation\",\n    \"cillum incididunt laboris culpa\"\n  ],\n  \"chartType\": \"nulla\",\n  \"displayName\": \"anim exe\",\n  \"properties\": [\n    {\n      \"value\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"property\": \"dolor ut\"\n    },\n    {\n      \"value\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"property\": \"laboris labore tempor fugiat\"\n    }\n  ],\n  \"topk\": \"ullamco eu proident irure\",\n  \"filter\": \"adipisicing minim anim\",\n  \"metrics\": [\n    {\n      \"function\": \"laborum nisi incididunt ipsum\",\n      \"name\": \"enim elit do\"\n    },\n    {\n      \"function\": \"Lorem minim deserun\",\n      \"name\": \"labore irure enim voluptate\"\n    }\n  ],\n  \"tags\": [\n    \"nulla qui est cul\",\n    \"deserunt incididunt\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/reports",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"reports"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. The parent organization name under which the Custom Report will be created. Must be of the form: `organizations/{organization_id}/reports`"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "null"
												}
											]
										}
									]
								},
								{
									"name": "datacollectors",
									"item": [
										{
											"name": "{datacollectorsId}",
											"item": [
												{
													"name": "Update Data Collector",
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"ad\",\n  \"type\": \"BOOLEAN\",\n  \"name\": \"in s\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/datacollectors/:datacollectorsId?updateMask=labore quis Ut",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"datacollectors",
																":datacollectorsId"
															],
															"query": [
																{
																	"key": "updateMask",
																	"value": "labore quis Ut",
																	"description": "List of fields to be updated."
																}
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Name of the data collector in the following format: `organizations/{org}/datacollectors/{data_collector_id}`."
																},
																{
																	"key": "datacollectorsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Updates a data collector."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PATCH",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"description\": \"ad\",\n  \"type\": \"BOOLEAN\",\n  \"name\": \"in s\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/datacollectors/:datacollectorsId?updateMask=labore quis Ut",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"datacollectors",
																		":datacollectorsId"
																	],
																	"query": [
																		{
																			"key": "updateMask",
																			"value": "labore quis Ut"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the data collector in the following format: `organizations/{org}/datacollectors/{data_collector_id}`."
																		},
																		{
																			"key": "datacollectorsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "Get Data Collector",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/datacollectors/:datacollectorsId",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"datacollectors",
																":datacollectorsId"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Name of the data collector in the following format: `organizations/{org}/datacollectors/{data_collector_id}`."
																},
																{
																	"key": "datacollectorsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Gets a data collector."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/datacollectors/:datacollectorsId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"datacollectors",
																		":datacollectorsId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the data collector in the following format: `organizations/{org}/datacollectors/{data_collector_id}`."
																		},
																		{
																			"key": "datacollectorsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "Delete Data Collector",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/datacollectors/:datacollectorsId",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"datacollectors",
																":datacollectorsId"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Name of the data collector in the following format: `organizations/{org}/datacollectors/{data_collector_id}`."
																},
																{
																	"key": "datacollectorsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Deletes a data collector."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/datacollectors/:datacollectorsId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"datacollectors",
																		":datacollectorsId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the data collector in the following format: `organizations/{org}/datacollectors/{data_collector_id}`."
																		},
																		{
																			"key": "datacollectorsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "{}"
														}
													]
												}
											]
										},
										{
											"name": "List Data Collectors",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/datacollectors?pageSize=87452072&pageToken=labore quis Ut",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"datacollectors"
													],
													"query": [
														{
															"key": "pageSize",
															"value": "87452072",
															"description": "Maximum number of data collectors to return. The page size defaults to 25."
														},
														{
															"key": "pageToken",
															"value": "labore quis Ut",
															"description": "Page token, returned from a previous ListDataCollectors call, that you can use to retrieve the next page."
														}
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `parent`. Required. Name of the organization for which to list data collectors in the following format: `organizations/{org}`."
														}
													]
												},
												"description": "Lists all data collectors."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/datacollectors?pageSize=87452072&pageToken=labore quis Ut",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"datacollectors"
															],
															"query": [
																{
																	"key": "pageSize",
																	"value": "87452072"
																},
																{
																	"key": "pageToken",
																	"value": "labore quis Ut"
																}
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. Name of the organization for which to list data collectors in the following format: `organizations/{org}`."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "null"
												}
											]
										},
										{
											"name": "Create Data Collector",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"ad\",\n  \"type\": \"BOOLEAN\",\n  \"name\": \"in s\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/datacollectors?dataCollectorId=labore quis Ut",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"datacollectors"
													],
													"query": [
														{
															"key": "dataCollectorId",
															"value": "labore quis Ut",
															"description": "ID of the data collector. Overrides any ID in the data collector resource. Must be a string beginning with `dc_` that contains only letters, numbers, and underscores."
														}
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `parent`. Required. Name of the organization in which to create the data collector in the following format: `organizations/{org}`."
														}
													]
												},
												"description": "Creates a new data collector."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"ad\",\n  \"type\": \"BOOLEAN\",\n  \"name\": \"in s\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/datacollectors?dataCollectorId=labore quis Ut",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"datacollectors"
															],
															"query": [
																{
																	"key": "dataCollectorId",
																	"value": "labore quis Ut"
																}
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. Name of the organization in which to create the data collector in the following format: `organizations/{org}`."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "null"
												}
											]
										}
									]
								},
								{
									"name": "endpointAttachments",
									"item": [
										{
											"name": "{endpointAttachmentsId}",
											"item": [
												{
													"name": "Delete Endpoint Attachment",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/endpointAttachments/:endpointAttachmentsId",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"endpointAttachments",
																":endpointAttachmentsId"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Name of the endpoint attachment. Use the following structure in your request: `organizations/{org}/endpointAttachments/{endpoint_attachment}`"
																},
																{
																	"key": "endpointAttachmentsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Deletes an endpoint attachment."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/endpointAttachments/:endpointAttachmentsId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"endpointAttachments",
																		":endpointAttachmentsId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the endpoint attachment. Use the following structure in your request: `organizations/{org}/endpointAttachments/{endpoint_attachment}`"
																		},
																		{
																			"key": "endpointAttachmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "Get Endpoint Attachment",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/endpointAttachments/:endpointAttachmentsId",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"endpointAttachments",
																":endpointAttachmentsId"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Name of the endpoint attachment. Use the following structure in your request: `organizations/{org}/endpointAttachments/{endpoint_attachment}`"
																},
																{
																	"key": "endpointAttachmentsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Gets the endpoint attachment."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/endpointAttachments/:endpointAttachmentsId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"endpointAttachments",
																		":endpointAttachmentsId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the endpoint attachment. Use the following structure in your request: `organizations/{org}/endpointAttachments/{endpoint_attachment}`"
																		},
																		{
																			"key": "endpointAttachmentsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "{\n  \"state\": \"DELETING\",\n  \"host\": \"aute\",\n  \"location\": \"cu\",\n  \"name\": \"ullamco elit Duis cillum nulla\",\n  \"serviceAttachment\": \"qui incididunt nisi\",\n  \"connectionState\": \"CLOSED\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "List Endpoint Attachments",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/endpointAttachments?pageSize=87452072&pageToken=labore quis Ut",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"endpointAttachments"
													],
													"query": [
														{
															"key": "pageSize",
															"value": "87452072",
															"description": "Optional. Maximum number of endpoint attachments to return. If unspecified, at most 25 attachments will be returned."
														},
														{
															"key": "pageToken",
															"value": "labore quis Ut",
															"description": "Optional. Page token, returned from a previous `ListEndpointAttachments` call, that you can use to retrieve the next page."
														}
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `parent`. Required. Name of the organization for which to list endpoint attachments. Use the following structure in your request: `organizations/{org}`"
														}
													]
												},
												"description": "Lists the endpoint attachments in an organization."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/endpointAttachments?pageSize=87452072&pageToken=labore quis Ut",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"endpointAttachments"
															],
															"query": [
																{
																	"key": "pageSize",
																	"value": "87452072"
																},
																{
																	"key": "pageToken",
																	"value": "labore quis Ut"
																}
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. Name of the organization for which to list endpoint attachments. Use the following structure in your request: `organizations/{org}`"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{\n  \"nextPageToken\": \"tempor deserunt voluptate in sunt\",\n  \"endpointAttachments\": [\n    {\n      \"state\": \"ACTIVE\",\n      \"host\": \"voluptate\",\n      \"location\": \"labo\",\n      \"name\": \"aliqua aliquip\",\n      \"serviceAttachment\": \"dolore nisi\",\n      \"connectionState\": \"PENDING\"\n    },\n    {\n      \"state\": \"UPDATING\",\n      \"host\": \"nostrud qui pariatur voluptate\",\n      \"location\": \"pariatur Duis ex cillum\",\n      \"name\": \"sit ull\",\n      \"serviceAttachment\": \"dolor\",\n      \"connectionState\": \"NEEDS_ATTENTION\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Create Endpoint Attachment",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"location\": \"tempor in\",\n  \"name\": \"commodo officia ullamco\",\n  \"serviceAttachment\": \"et elit do\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/endpointAttachments?endpointAttachmentId=labore quis Ut",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"endpointAttachments"
													],
													"query": [
														{
															"key": "endpointAttachmentId",
															"value": "labore quis Ut",
															"description": "ID to use for the endpoint attachment. ID must start with a lowercase letter followed by up to 31 lowercase letters, numbers, or hyphens, and cannot end with a hyphen. The minimum length is 2."
														}
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `parent`. Required. Organization the endpoint attachment will be created in."
														}
													]
												},
												"description": "Creates an endpoint attachment. **Note:** Not supported for Apigee hybrid."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"location\": \"tempor in\",\n  \"name\": \"commodo officia ullamco\",\n  \"serviceAttachment\": \"et elit do\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/endpointAttachments?endpointAttachmentId=labore quis Ut",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"endpointAttachments"
															],
															"query": [
																{
																	"key": "endpointAttachmentId",
																	"value": "labore quis Ut"
																}
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. Organization the endpoint attachment will be created in."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "null"
												}
											]
										}
									]
								},
								{
									"name": "apps",
									"item": [
										{
											"name": "List Apps",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apps?status=labore quis Ut&apptype=labore quis Ut&includeCred=true&startKey=labore quis Ut&rows=&expand=true&ids=labore quis Ut&keyStatus=labore quis Ut&apiProduct=labore quis Ut",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"apps"
													],
													"query": [
														{
															"key": "status",
															"value": "labore quis Ut",
															"description": "Optional. Filter by the status of the app. Valid values are `approved` or `revoked`. Defaults to `approved`."
														},
														{
															"key": "apptype",
															"value": "labore quis Ut",
															"description": "Optional. Filter by the type of the app. Valid values are `company` or `developer`. Defaults to `developer`."
														},
														{
															"key": "includeCred",
															"value": "true",
															"description": "Optional. Flag that specifies whether to include credentials in the response."
														},
														{
															"key": "startKey",
															"value": "labore quis Ut",
															"description": "Returns the list of apps starting from the specified app ID."
														},
														{
															"key": "rows",
															"value": "",
															"description": "Optional. Maximum number of app IDs to return. Defaults to 10000."
														},
														{
															"key": "expand",
															"value": "true",
															"description": "Optional. Flag that specifies whether to return an expanded list of apps for the organization. Defaults to `false`."
														},
														{
															"key": "ids",
															"value": "labore quis Ut",
															"description": "Optional. Comma-separated list of app IDs on which to filter."
														},
														{
															"key": "keyStatus",
															"value": "labore quis Ut",
															"description": "Optional. Key status of the app. Valid values include `approved` or `revoked`. Defaults to `approved`."
														},
														{
															"key": "apiProduct",
															"value": "labore quis Ut",
															"description": "API product."
														}
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `parent`. Required. Resource path of the parent in the following format: `organizations/{org}`"
														}
													]
												},
												"description": "Lists IDs of apps within an organization that have the specified app status (approved or revoked) or are of the specified app type (developer or company)."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apps?status=labore quis Ut&apptype=labore quis Ut&includeCred=true&startKey=labore quis Ut&rows=&expand=true&ids=labore quis Ut&keyStatus=labore quis Ut&apiProduct=labore quis Ut",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"apps"
															],
															"query": [
																{
																	"key": "status",
																	"value": "labore quis Ut"
																},
																{
																	"key": "apptype",
																	"value": "labore quis Ut"
																},
																{
																	"key": "includeCred",
																	"value": "true"
																},
																{
																	"key": "startKey",
																	"value": "labore quis Ut"
																},
																{
																	"key": "rows",
																	"value": ""
																},
																{
																	"key": "expand",
																	"value": "true"
																},
																{
																	"key": "ids",
																	"value": "labore quis Ut"
																},
																{
																	"key": "keyStatus",
																	"value": "labore quis Ut"
																},
																{
																	"key": "apiProduct",
																	"value": "labore quis Ut"
																}
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. Resource path of the parent in the following format: `organizations/{org}`"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "null"
												}
											]
										},
										{
											"name": "Get App",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apps/:appsId",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"apps",
														":appsId"
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `name`. Required. App ID in the following format: `organizations/{org}/apps/{app}`"
														},
														{
															"key": "appsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `name`. See documentation of `organizationsId`."
														}
													]
												},
												"description": "Gets the app profile for the specified app ID."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/apps/:appsId",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"apps",
																":appsId"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. App ID in the following format: `organizations/{org}/apps/{app}`"
																},
																{
																	"key": "appsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "null"
												}
											]
										}
									]
								},
								{
									"name": "envgroups",
									"item": [
										{
											"name": "{envgroupsId}",
											"item": [
												{
													"name": "attachments",
													"item": [
														{
															"name": "{attachmentsId}",
															"item": [
																{
																	"name": "Delete Environment Group Attachment",
																	"request": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/envgroups/:envgroupsId/attachments/:attachmentsId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"envgroups",
																				":envgroupsId",
																				"attachments",
																				":attachmentsId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the environment group attachment to delete in the following format: `organizations/{org}/envgroups/{envgroup}/attachments/{attachment}`."
																				},
																				{
																					"key": "envgroupsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "attachmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Deletes an environment group attachment."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/envgroups/:envgroupsId/attachments/:attachmentsId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"envgroups",
																						":envgroupsId",
																						"attachments",
																						":attachmentsId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the environment group attachment to delete in the following format: `organizations/{org}/envgroups/{envgroup}/attachments/{attachment}`."
																						},
																						{
																							"key": "envgroupsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "attachmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "null"
																		}
																	]
																},
																{
																	"name": "Get Environment Group Attachment",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "*/*"
																			}
																		],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/envgroups/:envgroupsId/attachments/:attachmentsId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"envgroups",
																				":envgroupsId",
																				"attachments",
																				":attachmentsId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Name of the environment group attachment in the following format: `organizations/{org}/envgroups/{envgroup}/attachments/{attachment}`"
																				},
																				{
																					"key": "envgroupsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				},
																				{
																					"key": "attachmentsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		},
																		"description": "Gets an environment group attachment."
																	},
																	"response": [
																		{
																			"name": "Successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/envgroups/:envgroupsId/attachments/:attachmentsId",
																					"host": [
																						"{{BASE_URL}}"
																					],
																					"path": [
																						"v1",
																						"organizations",
																						"{{ORG_ID}}",
																						"envgroups",
																						":envgroupsId",
																						"attachments",
																						":attachmentsId"
																					],
																					"variable": [
																						{
																							"key": "organizationsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. Required. Name of the environment group attachment in the following format: `organizations/{org}/envgroups/{envgroup}/attachments/{attachment}`"
																						},
																						{
																							"key": "envgroupsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						},
																						{
																							"key": "attachmentsId",
																							"value": "labore quis Ut",
																							"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																						}
																					]
																				}
																			},
																			"status": "Internal Server Error",
																			"code": 500,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "*/*"
																				}
																			],
																			"cookie": [],
																			"body": "null"
																		}
																	]
																}
															]
														},
														{
															"name": "Create Environment Group Attachment",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"environment\": \"irure aliquip\",\n  \"name\": \"nisi quis\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/envgroups/:envgroupsId/attachments",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"envgroups",
																		":envgroupsId",
																		"attachments"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. EnvironmentGroup under which to create the attachment in the following format: `organizations/{org}/envgroups/{envgroup}`."
																		},
																		{
																			"key": "envgroupsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Creates a new attachment of an environment to an environment group."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"environment\": \"irure aliquip\",\n  \"name\": \"nisi quis\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/envgroups/:envgroupsId/attachments",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"envgroups",
																				":envgroupsId",
																				"attachments"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. EnvironmentGroup under which to create the attachment in the following format: `organizations/{org}/envgroups/{envgroup}`."
																				},
																				{
																					"key": "envgroupsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														},
														{
															"name": "List Environment Group Attachments",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/envgroups/:envgroupsId/attachments?pageSize=87452072&pageToken=labore quis Ut",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"envgroups",
																		":envgroupsId",
																		"attachments"
																	],
																	"query": [
																		{
																			"key": "pageSize",
																			"value": "87452072",
																			"description": "Maximum number of environment group attachments to return. The page size defaults to 25."
																		},
																		{
																			"key": "pageToken",
																			"value": "labore quis Ut",
																			"description": "Page token, returned by a previous ListEnvironmentGroupAttachments call, that you can use to retrieve the next page."
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. Name of the environment group in the following format: `organizations/{org}/envgroups/{envgroup}`."
																		},
																		{
																			"key": "envgroupsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Lists all attachments of an environment group."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/envgroups/:envgroupsId/attachments?pageSize=87452072&pageToken=labore quis Ut",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"envgroups",
																				":envgroupsId",
																				"attachments"
																			],
																			"query": [
																				{
																					"key": "pageSize",
																					"value": "87452072"
																				},
																				{
																					"key": "pageToken",
																					"value": "labore quis Ut"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. Required. Name of the environment group in the following format: `organizations/{org}/envgroups/{envgroup}`."
																				},
																				{
																					"key": "envgroupsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `parent`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														}
													]
												},
												{
													"name": "Get Environment Group",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/envgroups/:envgroupsId",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"envgroups",
																":envgroupsId"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Name of the environment group in the following format: `organizations/{org}/envgroups/{envgroup}`."
																},
																{
																	"key": "envgroupsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Gets an environment group."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/envgroups/:envgroupsId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"envgroups",
																		":envgroupsId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the environment group in the following format: `organizations/{org}/envgroups/{envgroup}`."
																		},
																		{
																			"key": "envgroupsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "Delete Environment Group",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/envgroups/:envgroupsId",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"envgroups",
																":envgroupsId"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Name of the environment group in the following format: `organizations/{org}/envgroups/{envgroup}`."
																},
																{
																	"key": "envgroupsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Deletes an environment group."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/envgroups/:envgroupsId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"envgroups",
																		":envgroupsId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the environment group in the following format: `organizations/{org}/envgroups/{envgroup}`."
																		},
																		{
																			"key": "envgroupsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "Update Environment Group",
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"e\",\n  \"hostnames\": [\n    \"cillum anim nulla\",\n    \"nulla Lorem proident\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/envgroups/:envgroupsId?updateMask=labore quis Ut",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"envgroups",
																":envgroupsId"
															],
															"query": [
																{
																	"key": "updateMask",
																	"value": "labore quis Ut",
																	"description": "List of fields to be updated."
																}
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Name of the environment group to update in the format: `organizations/{org}/envgroups/{envgroup}."
																},
																{
																	"key": "envgroupsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Updates an environment group."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "PATCH",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"e\",\n  \"hostnames\": [\n    \"cillum anim nulla\",\n    \"nulla Lorem proident\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/envgroups/:envgroupsId?updateMask=labore quis Ut",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"envgroups",
																		":envgroupsId"
																	],
																	"query": [
																		{
																			"key": "updateMask",
																			"value": "labore quis Ut"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the environment group to update in the format: `organizations/{org}/envgroups/{envgroup}."
																		},
																		{
																			"key": "envgroupsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "Get Env Group Deployed Ingress Config",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/envgroups/:envgroupsId/deployedIngressConfig?view=BASIC",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"envgroups",
																":envgroupsId",
																"deployedIngressConfig"
															],
															"query": [
																{
																	"key": "view",
																	"value": "BASIC",
																	"description": "When set to FULL, additional details about the specific deployments receiving traffic will be included in the IngressConfig response's RoutingRules."
																}
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. Required. Name of the deployed configuration for the environment group in the following format: 'organizations/{org}/envgroups/{envgroup}/deployedIngressConfig'."
																},
																{
																	"key": "envgroupsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																}
															]
														},
														"description": "Gets the deployed ingress configuration for an environment group."
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/envgroups/:envgroupsId/deployedIngressConfig?view=BASIC",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"envgroups",
																		":envgroupsId",
																		"deployedIngressConfig"
																	],
																	"query": [
																		{
																			"key": "view",
																			"value": "BASIC"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Name of the deployed configuration for the environment group in the following format: 'organizations/{org}/envgroups/{envgroup}/deployedIngressConfig'."
																		},
																		{
																			"key": "envgroupsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												}
											]
										},
										{
											"name": "List Environment Groups",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/envgroups?pageSize=87452072&pageToken=labore quis Ut",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"envgroups"
													],
													"query": [
														{
															"key": "pageSize",
															"value": "87452072",
															"description": "Maximum number of environment groups to return. The page size defaults to 25."
														},
														{
															"key": "pageToken",
															"value": "labore quis Ut",
															"description": "Page token, returned from a previous ListEnvironmentGroups call, that you can use to retrieve the next page."
														}
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `parent`. Required. Name of the organization for which to list environment groups in the following format: `organizations/{org}`."
														}
													]
												},
												"description": "Lists all environment groups."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/envgroups?pageSize=87452072&pageToken=labore quis Ut",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"envgroups"
															],
															"query": [
																{
																	"key": "pageSize",
																	"value": "87452072"
																},
																{
																	"key": "pageToken",
																	"value": "labore quis Ut"
																}
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. Name of the organization for which to list environment groups in the following format: `organizations/{org}`."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "null"
												}
											]
										},
										{
											"name": "Create Environment Group",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"e\",\n  \"hostnames\": [\n    \"cillum anim nulla\",\n    \"nulla Lorem proident\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/envgroups?name=labore quis Ut",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"envgroups"
													],
													"query": [
														{
															"key": "name",
															"value": "labore quis Ut",
															"description": "ID of the environment group. Overrides any ID in the environment_group resource."
														}
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `parent`. Required. Name of the organization in which to create the environment group in the following format: `organizations/{org}`."
														}
													]
												},
												"description": "Creates a new environment group."
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"e\",\n  \"hostnames\": [\n    \"cillum anim nulla\",\n    \"nulla Lorem proident\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/envgroups?name=labore quis Ut",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"envgroups"
															],
															"query": [
																{
																	"key": "name",
																	"value": "labore quis Ut"
																}
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. Name of the organization in which to create the environment group in the following format: `organizations/{org}`."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "null"
												}
											]
										}
									]
								},
								{
									"name": "analytics",
									"item": [
										{
											"name": "datastores",
											"item": [
												{
													"name": "{datastoresId}",
													"item": [
														{
															"name": "Get Datastore",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/analytics/datastores/:datastoresId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"analytics",
																		"datastores",
																		":datastoresId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Resource name of the Datastore to be get. Must be of the form `organizations/{org}/analytics/datastores/{datastoreId}`"
																		},
																		{
																			"key": "datastoresId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Get a Datastore"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/analytics/datastores/:datastoresId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"analytics",
																				"datastores",
																				":datastoresId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Resource name of the Datastore to be get. Must be of the form `organizations/{org}/analytics/datastores/{datastoreId}`"
																				},
																				{
																					"key": "datastoresId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														},
														{
															"name": "Delete Datastore",
															"request": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/analytics/datastores/:datastoresId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"analytics",
																		"datastores",
																		":datastoresId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. Resource name of the Datastore to be deleted. Must be of the form `organizations/{org}/analytics/datastores/{datastoreId}`"
																		},
																		{
																			"key": "datastoresId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Delete a Datastore from an org."
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/analytics/datastores/:datastoresId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"analytics",
																				"datastores",
																				":datastoresId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. Resource name of the Datastore to be deleted. Must be of the form `organizations/{org}/analytics/datastores/{datastoreId}`"
																				},
																				{
																					"key": "datastoresId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "{}"
																}
															]
														},
														{
															"name": "Update Datastore",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "*/*"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"targetType\": \"in\",\n  \"datastoreConfig\": {\n    \"projectId\": \"non ut magna\",\n    \"tablePrefix\": \"dolor adipisicing\",\n    \"datasetName\": \"Lorem mollit Ut\",\n    \"path\": \"Duis\",\n    \"bucketName\": \"labore exercitation qui\"\n  },\n  \"displayName\": \"deserunt sit dolor sint\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/analytics/datastores/:datastoresId",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"analytics",
																		"datastores",
																		":datastoresId"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. Required. The resource name of datastore to be updated. Must be of the form `organizations/{org}/analytics/datastores/{datastoreId}`"
																		},
																		{
																			"key": "datastoresId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																		}
																	]
																},
																"description": "Update a Datastore"
															},
															"response": [
																{
																	"name": "Successful operation",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"targetType\": \"in\",\n  \"datastoreConfig\": {\n    \"projectId\": \"non ut magna\",\n    \"tablePrefix\": \"dolor adipisicing\",\n    \"datasetName\": \"Lorem mollit Ut\",\n    \"path\": \"Duis\",\n    \"bucketName\": \"labore exercitation qui\"\n  },\n  \"displayName\": \"deserunt sit dolor sint\"\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/analytics/datastores/:datastoresId",
																			"host": [
																				"{{BASE_URL}}"
																			],
																			"path": [
																				"v1",
																				"organizations",
																				"{{ORG_ID}}",
																				"analytics",
																				"datastores",
																				":datastoresId"
																			],
																			"variable": [
																				{
																					"key": "organizationsId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. Required. The resource name of datastore to be updated. Must be of the form `organizations/{org}/analytics/datastores/{datastoreId}`"
																				},
																				{
																					"key": "datastoresId",
																					"value": "labore quis Ut",
																					"description": "(Required) Part of `name`. See documentation of `organizationsId`."
																				}
																			]
																		}
																	},
																	"status": "Internal Server Error",
																	"code": 500,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "*/*"
																		}
																	],
																	"cookie": [],
																	"body": "null"
																}
															]
														}
													]
												},
												{
													"name": "Create Datastore",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"targetType\": \"in\",\n  \"datastoreConfig\": {\n    \"projectId\": \"non ut magna\",\n    \"tablePrefix\": \"dolor adipisicing\",\n    \"datasetName\": \"Lorem mollit Ut\",\n    \"path\": \"Duis\",\n    \"bucketName\": \"labore exercitation qui\"\n  },\n  \"displayName\": \"deserunt sit dolor sint\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/analytics/datastores",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"analytics",
																"datastores"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. The parent organization name. Must be of the form `organizations/{org}`."
																}
															]
														},
														"description": "Create a Datastore for an org"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"targetType\": \"in\",\n  \"datastoreConfig\": {\n    \"projectId\": \"non ut magna\",\n    \"tablePrefix\": \"dolor adipisicing\",\n    \"datasetName\": \"Lorem mollit Ut\",\n    \"path\": \"Duis\",\n    \"bucketName\": \"labore exercitation qui\"\n  },\n  \"displayName\": \"deserunt sit dolor sint\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/analytics/datastores",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"analytics",
																		"datastores"
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. The parent organization name. Must be of the form `organizations/{org}`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												},
												{
													"name": "List Datastores",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "*/*"
															}
														],
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/analytics/datastores?targetType=labore quis Ut",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"analytics",
																"datastores"
															],
															"query": [
																{
																	"key": "targetType",
																	"value": "labore quis Ut",
																	"description": "Optional. TargetType is used to fetch all Datastores that match the type"
																}
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. The parent organization name. Must be of the form `organizations/{org}`."
																}
															]
														},
														"description": "List Datastores"
													},
													"response": [
														{
															"name": "Successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/analytics/datastores?targetType=labore quis Ut",
																	"host": [
																		"{{BASE_URL}}"
																	],
																	"path": [
																		"v1",
																		"organizations",
																		"{{ORG_ID}}",
																		"analytics",
																		"datastores"
																	],
																	"query": [
																		{
																			"key": "targetType",
																			"value": "labore quis Ut"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationsId",
																			"value": "labore quis Ut",
																			"description": "(Required) Part of `parent`. Required. The parent organization name. Must be of the form `organizations/{org}`."
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "*/*"
																}
															],
															"cookie": [],
															"body": "null"
														}
													]
												}
											]
										},
										{
											"name": "Test Datastore",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"targetType\": \"in\",\n  \"datastoreConfig\": {\n    \"projectId\": \"non ut magna\",\n    \"tablePrefix\": \"dolor adipisicing\",\n    \"datasetName\": \"Lorem mollit Ut\",\n    \"path\": \"Duis\",\n    \"bucketName\": \"labore exercitation qui\"\n  },\n  \"displayName\": \"deserunt sit dolor sint\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/analytics/datastores:test",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"analytics",
														"datastores:test"
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `parent`. Required. The parent organization name Must be of the form `organizations/{org}`"
														}
													]
												},
												"description": "Test if Datastore configuration is correct. This includes checking if credentials provided by customer have required permissions in target destination storage"
											},
											"response": [
												{
													"name": "Successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"targetType\": \"in\",\n  \"datastoreConfig\": {\n    \"projectId\": \"non ut magna\",\n    \"tablePrefix\": \"dolor adipisicing\",\n    \"datasetName\": \"Lorem mollit Ut\",\n    \"path\": \"Duis\",\n    \"bucketName\": \"labore exercitation qui\"\n  },\n  \"displayName\": \"deserunt sit dolor sint\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/analytics/datastores:test",
															"host": [
																"{{BASE_URL}}"
															],
															"path": [
																"v1",
																"organizations",
																"{{ORG_ID}}",
																"analytics",
																"datastores:test"
															],
															"variable": [
																{
																	"key": "organizationsId",
																	"value": "labore quis Ut",
																	"description": "(Required) Part of `parent`. Required. The parent organization name Must be of the form `organizations/{org}`"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "*/*"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"elit aliqua fugiat\",\n  \"state\": \"Ut\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get Organization",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"v1",
												"organizations",
												"{{ORG_ID}}"
											],
											"variable": [
												{
													"key": "organizationsId",
													"value": "labore quis Ut",
													"description": "(Required) Part of `name`. Required. Apigee organization name in the following format: `organizations/{org}`"
												}
											]
										},
										"description": "Gets the profile for an Apigee organization. See [Understanding organizations](https://cloud.google.com/apigee/docs/api-platform/fundamentals/organization-structure)."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}"
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `name`. Required. Apigee organization name in the following format: `organizations/{org}`"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "null"
										}
									]
								},
								{
									"name": "Delete Organization",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}?retention=DELETION_RETENTION_UNSPECIFIED",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"v1",
												"organizations",
												"{{ORG_ID}}"
											],
											"query": [
												{
													"key": "retention",
													"value": "DELETION_RETENTION_UNSPECIFIED",
													"description": "Optional. This setting is applicable only for organizations that are soft-deleted (i.e., BillingType is not EVALUATION). It controls how long Organization data will be retained after the initial delete operation completes. During this period, the Organization may be restored to its last known state. After this period, the Organization will no longer be able to be restored."
												}
											],
											"variable": [
												{
													"key": "organizationsId",
													"value": "labore quis Ut",
													"description": "(Required) Part of `name`. Required. Name of the organization. Use the following structure in your request: `organizations/{org}`"
												}
											]
										},
										"description": "Delete an Apigee organization. For organizations with BillingType EVALUATION, an immediate deletion is performed. For paid organizations, a soft-deletion is performed. The organization can be restored within the soft-deletion period which can be controlled using the retention field in the request."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}?retention=DELETION_RETENTION_UNSPECIFIED",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}"
													],
													"query": [
														{
															"key": "retention",
															"value": "DELETION_RETENTION_UNSPECIFIED"
														}
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `name`. Required. Name of the organization. Use the following structure in your request: `organizations/{org}`"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "null"
										}
									]
								},
								{
									"name": "Update Organization",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"analyticsRegion\": \"cillum veniam do\",\n  \"runtimeType\": \"RUNTIME_TYPE_UNSPECIFIED\",\n  \"type\": \"TYPE_PAID\",\n  \"runtimeDatabaseEncryptionKeyName\": \"dolor minim deserunt magna\",\n  \"displayName\": \"nisi fugiat non Duis laboris\",\n  \"properties\": {\n    \"property\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"customerName\": \"tempor consectetur aute in\",\n  \"addonsConfig\": {\n    \"advancedApiOpsConfig\": {\n      \"enabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"monetizationConfig\": {\n      \"enabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"apiSecurityConfig\": {\n      \"enabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"connectorsPlatformConfig\": {\n      \"enabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"integrationConfig\": {\n      \"enabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"billingType\": \"BILLING_TYPE_UNSPECIFIED\",\n  \"description\": \"nostrud labo\",\n  \"portalDisabled\": true,\n  \"authorizedNetwork\": \"sed qui dolor\",\n  \"attributes\": [\n    \"non magna aliquip laborum\",\n    \"incididunt minim reprehenderit\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"v1",
												"organizations",
												"{{ORG_ID}}"
											],
											"variable": [
												{
													"key": "organizationsId",
													"value": "labore quis Ut",
													"description": "(Required) Part of `name`. Required. Apigee organization name in the following format: `organizations/{org}`"
												}
											]
										},
										"description": "Updates the properties for an Apigee organization. No other fields in the organization profile will be updated."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"analyticsRegion\": \"cillum veniam do\",\n  \"runtimeType\": \"RUNTIME_TYPE_UNSPECIFIED\",\n  \"type\": \"TYPE_PAID\",\n  \"runtimeDatabaseEncryptionKeyName\": \"dolor minim deserunt magna\",\n  \"displayName\": \"nisi fugiat non Duis laboris\",\n  \"properties\": {\n    \"property\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"customerName\": \"tempor consectetur aute in\",\n  \"addonsConfig\": {\n    \"advancedApiOpsConfig\": {\n      \"enabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"monetizationConfig\": {\n      \"enabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"apiSecurityConfig\": {\n      \"enabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"connectorsPlatformConfig\": {\n      \"enabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"integrationConfig\": {\n      \"enabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"billingType\": \"BILLING_TYPE_UNSPECIFIED\",\n  \"description\": \"nostrud labo\",\n  \"portalDisabled\": true,\n  \"authorizedNetwork\": \"sed qui dolor\",\n  \"attributes\": [\n    \"non magna aliquip laborum\",\n    \"incididunt minim reprehenderit\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}"
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `name`. Required. Apigee organization name in the following format: `organizations/{org}`"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "null"
										}
									]
								},
								{
									"name": "List Organization Deployments",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/deployments?sharedFlows=true",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"v1",
												"organizations",
												"{{ORG_ID}}",
												"deployments"
											],
											"query": [
												{
													"key": "sharedFlows",
													"value": "true",
													"description": "Optional. Flag that specifies whether to return shared flow or API proxy deployments. Set to `true` to return shared flow deployments; set to `false` to return API proxy deployments. Defaults to `false`."
												}
											],
											"variable": [
												{
													"key": "organizationsId",
													"value": "labore quis Ut",
													"description": "(Required) Part of `parent`. Required. Name of the organization for which to return deployment information in the following format: `organizations/{org}`"
												}
											]
										},
										"description": "Lists all deployments of API proxies or shared flows."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/deployments?sharedFlows=true",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"deployments"
													],
													"query": [
														{
															"key": "sharedFlows",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `parent`. Required. Name of the organization for which to return deployment information in the following format: `organizations/{org}`"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "null"
										}
									]
								},
								{
									"name": "Get Runtime Config",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/runtimeConfig",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"v1",
												"organizations",
												"{{ORG_ID}}",
												"runtimeConfig"
											],
											"variable": [
												{
													"key": "organizationsId",
													"value": "labore quis Ut",
													"description": "(Required) Part of `name`. Required. Name of the runtime config for the organization in the following format: 'organizations/{org}/runtimeConfig'."
												}
											]
										},
										"description": "Get runtime config for an organization."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/runtimeConfig",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"runtimeConfig"
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `name`. Required. Name of the runtime config for the organization in the following format: 'organizations/{org}/runtimeConfig'."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "{\n  \"analyticsBucket\": \"ex dolor\",\n  \"traceBucket\": \"deserunt ipsum eu\",\n  \"tenantProjectId\": \"deserunt in\",\n  \"name\": \"ad esse ex dolor\"\n}"
										}
									]
								},
								{
									"name": "Get Optimized Host Stats",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/optimizedHostStats/:optimizedHostStatsId?select=labore quis Ut&timeUnit=labore quis Ut&timeRange=labore quis Ut&filter=labore quis Ut&sort=labore quis Ut&sortby=labore quis Ut&limit=labore quis Ut&offset=labore quis Ut&topk=labore quis Ut&tsAscending=true&realtime=true&tzo=labore quis Ut&accuracy=labore quis Ut&envgroupHostname=labore quis Ut",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"v1",
												"organizations",
												"{{ORG_ID}}",
												"optimizedHostStats",
												":optimizedHostStatsId"
											],
											"query": [
												{
													"key": "select",
													"value": "labore quis Ut",
													"description": "Required. Comma-separated list of metrics. For example: `sum(message_count),sum(error_count)`"
												},
												{
													"key": "timeUnit",
													"value": "labore quis Ut",
													"description": "Granularity of metrics returned. Valid values include: `second`, `minute`, `hour`, `day`, `week`, or `month`."
												},
												{
													"key": "timeRange",
													"value": "labore quis Ut",
													"description": "Required. Time interval for the interactive query. Time range is specified in GMT as `start~end`. For example: `04/15/2017 00:00~05/15/2017 23:59`."
												},
												{
													"key": "filter",
													"value": "labore quis Ut",
													"description": "Filter that enables you to drill-down on specific dimension values."
												},
												{
													"key": "sort",
													"value": "labore quis Ut",
													"description": "Flag that specifies whether the sort order should be ascending or descending. Valid values include `DESC` and `ASC`."
												},
												{
													"key": "sortby",
													"value": "labore quis Ut",
													"description": "Comma-separated list of columns used to sort the final result."
												},
												{
													"key": "limit",
													"value": "labore quis Ut",
													"description": "Maximum number of result items to return. The default and maximum value that can be returned is 14400."
												},
												{
													"key": "offset",
													"value": "labore quis Ut",
													"description": "Offset value. Use `offset` with `limit` to enable pagination of results. For example, to display results 11-20, set limit to `10` and offset to `10`."
												},
												{
													"key": "topk",
													"value": "labore quis Ut",
													"description": "Top number of results to return. For example, to return the top 5 results, set `topk=5`."
												},
												{
													"key": "tsAscending",
													"value": "true",
													"description": "Flag that specifies whether to list timestamps in ascending (`true`) or descending (`false`) order. Apigee recommends that you set this value to `true` if you are using `sortby` with `sort=DESC`."
												},
												{
													"key": "realtime",
													"value": "true",
													"description": "No longer used by Apigee. Supported for backwards compatibility."
												},
												{
													"key": "tzo",
													"value": "labore quis Ut",
													"description": "Timezone offset value."
												},
												{
													"key": "accuracy",
													"value": "labore quis Ut",
													"description": "No longer used by Apigee. Supported for backwards compatibility."
												},
												{
													"key": "envgroupHostname",
													"value": "labore quis Ut",
													"description": "Required. Hostname for which the interactive query will be executed."
												}
											],
											"variable": [
												{
													"key": "organizationsId",
													"value": "labore quis Ut",
													"description": "(Required) Part of `name`. Required. Resource name for which the interactive query will be executed. Use the following format in your request: `organizations/{organization_id}/optimizedHostStats/{dimensions}` Dimensions let you view metrics in meaningful groupings, such as `apiproxy`, `target_host`. The value of dimensions should be a comma-separated list as shown below: `organizations/{org}/optimizedHostStats/apiproxy,request_verb`"
												},
												{
													"key": "optimizedHostStatsId",
													"value": "labore quis Ut",
													"description": "(Required) Part of `name`. See documentation of `organizationsId`."
												}
											]
										},
										"description": "Similar to GetHostStats except that the response is less verbose."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/optimizedHostStats/:optimizedHostStatsId?select=labore quis Ut&timeUnit=labore quis Ut&timeRange=labore quis Ut&filter=labore quis Ut&sort=labore quis Ut&sortby=labore quis Ut&limit=labore quis Ut&offset=labore quis Ut&topk=labore quis Ut&tsAscending=true&realtime=true&tzo=labore quis Ut&accuracy=labore quis Ut&envgroupHostname=labore quis Ut",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"optimizedHostStats",
														":optimizedHostStatsId"
													],
													"query": [
														{
															"key": "select",
															"value": "labore quis Ut"
														},
														{
															"key": "timeUnit",
															"value": "labore quis Ut"
														},
														{
															"key": "timeRange",
															"value": "labore quis Ut"
														},
														{
															"key": "filter",
															"value": "labore quis Ut"
														},
														{
															"key": "sort",
															"value": "labore quis Ut"
														},
														{
															"key": "sortby",
															"value": "labore quis Ut"
														},
														{
															"key": "limit",
															"value": "labore quis Ut"
														},
														{
															"key": "offset",
															"value": "labore quis Ut"
														},
														{
															"key": "topk",
															"value": "labore quis Ut"
														},
														{
															"key": "tsAscending",
															"value": "true"
														},
														{
															"key": "realtime",
															"value": "true"
														},
														{
															"key": "tzo",
															"value": "labore quis Ut"
														},
														{
															"key": "accuracy",
															"value": "labore quis Ut"
														},
														{
															"key": "envgroupHostname",
															"value": "labore quis Ut"
														}
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `name`. Required. Resource name for which the interactive query will be executed. Use the following format in your request: `organizations/{organization_id}/optimizedHostStats/{dimensions}` Dimensions let you view metrics in meaningful groupings, such as `apiproxy`, `target_host`. The value of dimensions should be a comma-separated list as shown below: `organizations/{org}/optimizedHostStats/apiproxy,request_verb`"
														},
														{
															"key": "optimizedHostStatsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `name`. See documentation of `organizationsId`."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "null"
										}
									]
								},
								{
									"name": "Get Host Stats",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/hostStats/:hostStatsId?select=labore quis Ut&timeUnit=labore quis Ut&timeRange=labore quis Ut&filter=labore quis Ut&sort=labore quis Ut&sortby=labore quis Ut&limit=labore quis Ut&offset=labore quis Ut&topk=labore quis Ut&tsAscending=true&realtime=true&tzo=labore quis Ut&accuracy=labore quis Ut&envgroupHostname=labore quis Ut",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"v1",
												"organizations",
												"{{ORG_ID}}",
												"hostStats",
												":hostStatsId"
											],
											"query": [
												{
													"key": "select",
													"value": "labore quis Ut",
													"description": "Comma-separated list of metrics. For example: `sum(message_count),sum(error_count)`"
												},
												{
													"key": "timeUnit",
													"value": "labore quis Ut",
													"description": "Granularity of metrics returned. Valid values include: `second`, `minute`, `hour`, `day`, `week`, or `month`."
												},
												{
													"key": "timeRange",
													"value": "labore quis Ut",
													"description": "Time interval for the interactive query. Time range is specified in GMT as `start~end`. For example: `04/15/2017 00:00~05/15/2017 23:59`"
												},
												{
													"key": "filter",
													"value": "labore quis Ut",
													"description": "Flag that enables drill-down on specific dimension values."
												},
												{
													"key": "sort",
													"value": "labore quis Ut",
													"description": "Flag that specifies if the sort order should be ascending or descending. Valid values are `DESC` and `ASC`."
												},
												{
													"key": "sortby",
													"value": "labore quis Ut",
													"description": "Comma-separated list of columns to sort the final result."
												},
												{
													"key": "limit",
													"value": "labore quis Ut",
													"description": "Maximum number of result items to return. The default and maximum value that can be returned is 14400."
												},
												{
													"key": "offset",
													"value": "labore quis Ut",
													"description": "Offset value. Use `offset` with `limit` to enable pagination of results. For example, to display results 11-20, set limit to `10` and offset to `10`."
												},
												{
													"key": "topk",
													"value": "labore quis Ut",
													"description": "Top number of results to return. For example, to return the top 5 results, set `topk=5`."
												},
												{
													"key": "tsAscending",
													"value": "true",
													"description": "Flag that specifies whether to list timestamps in ascending (`true`) or descending (`false`) order. Apigee recommends that you set this value to `true` if you are using `sortby` with `sort=DESC`."
												},
												{
													"key": "realtime",
													"value": "true",
													"description": "No longer used by Apigee. Supported for backwards compatibility."
												},
												{
													"key": "tzo",
													"value": "labore quis Ut",
													"description": "Timezone offset value."
												},
												{
													"key": "accuracy",
													"value": "labore quis Ut",
													"description": "No longer used by Apigee. Supported for backwards compatibility."
												},
												{
													"key": "envgroupHostname",
													"value": "labore quis Ut",
													"description": "Required. Hostname for which the interactive query will be executed."
												}
											],
											"variable": [
												{
													"key": "organizationsId",
													"value": "labore quis Ut",
													"description": "(Required) Part of `name`. Required. Resource name for which the interactive query will be executed. Use the following format in your request: `organizations/{org}/hostStats/{dimensions}` Dimensions let you view metrics in meaningful groupings, such as `apiproxy`, `target_host`. The value of dimensions should be a comma-separated list as shown below `organizations/{org}/hostStats/apiproxy,request_verb`"
												},
												{
													"key": "hostStatsId",
													"value": "labore quis Ut",
													"description": "(Required) Part of `name`. See documentation of `organizationsId`."
												}
											]
										},
										"description": "Retrieve metrics grouped by dimensions in host level. The types of metrics you can retrieve include traffic, message counts, API call latency, response size, and cache hits and counts. Dimensions let you view metrics in meaningful groups. You can optionally pass dimensions as path parameters to the `stats` API. If dimensions are not specified, the metrics are computed on the entire set of data for the given time range."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/hostStats/:hostStatsId?select=labore quis Ut&timeUnit=labore quis Ut&timeRange=labore quis Ut&filter=labore quis Ut&sort=labore quis Ut&sortby=labore quis Ut&limit=labore quis Ut&offset=labore quis Ut&topk=labore quis Ut&tsAscending=true&realtime=true&tzo=labore quis Ut&accuracy=labore quis Ut&envgroupHostname=labore quis Ut",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"hostStats",
														":hostStatsId"
													],
													"query": [
														{
															"key": "select",
															"value": "labore quis Ut"
														},
														{
															"key": "timeUnit",
															"value": "labore quis Ut"
														},
														{
															"key": "timeRange",
															"value": "labore quis Ut"
														},
														{
															"key": "filter",
															"value": "labore quis Ut"
														},
														{
															"key": "sort",
															"value": "labore quis Ut"
														},
														{
															"key": "sortby",
															"value": "labore quis Ut"
														},
														{
															"key": "limit",
															"value": "labore quis Ut"
														},
														{
															"key": "offset",
															"value": "labore quis Ut"
														},
														{
															"key": "topk",
															"value": "labore quis Ut"
														},
														{
															"key": "tsAscending",
															"value": "true"
														},
														{
															"key": "realtime",
															"value": "true"
														},
														{
															"key": "tzo",
															"value": "labore quis Ut"
														},
														{
															"key": "accuracy",
															"value": "labore quis Ut"
														},
														{
															"key": "envgroupHostname",
															"value": "labore quis Ut"
														}
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `name`. Required. Resource name for which the interactive query will be executed. Use the following format in your request: `organizations/{org}/hostStats/{dimensions}` Dimensions let you view metrics in meaningful groupings, such as `apiproxy`, `target_host`. The value of dimensions should be a comma-separated list as shown below `organizations/{org}/hostStats/apiproxy,request_verb`"
														},
														{
															"key": "hostStatsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `name`. See documentation of `organizationsId`."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "{\n  \"metaData\": {\n    \"notices\": [\n      \"Ut sint\",\n      \"proident ad irure\"\n    ],\n    \"errors\": [\n      \"non eu\",\n      \"ipsum eu consectetur velit sint\"\n    ]\n  },\n  \"hosts\": [\n    {\n      \"name\": \"quis ad mollit irure\",\n      \"metrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dimensions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"name\": \"adipisicing et sunt laborum\",\n      \"metrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dimensions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"environments\": [\n    {\n      \"metrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dimensions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"name\": \"ipsum in sint\"\n    },\n    {\n      \"metrics\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"dimensions\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"name\": \"ipsum nisi\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Get Deployed Ingress Config",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/deployedIngressConfig?view=BASIC",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"v1",
												"organizations",
												"{{ORG_ID}}",
												"deployedIngressConfig"
											],
											"query": [
												{
													"key": "view",
													"value": "BASIC",
													"description": "When set to FULL, additional details about the specific deployments receiving traffic will be included in the IngressConfig response's RoutingRules."
												}
											],
											"variable": [
												{
													"key": "organizationsId",
													"value": "labore quis Ut",
													"description": "(Required) Part of `name`. Required. Name of the deployed configuration for the organization in the following format: 'organizations/{org}/deployedIngressConfig'."
												}
											]
										},
										"description": "Gets the deployed ingress configuration for an organization."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{ORG_ID}}/deployedIngressConfig?view=BASIC",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{ORG_ID}}",
														"deployedIngressConfig"
													],
													"query": [
														{
															"key": "view",
															"value": "BASIC"
														}
													],
													"variable": [
														{
															"key": "organizationsId",
															"value": "labore quis Ut",
															"description": "(Required) Part of `name`. Required. Name of the deployed configuration for the organization in the following format: 'organizations/{org}/deployedIngressConfig'."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "null"
										}
									]
								}
							]
						},
						{
							"name": "{organizationsId}:getSyncAuthorization",
							"item": [
								{
									"name": "Get Sync Authorization",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/v1/organizations/{{organizationsId}}:getSyncAuthorization",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"v1",
												"organizations",
												"{{organizationsId}}:getSyncAuthorization"
											]
										},
										"description": "Lists the service accounts with the permissions required to allow the Synchronizer to download environment data from the control plane. An ETag is returned in the response to `getSyncAuthorization`. Pass that ETag when calling [setSyncAuthorization](setSyncAuthorization) to ensure that you are updating the correct version. If you don't pass the ETag in the call to `setSyncAuthorization`, then the existing authorization is overwritten indiscriminately. For more information, see [Configure the Synchronizer](https://cloud.google.com/apigee/docs/hybrid/latest/synchronizer-access). **Note**: Available to Apigee hybrid only."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{organizationsId}}:getSyncAuthorization",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{organizationsId}}:getSyncAuthorization"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "{\n  \"identities\": [\n    \"ex Ut\",\n    \"est eu et fugiat\"\n  ],\n  \"etag\": \"qui co\"\n}"
										}
									]
								},
								{
									"name": "Get Sync Authorization1",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{BASE_URL}}/v1/organizations/{{organizationsId}}:getSyncAuthorization",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"v1",
												"organizations",
												"{{organizationsId}}:getSyncAuthorization"
											]
										},
										"description": "Lists the service accounts with the permissions required to allow the Synchronizer to download environment data from the control plane. An ETag is returned in the response to `getSyncAuthorization`. Pass that ETag when calling [setSyncAuthorization](setSyncAuthorization) to ensure that you are updating the correct version. If you don't pass the ETag in the call to `setSyncAuthorization`, then the existing authorization is overwritten indiscriminately. For more information, see [Configure the Synchronizer](https://cloud.google.com/apigee/docs/hybrid/latest/synchronizer-access). **Note**: Available to Apigee hybrid only."
									},
									"response": [
										{
											"name": "Successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{BASE_URL}}/v1/organizations/{{organizationsId}}:getSyncAuthorization",
													"host": [
														"{{BASE_URL}}"
													],
													"path": [
														"v1",
														"organizations",
														"{{organizationsId}}:getSyncAuthorization"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "{\n  \"identities\": [\n    \"Lorem sed est\",\n    \"deserunt officia ve\"\n  ],\n  \"etag\": \"Lorem adipisicing\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "List Organizations",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{BASE_URL}}/v1/organizations",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"v1",
										"organizations"
									]
								},
								"description": "Lists the Apigee organizations and associated Google Cloud projects that you have permission to access. See [Understanding organizations](https://cloud.google.com/apigee/docs/api-platform/fundamentals/organization-structure)."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BASE_URL}}/v1/organizations",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"v1",
												"organizations"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "{\n  \"organizations\": [\n    {\n      \"location\": \"incididunt in\",\n      \"organization\": \"reprehenderit do mollit dolore\",\n      \"projectId\": \"labore irure ut\",\n      \"projectIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"location\": \"consectetur dolore\",\n      \"organization\": \"Lorem ut ipsum veniam id\",\n      \"projectId\": \"ullamco magna enim\",\n      \"projectIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Create Organization",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"analyticsRegion\": \"id ei\",\n  \"runtimeType\": \"RUNTIME_TYPE_UNSPECIFIED\",\n  \"type\": \"TYPE_INTERNAL\",\n  \"runtimeDatabaseEncryptionKeyName\": \"aute sit\",\n  \"displayName\": \"fugiat sit tempor\",\n  \"properties\": {\n    \"property\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"customerName\": \"eiusmod qui laborum in\",\n  \"addonsConfig\": {\n    \"advancedApiOpsConfig\": {\n      \"enabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"monetizationConfig\": {\n      \"enabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"apiSecurityConfig\": {\n      \"enabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"connectorsPlatformConfig\": {\n      \"enabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"integrationConfig\": {\n      \"enabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"billingType\": \"EVALUATION\",\n  \"description\": \"in irure nostrud\",\n  \"portalDisabled\": false,\n  \"authorizedNetwork\": \"voluptate nisi do laboris reprehenderit\",\n  \"attributes\": [\n    \"sed reprehenderit\",\n    \"quis aute nostrud cupidatat\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE_URL}}/v1/organizations?parent=labore quis Ut",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"v1",
										"organizations"
									],
									"query": [
										{
											"key": "parent",
											"value": "labore quis Ut",
											"description": "Required. Name of the Google Cloud project in which to associate the Apigee organization. Pass the information as a query parameter using the following structure in your request: `projects/`"
										}
									]
								},
								"description": "Creates an Apigee organization. See [Create an Apigee organization](https://cloud.google.com/apigee/docs/api-platform/get-started/create-org)."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"analyticsRegion\": \"cillum veniam do\",\n  \"runtimeType\": \"RUNTIME_TYPE_UNSPECIFIED\",\n  \"type\": \"TYPE_PAID\",\n  \"runtimeDatabaseEncryptionKeyName\": \"dolor minim deserunt magna\",\n  \"displayName\": \"nisi fugiat non Duis laboris\",\n  \"properties\": {\n    \"property\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"customerName\": \"tempor consectetur aute in\",\n  \"addonsConfig\": {\n    \"advancedApiOpsConfig\": {\n      \"enabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"monetizationConfig\": {\n      \"enabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"apiSecurityConfig\": {\n      \"enabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"connectorsPlatformConfig\": {\n      \"enabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"integrationConfig\": {\n      \"enabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"billingType\": \"BILLING_TYPE_UNSPECIFIED\",\n  \"description\": \"nostrud labo\",\n  \"portalDisabled\": true,\n  \"authorizedNetwork\": \"sed qui dolor\",\n  \"attributes\": [\n    \"non magna aliquip laborum\",\n    \"incididunt minim reprehenderit\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/v1/organizations?parent=labore quis Ut",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"v1",
												"organizations"
											],
											"query": [
												{
													"key": "parent",
													"value": "labore quis Ut"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "null"
								}
							]
						},
						{
							"name": "Set Sync Authorization",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identities\": [\n    \"Lorem sed est\",\n    \"deserunt officia ve\"\n  ],\n  \"etag\": \"Lorem adipisicing\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE_URL}}/v1/organizations/{{organizationsId}}:setSyncAuthorization",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"v1",
										"organizations",
										"{{organizationsId}}:setSyncAuthorization"
									]
								},
								"description": "Sets the permissions required to allow the Synchronizer to download environment data from the control plane. You must call this API to enable proper functioning of hybrid. Pass the ETag when calling `setSyncAuthorization` to ensure that you are updating the correct version. To get an ETag, call [getSyncAuthorization](getSyncAuthorization). If you don't pass the ETag in the call to `setSyncAuthorization`, then the existing authorization is overwritten indiscriminately. For more information, see [Configure the Synchronizer](https://cloud.google.com/apigee/docs/hybrid/latest/synchronizer-access). **Note**: Available to Apigee hybrid only."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"identities\": [\n    \"Lorem sed est\",\n    \"deserunt officia ve\"\n  ],\n  \"etag\": \"Lorem adipisicing\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/v1/organizations/{{organizationsId}}:setSyncAuthorization",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"v1",
												"organizations",
												"{{organizationsId}}:setSyncAuthorization"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "{\n  \"identities\": [\n    \"Lorem sed est\",\n    \"deserunt officia ve\"\n  ],\n  \"etag\": \"Lorem adipisicing\"\n}"
								}
							]
						},
						{
							"name": "Set Addons",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"addonsConfig\": {\n    \"advancedApiOpsConfig\": {\n      \"enabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"monetizationConfig\": {\n      \"enabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"apiSecurityConfig\": {\n      \"enabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"connectorsPlatformConfig\": {\n      \"enabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"integrationConfig\": {\n      \"enabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE_URL}}/v1/organizations/{{organizationsId}}:setAddons",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"v1",
										"organizations",
										"{{organizationsId}}:setAddons"
									]
								},
								"description": "Configures the add-ons for the Apigee organization. The existing add-on configuration will be fully replaced."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"addonsConfig\": {\n    \"advancedApiOpsConfig\": {\n      \"enabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"monetizationConfig\": {\n      \"enabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"apiSecurityConfig\": {\n      \"enabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"connectorsPlatformConfig\": {\n      \"enabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"integrationConfig\": {\n      \"enabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{BASE_URL}}/v1/organizations/{{organizationsId}}:setAddons",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"v1",
												"organizations",
												"{{organizationsId}}:setAddons"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "null"
								}
							]
						},
						{
							"name": "Get Project Mapping",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{BASE_URL}}/v1/organizations/{{organizationsId}}:getProjectMapping",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"v1",
										"organizations",
										"{{organizationsId}}:getProjectMapping"
									]
								},
								"description": "Gets the project ID and region for an Apigee organization."
							},
							"response": [
								{
									"name": "Successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{BASE_URL}}/v1/organizations/{{organizationsId}}:getProjectMapping",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"v1",
												"organizations",
												"{{organizationsId}}:getProjectMapping"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "{\n  \"location\": \"qui labore et\",\n  \"organization\": \"ipsum incididunt Excepteur\",\n  \"projectId\": \"ea\",\n  \"projectIds\": [\n    \"eu velit qui nostrud\",\n    \"voluptate labore eu velit anim\"\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "monetization",
					"item": [
						{
							"name": "packages",
							"item": [
								{
									"name": "List Packages",
									"request": {
										"method": "GET",
										"header": []
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Provision Organization",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"analyticsRegion\": \"irure deserunt\",\n  \"runtimeLocation\": \"magna Excepteur ad nisi\",\n  \"authorizedNetwork\": \"labore cillum nostrud officia sunt\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/v1/projects/{{projectsId}}:provisionOrganization",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"v1",
								"projects",
								"{{projectsId}}:provisionOrganization"
							]
						},
						"description": "Provisions a new Apigee organization with a functioning runtime. This is the standard way to create trial organizations for a free Apigee trial."
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"analyticsRegion\": \"irure deserunt\",\n  \"runtimeLocation\": \"magna Excepteur ad nisi\",\n  \"authorizedNetwork\": \"labore cillum nostrud officia sunt\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE_URL}}/v1/projects/{{projectsId}}:provisionOrganization",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"v1",
										"projects",
										"{{projectsId}}:provisionOrganization"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "null"
						}
					]
				},
				{
					"name": "List Hybrid Issuers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/v1/hybrid/issuers",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"v1",
								"hybrid",
								"issuers"
							]
						},
						"description": "Lists hybrid services and its trusted issuers service account ids. This api is authenticated and unauthorized(allow all the users) and used by runtime authn-authz service to query control plane's issuer service account ids."
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BASE_URL}}/v1/hybrid/issuers",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"v1",
										"hybrid",
										"issuers"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "{\n  \"issuers\": [\n    {\n      \"emailIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"service\": \"deserunt minim quis\"\n    },\n    {\n      \"emailIds\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"service\": \"nostrud dolor in\"\n    }\n  ]\n}"
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{PASSWORD}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{USERNAME}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "BASE_URL",
			"value": "",
			"type": "string"
		},
		{
			"key": "natAddressesId",
			"value": "",
			"type": "any"
		},
		{
			"key": "instancesId",
			"value": "",
			"type": "any"
		},
		{
			"key": "archiveDeploymentsId",
			"value": "",
			"type": "any"
		},
		{
			"key": "environmentsId",
			"value": "",
			"type": "any"
		},
		{
			"key": "securityProfilesId",
			"value": "",
			"type": "any"
		},
		{
			"key": "subscriptionsId",
			"value": "",
			"type": "any"
		},
		{
			"key": "ORG_ID",
			"value": "",
			"type": "any"
		},
		{
			"key": "projectsId",
			"value": "",
			"type": "any"
		},
		{
			"key": "USERNAME",
			"value": ""
		},
		{
			"key": "PASSWORD",
			"value": ""
		}
	]
}